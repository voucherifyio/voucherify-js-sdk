/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Voucherify);
  }
}(this, function(expect, Voucherify) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Voucherify.ProductsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProductsApi', function() {
    describe('createProduct', function() {
      it('should call createProduct successfully', function(done) {
        //uncomment below and update the code to test createProduct
        //instance.createProduct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSku', function() {
      it('should call createSku successfully', function(done) {
        //uncomment below and update the code to test createSku
        //instance.createSku(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteProduct', function() {
      it('should call deleteProduct successfully', function(done) {
        //uncomment below and update the code to test deleteProduct
        //instance.deleteProduct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSku', function() {
      it('should call deleteSku successfully', function(done) {
        //uncomment below and update the code to test deleteSku
        //instance.deleteSku(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProduct', function() {
      it('should call getProduct successfully', function(done) {
        //uncomment below and update the code to test getProduct
        //instance.getProduct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSku', function() {
      it('should call getSku successfully', function(done) {
        //uncomment below and update the code to test getSku
        //instance.getSku(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('importProductsUsingCsv', function() {
      it('should call importProductsUsingCsv successfully', function(done) {
        //uncomment below and update the code to test importProductsUsingCsv
        //instance.importProductsUsingCsv(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('importSKUsUsingCsv', function() {
      it('should call importSKUsUsingCsv successfully', function(done) {
        //uncomment below and update the code to test importSKUsUsingCsv
        //instance.importSKUsUsingCsv(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listProducts', function() {
      it('should call listProducts successfully', function(done) {
        //uncomment below and update the code to test listProducts
        //instance.listProducts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSKUsInProduct', function() {
      it('should call listSKUsInProduct successfully', function(done) {
        //uncomment below and update the code to test listSKUsInProduct
        //instance.listSKUsInProduct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateProduct', function() {
      it('should call updateProduct successfully', function(done) {
        //uncomment below and update the code to test updateProduct
        //instance.updateProduct(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateProductsInBulk', function() {
      it('should call updateProductsInBulk successfully', function(done) {
        //uncomment below and update the code to test updateProductsInBulk
        //instance.updateProductsInBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateProductsMetadataInBulk', function() {
      it('should call updateProductsMetadataInBulk successfully', function(done) {
        //uncomment below and update the code to test updateProductsMetadataInBulk
        //instance.updateProductsMetadataInBulk(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSku', function() {
      it('should call updateSku successfully', function(done) {
        //uncomment below and update the code to test updateSku
        //instance.updateSku(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
