/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * OpenAPI spec version: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AccessSettings } from '../models/AccessSettings';
import { CampaignsUpdateRequestBodyOptions } from '../models/CampaignsUpdateRequestBodyOptions';
import { Discount } from '../models/Discount';
import { Gift } from '../models/Gift';
import { LoyaltyTiersExpirationAll } from '../models/LoyaltyTiersExpirationAll';
import { ReferralProgram } from '../models/ReferralProgram';
import { ValidityHours } from '../models/ValidityHours';
import { ValidityTimeframe } from '../models/ValidityTimeframe';
import { HttpFile } from '../http/http';

export class CampaignsUpdateRequestBody {
    /**
    * Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. 
    */
    'startDate'?: Date | null;
    /**
    * Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.
    */
    'expirationDate'?: Date | null;
    'validityTimeframe'?: ValidityTimeframe;
    /**
    * Integer array corresponding to the particular days of the week in which the voucher is valid.  - `0` Sunday - `1` Monday - `2` Tuesday - `3` Wednesday - `4` Thursday - `5` Friday - `6` Saturday
    */
    'validityDayOfWeek'?: Array<CampaignsUpdateRequestBodyValidityDayOfWeekEnum>;
    'validityHours'?: ValidityHours;
    /**
    * An optional field to keep any extra textual information about the campaign such as a campaign description and details.
    */
    'description'?: string | null;
    /**
    * The category assigned to the campaign. Either pass this parameter OR the `category_id`.
    */
    'category'?: string | null;
    /**
    * The metadata object stores all custom attributes assigned to the campaign. A set of key/value pairs that you can attach to a campaign object. It can be useful for storing additional information about the campaign in a structured format.
    */
    'metadata'?: any | null;
    /**
    * Determine which metadata should be removed from campaign.
    */
    'unsetMetadataFields'?: Array<string> | null;
    /**
    * Unique category ID that this campaign belongs to. Either pass this parameter OR the `category`.
    */
    'categoryId'?: string | null;
    'accessSettings'?: AccessSettings;
    /**
    * Defines the amount of time the vouchers will be active after publishing. The value is shown in the ISO 8601 format. For example, a voucher with the value of P24D will be valid for a duration of 24 days.
    */
    'activityDurationAfterPublishing'?: string | null;
    /**
    * If this value is set to `true`, customers will be able to join the campaign only once. It is always `false` for generic (standalone) vouchers campaigns and it cannot be changed in them. It is always `true` for loyalty campaigns and it cannot be changed in them.
    */
    'joinOnce'?: boolean | null;
    /**
    * Indicates whether customers will be able to auto-join a loyalty campaign if any earning rule is fulfilled.
    */
    'autoJoin'?: boolean | null;
    /**
    * Defines whether the campaign can be updated with new vouchers after campaign creation.  - `AUTO_UPDATE`: By choosing the auto update option you will create a campaign that can be enhanced by new vouchers after the time of creation (e.g. by publish vouchers method). -  `STATIC`: vouchers need to be manually published.  If the `type` of the campaign is `STANDALONE`, the type cannot be changed. Also, the `type` cannot be changed to `STANDALONE`.
    */
    'type'?: CampaignsUpdateRequestBodyTypeEnum | null;
    'discount'?: Discount;
    'referralProgram'?: ReferralProgram;
    'gift'?: Gift;
    'loyaltyTiersExpiration'?: LoyaltyTiersExpirationAll;
    'options'?: CampaignsUpdateRequestBodyOptions | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "startDate",
            "baseName": "start_date",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "expirationDate",
            "baseName": "expiration_date",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "validityTimeframe",
            "baseName": "validity_timeframe",
            "type": "ValidityTimeframe",
            "format": ""
        },
        {
            "name": "validityDayOfWeek",
            "baseName": "validity_day_of_week",
            "type": "Array<CampaignsUpdateRequestBodyValidityDayOfWeekEnum>",
            "format": ""
        },
        {
            "name": "validityHours",
            "baseName": "validity_hours",
            "type": "ValidityHours",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "category",
            "baseName": "category",
            "type": "string",
            "format": ""
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "any",
            "format": ""
        },
        {
            "name": "unsetMetadataFields",
            "baseName": "unset_metadata_fields",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "categoryId",
            "baseName": "category_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "accessSettings",
            "baseName": "access_settings",
            "type": "AccessSettings",
            "format": ""
        },
        {
            "name": "activityDurationAfterPublishing",
            "baseName": "activity_duration_after_publishing",
            "type": "string",
            "format": ""
        },
        {
            "name": "joinOnce",
            "baseName": "join_once",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "autoJoin",
            "baseName": "auto_join",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "CampaignsUpdateRequestBodyTypeEnum",
            "format": ""
        },
        {
            "name": "discount",
            "baseName": "discount",
            "type": "Discount",
            "format": ""
        },
        {
            "name": "referralProgram",
            "baseName": "referral_program",
            "type": "ReferralProgram",
            "format": ""
        },
        {
            "name": "gift",
            "baseName": "gift",
            "type": "Gift",
            "format": ""
        },
        {
            "name": "loyaltyTiersExpiration",
            "baseName": "loyalty_tiers_expiration",
            "type": "LoyaltyTiersExpirationAll",
            "format": ""
        },
        {
            "name": "options",
            "baseName": "options",
            "type": "CampaignsUpdateRequestBodyOptions",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return CampaignsUpdateRequestBody.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum CampaignsUpdateRequestBodyValidityDayOfWeekEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1,
    NUMBER_2 = 2,
    NUMBER_3 = 3,
    NUMBER_4 = 4,
    NUMBER_5 = 5,
    NUMBER_6 = 6
}
export enum CampaignsUpdateRequestBodyTypeEnum {
    AutoUpdate = 'AUTO_UPDATE',
    Static = 'STATIC'
}

