/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * OpenAPI spec version: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Category object with `stacking_rules_type`
*/
export class CategoryWithStackingRulesType {
    /**
    * Unique category ID assigned by Voucherify.
    */
    'id'?: string | null;
    /**
    * Category name.
    */
    'name'?: string | null;
    /**
    * Category hierarchy. Categories with lower hierarchy are processed before categories with higher hierarchy value.
    */
    'hierarchy'?: number | null;
    /**
    * The type of the object represented by the JSON. This object stores information about the category.
    */
    'object'?: CategoryWithStackingRulesTypeObjectEnum | null;
    /**
    * Timestamp representing the date and time when the category was created. The value is shown in the ISO 8601 format.
    */
    'createdAt'?: Date | null;
    /**
    * Timestamp representing the date and time when the category was updated. The value is shown in the ISO 8601 format.
    */
    'updatedAt'?: Date | null;
    /**
    * The type of the stacking rule eligibility.
    */
    'stackingRulesType'?: CategoryWithStackingRulesTypeStackingRulesTypeEnum | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "hierarchy",
            "baseName": "hierarchy",
            "type": "number",
            "format": ""
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "CategoryWithStackingRulesTypeObjectEnum",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "stackingRulesType",
            "baseName": "stacking_rules_type",
            "type": "CategoryWithStackingRulesTypeStackingRulesTypeEnum",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return CategoryWithStackingRulesType.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum CategoryWithStackingRulesTypeObjectEnum {
    Category = 'category'
}
export enum CategoryWithStackingRulesTypeStackingRulesTypeEnum {
    Joint = 'JOINT',
    Exclusive = 'EXCLUSIVE'
}

