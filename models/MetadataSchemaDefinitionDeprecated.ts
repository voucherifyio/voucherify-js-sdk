/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * OpenAPI spec version: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Custom definition name. This is also shown in **Project Settings** > **Metadata Schema** in the Voucherify Dashboard.
*/
export class MetadataSchemaDefinitionDeprecated {
    'type'?: MetadataSchemaDefinitionDeprecatedTypeEnum | null;
    /**
    * Indicates whether the definition is an array.
    */
    'array'?: boolean | null;
    /**
    * Indicates whether this definition is optional or not optional for the resource.
    */
    'optional'?: boolean | null;
    /**
    * Returns the name of the custom resource if the resource was previously defined in the Dashboard as a custom (non-standard) Nested object.
    */
    'objectType'?: string | null;
    /**
    * Array of possible values when the setting for `is equal to any of` in the Dashboard is defined explicitly.
    */
    'eq'?: Array<any> | null;
    /**
    * Array of values that are not allowed when the setting for `is not equal to any of` in the Dashboard is defined explicitly.
    */
    'ne'?: Array<any> | null;
    /**
    * A property of `number` type must have `less than` this value.
    */
    'lt'?: number | null;
    /**
    * A property of `number` type must be `less than or equal` to this value.
    */
    'lte'?: number | null;
    /**
    * A property of `number` type must be `greater than` this value.
    */
    'gt'?: number | null;
    /**
    * A property of `number` type must be `greater than or equal` to this value.
    */
    'gte'?: number | null;
    /**
    * Indicates whether the definition was deleted from the schema.
    */
    'deleted'?: boolean | null;
    /**
    * Value for maximum length when the setting for `has maximum length of` in the Dashboard is defined explicitly.
    */
    'maxLength'?: number | null;
    /**
    * Value indicating minimum length when the setting for `has minimum length of` in the Dashboard is defined explicitly.
    */
    'minLength'?: number | null;
    /**
    * Value indicating exact length when the setting for `has exact length of` in the Dashboard is defined explicitly.
    */
    'exactLength'?: number | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "type",
            "baseName": "type",
            "type": "MetadataSchemaDefinitionDeprecatedTypeEnum",
            "format": ""
        },
        {
            "name": "array",
            "baseName": "array",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "optional",
            "baseName": "optional",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "objectType",
            "baseName": "objectType",
            "type": "string",
            "format": ""
        },
        {
            "name": "eq",
            "baseName": "eq",
            "type": "Array<any>",
            "format": ""
        },
        {
            "name": "ne",
            "baseName": "ne",
            "type": "Array<any>",
            "format": ""
        },
        {
            "name": "lt",
            "baseName": "lt",
            "type": "number",
            "format": ""
        },
        {
            "name": "lte",
            "baseName": "lte",
            "type": "number",
            "format": ""
        },
        {
            "name": "gt",
            "baseName": "gt",
            "type": "number",
            "format": ""
        },
        {
            "name": "gte",
            "baseName": "gte",
            "type": "number",
            "format": ""
        },
        {
            "name": "deleted",
            "baseName": "deleted",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "maxLength",
            "baseName": "maxLength",
            "type": "number",
            "format": ""
        },
        {
            "name": "minLength",
            "baseName": "minLength",
            "type": "number",
            "format": ""
        },
        {
            "name": "exactLength",
            "baseName": "exactLength",
            "type": "number",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return MetadataSchemaDefinitionDeprecated.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum MetadataSchemaDefinitionDeprecatedTypeEnum {
    String = 'string',
    Number = 'number',
    Object = 'object',
    Date = 'date',
    Datetime = 'datetime',
    Geopoint = 'geopoint',
    Boolean = 'boolean',
    ImageUrl = 'image_url'
}

