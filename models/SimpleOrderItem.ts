/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * OpenAPI spec version: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class SimpleOrderItem {
    /**
    * Unique identifier of the order line item.
    */
    'id'?: string | null;
    /**
    * The type of the object represented by JSON. This object stores information about the `order_item`.
    */
    'object'?: SimpleOrderItemObjectEnum | null;
    /**
    * The merchant\'s product/SKU ID (if it is different from the Voucherify product/SKU ID). It is useful in the integration between multiple systems. It can be an ID from an eCommerce site, a database, or a third-party service.
    */
    'sourceId'?: string | null;
    /**
    * Used along with the `source_id` property, can be set to either SKU or product.
    */
    'relatedObject'?: SimpleOrderItemRelatedObjectEnum | null;
    /**
    * Unique identifier of the product. It is assigned by Voucherify.
    */
    'productId'?: string | null;
    /**
    * Unique identifier of the SKU. It is assigned by Voucherify.
    */
    'skuId'?: string | null;
    /**
    * Quantity of the particular item in the cart.
    */
    'quantity'?: number | null;
    /**
    * Quantity of items changed by the application of a new quantity items. It can be positive when an item is added or negative if an item is replaced.
    */
    'appliedQuantity'?: number | null;
    /**
    * Amount for the items changed by the application of a new quantity items. It can be positive when an item is added or negative if an item is replaced.
    */
    'appliedQuantityAmount'?: number | null;
    /**
    * Number of discounted items.
    */
    'discountQuantity'?: number | null;
    /**
    * Number of the discounted items applied in the transaction.
    */
    'appliedDiscountQuantity'?: number | null;
    /**
    * Total amount of the order item (price * quantity).
    */
    'amount'?: number | null;
    /**
    * Sum of all order-item-level discounts applied to the order.
    */
    'discountAmount'?: number | null;
    /**
    * Order-level discount amount applied in the transaction.
    */
    'appliedDiscountAmount'?: number | null;
    /**
    * Unit price of an item. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.
    */
    'price'?: number | null;
    /**
    * Final order item amount after the applied item-level discount.  If there are no item-level discounts applied, this item is equal to the `amount`.    `subtotal_amount`=`amount`-`discount_amount`
    */
    'subtotalAmount'?: number | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "SimpleOrderItemObjectEnum",
            "format": ""
        },
        {
            "name": "sourceId",
            "baseName": "source_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "relatedObject",
            "baseName": "related_object",
            "type": "SimpleOrderItemRelatedObjectEnum",
            "format": ""
        },
        {
            "name": "productId",
            "baseName": "product_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "skuId",
            "baseName": "sku_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "quantity",
            "baseName": "quantity",
            "type": "number",
            "format": ""
        },
        {
            "name": "appliedQuantity",
            "baseName": "applied_quantity",
            "type": "number",
            "format": ""
        },
        {
            "name": "appliedQuantityAmount",
            "baseName": "applied_quantity_amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "discountQuantity",
            "baseName": "discount_quantity",
            "type": "number",
            "format": ""
        },
        {
            "name": "appliedDiscountQuantity",
            "baseName": "applied_discount_quantity",
            "type": "number",
            "format": ""
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "discountAmount",
            "baseName": "discount_amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "appliedDiscountAmount",
            "baseName": "applied_discount_amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "price",
            "baseName": "price",
            "type": "number",
            "format": ""
        },
        {
            "name": "subtotalAmount",
            "baseName": "subtotal_amount",
            "type": "number",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return SimpleOrderItem.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum SimpleOrderItemObjectEnum {
    OrderItem = 'order_item'
}
export enum SimpleOrderItemRelatedObjectEnum {
    Product = 'product',
    Sku = 'sku'
}

