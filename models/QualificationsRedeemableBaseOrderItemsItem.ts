/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * OpenAPI spec version: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ApplicationDetailsItem } from '../models/ApplicationDetailsItem';
import { OrderCalculatedItemProduct } from '../models/OrderCalculatedItemProduct';
import { OrderCalculatedItemSku } from '../models/OrderCalculatedItemSku';
import { HttpFile } from '../http/http';

export class QualificationsRedeemableBaseOrderItemsItem {
    /**
    * Unique identifier of the order line item.
    */
    'id'?: string | null;
    /**
    * Unique identifier of the SKU. It is assigned by Voucherify.
    */
    'skuId'?: string | null;
    /**
    * Unique identifier of the product. It is assigned by Voucherify.
    */
    'productId'?: string | null;
    /**
    * Used along with the source_id property, can be set to either sku or product.
    */
    'relatedObject'?: QualificationsRedeemableBaseOrderItemsItemRelatedObjectEnum | null;
    /**
    * The merchant\'s product/SKU ID (if it is different from the Voucherify product/SKU ID). It is useful in the integration between multiple systems. It can be an ID from an eCommerce site, a database, or a third-party service.
    */
    'sourceId'?: string | null;
    /**
    * The quantity of the particular item in the cart.
    */
    'quantity'?: number | null;
    /**
    * Number of dicounted items.
    */
    'discountQuantity'?: number | null;
    /**
    * A positive integer in the smallest unit quantity representing the total amount of the order; this is the sum of the order items\' quantity.
    */
    'initialQuantity'?: number | null;
    /**
    * The total amount of the order item (price * quantity).
    */
    'amount'?: number | null;
    /**
    * Sum of all order-item-level discounts applied to the order.
    */
    'discountAmount'?: number | null;
    /**
    * This field shows the order-level discount applied.
    */
    'appliedDiscountAmount'?: number | null;
    /**
    * Number of the discounted items applied in the transaction.
    */
    'appliedDiscountQuantity'?: number | null;
    /**
    * Quantity of items changed by the application of a new quantity items. It can be positive when an item is added or negative if an item is replaced.
    */
    'appliedQuantity'?: number | null;
    /**
    * Amount for the items changed by the application of a new quantity items. It can be positive when an item is added or negative if an item is replaced.
    */
    'appliedQuantityAmount'?: number | null;
    /**
    * A positive integer in the smallest currency unit (e.g. 100 cents for $1.00) representing the total amount of the order. This is the sum of the order items\' amounts.
    */
    'initialAmount'?: number | null;
    /**
    * Unit price of an item. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.
    */
    'price'?: number | null;
    /**
    * Final order item amount after the applied item-level discount.  If there are no item-level discounts applied, this item is equal to the `amount`.    `subtotal_amount`=`amount`-`applied_discount_amount`
    */
    'subtotalAmount'?: number | null;
    'product'?: OrderCalculatedItemProduct | null;
    'sku'?: OrderCalculatedItemSku | null;
    /**
    * The type of the object represented by JSON.
    */
    'object'?: QualificationsRedeemableBaseOrderItemsItemObjectEnum | null;
    /**
    * A set of custom key/value pairs that you can attach to an item object. It can be useful for storing additional information about the item in a structured format. It can be used to define business validation rules or discount formulas.
    */
    'metadata'?: any | null;
    /**
    * Array containing details about the items that are replaced and the items that are replacements for discounts with the `REPLACE_ITEMS` effect.
    */
    'applicationDetails'?: Array<ApplicationDetailsItem>;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "skuId",
            "baseName": "sku_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "productId",
            "baseName": "product_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "relatedObject",
            "baseName": "related_object",
            "type": "QualificationsRedeemableBaseOrderItemsItemRelatedObjectEnum",
            "format": ""
        },
        {
            "name": "sourceId",
            "baseName": "source_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "quantity",
            "baseName": "quantity",
            "type": "number",
            "format": ""
        },
        {
            "name": "discountQuantity",
            "baseName": "discount_quantity",
            "type": "number",
            "format": ""
        },
        {
            "name": "initialQuantity",
            "baseName": "initial_quantity",
            "type": "number",
            "format": ""
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "discountAmount",
            "baseName": "discount_amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "appliedDiscountAmount",
            "baseName": "applied_discount_amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "appliedDiscountQuantity",
            "baseName": "applied_discount_quantity",
            "type": "number",
            "format": ""
        },
        {
            "name": "appliedQuantity",
            "baseName": "applied_quantity",
            "type": "number",
            "format": ""
        },
        {
            "name": "appliedQuantityAmount",
            "baseName": "applied_quantity_amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "initialAmount",
            "baseName": "initial_amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "price",
            "baseName": "price",
            "type": "number",
            "format": ""
        },
        {
            "name": "subtotalAmount",
            "baseName": "subtotal_amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "product",
            "baseName": "product",
            "type": "OrderCalculatedItemProduct",
            "format": ""
        },
        {
            "name": "sku",
            "baseName": "sku",
            "type": "OrderCalculatedItemSku",
            "format": ""
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "QualificationsRedeemableBaseOrderItemsItemObjectEnum",
            "format": ""
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "any",
            "format": ""
        },
        {
            "name": "applicationDetails",
            "baseName": "application_details",
            "type": "Array<ApplicationDetailsItem>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return QualificationsRedeemableBaseOrderItemsItem.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum QualificationsRedeemableBaseOrderItemsItemRelatedObjectEnum {
    Product = 'product',
    Sku = 'sku'
}
export enum QualificationsRedeemableBaseOrderItemsItemObjectEnum {
    OrderItem = 'order_item'
}

