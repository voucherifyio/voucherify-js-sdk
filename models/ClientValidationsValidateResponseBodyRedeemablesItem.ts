/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * OpenAPI spec version: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ApplicableToResultList } from '../models/ApplicableToResultList';
import { CategoryWithStackingRulesType } from '../models/CategoryWithStackingRulesType';
import { ClientValidationsValidateResponseBodyRedeemablesItemOrder } from '../models/ClientValidationsValidateResponseBodyRedeemablesItemOrder';
import { ClientValidationsValidateResponseBodyRedeemablesItemResult } from '../models/ClientValidationsValidateResponseBodyRedeemablesItemResult';
import { InapplicableToResultList } from '../models/InapplicableToResultList';
import { HttpFile } from '../http/http';

export class ClientValidationsValidateResponseBodyRedeemablesItem {
    'status'?: ClientValidationsValidateResponseBodyRedeemablesItemStatusEnum;
    /**
    * Redeemable ID, i.e. the voucher code.
    */
    'id'?: string | null;
    /**
    * Redeemable\'s object type.
    */
    'object'?: ClientValidationsValidateResponseBodyRedeemablesItemObjectEnum | null;
    'order'?: ClientValidationsValidateResponseBodyRedeemablesItemOrder;
    'applicableTo'?: ApplicableToResultList;
    'inapplicableTo'?: InapplicableToResultList;
    'result'?: ClientValidationsValidateResponseBodyRedeemablesItemResult;
    /**
    * The metadata object stores all custom attributes in the form of key/value pairs assigned to the redeemable.
    */
    'metadata'?: any | null;
    'categories'?: Array<CategoryWithStackingRulesType> | null;
    /**
    * Campaign name. Displayed only if the `options.expand` is passed with a `redeemable` value in the validation request body.
    */
    'campaignName'?: string | null;
    /**
    * Unique campaign ID assigned by Voucherify. Displayed only if the `options.expand` is passed with a `redeemable` value in the validation request body.
    */
    'campaignId'?: string | null;
    /**
    * Name of the promotion tier. Displayed only if the `options.expand` is passed with a `redeemable` value in the validation request body.
    */
    'name'?: string | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "status",
            "baseName": "status",
            "type": "ClientValidationsValidateResponseBodyRedeemablesItemStatusEnum",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "ClientValidationsValidateResponseBodyRedeemablesItemObjectEnum",
            "format": ""
        },
        {
            "name": "order",
            "baseName": "order",
            "type": "ClientValidationsValidateResponseBodyRedeemablesItemOrder",
            "format": ""
        },
        {
            "name": "applicableTo",
            "baseName": "applicable_to",
            "type": "ApplicableToResultList",
            "format": ""
        },
        {
            "name": "inapplicableTo",
            "baseName": "inapplicable_to",
            "type": "InapplicableToResultList",
            "format": ""
        },
        {
            "name": "result",
            "baseName": "result",
            "type": "ClientValidationsValidateResponseBodyRedeemablesItemResult",
            "format": ""
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "any",
            "format": ""
        },
        {
            "name": "categories",
            "baseName": "categories",
            "type": "Array<CategoryWithStackingRulesType>",
            "format": ""
        },
        {
            "name": "campaignName",
            "baseName": "campaign_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "campaignId",
            "baseName": "campaign_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ClientValidationsValidateResponseBodyRedeemablesItem.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum ClientValidationsValidateResponseBodyRedeemablesItemStatusEnum {
    Applicable = 'APPLICABLE',
    Inapplicable = 'INAPPLICABLE',
    Skipped = 'SKIPPED'
}
export enum ClientValidationsValidateResponseBodyRedeemablesItemObjectEnum {
    Voucher = 'voucher',
    PromotionTier = 'promotion_tier'
}

