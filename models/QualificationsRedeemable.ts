/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * OpenAPI spec version: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ApplicableToResultList } from '../models/ApplicableToResultList';
import { CategoryWithStackingRulesType } from '../models/CategoryWithStackingRulesType';
import { InapplicableToResultList } from '../models/InapplicableToResultList';
import { QualificationsRedeemableBase } from '../models/QualificationsRedeemableBase';
import { QualificationsRedeemableOrder } from '../models/QualificationsRedeemableOrder';
import { RedeemableResult } from '../models/RedeemableResult';
import { ValidationRulesAssignmentsList } from '../models/ValidationRulesAssignmentsList';
import { HttpFile } from '../http/http';

export class QualificationsRedeemable {
    /**
    * ID of the redeemable. For a voucher, it\'s its `code` value.
    */
    'id'?: string | null;
    /**
    * Object type of the redeemable.
    */
    'object'?: QualificationsRedeemableObjectEnum | null;
    /**
    * Timestamp representing the date and time when the object was created. The value is shown in the ISO 8601 format.
    */
    'createdAt'?: Date | null;
    'result'?: RedeemableResult;
    'order'?: QualificationsRedeemableOrder | null;
    /**
    * A unique validation rule identifier assigned by the Voucherify API. The validation rule is verified before points are added to the balance.
    */
    'validationRuleId'?: string | null;
    'applicableTo'?: ApplicableToResultList;
    'inapplicableTo'?: InapplicableToResultList;
    /**
    * The metadata object stores all custom attributes assigned to the product. A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format.
    */
    'metadata'?: any | null;
    /**
    * List of category information.
    */
    'categories'?: Array<CategoryWithStackingRulesType> | null;
    /**
    * Name of the earning rule. This is displayed as a header for the earning rule in the Dashboard.
    */
    'banner'?: string | null;
    /**
    * Name of the redeemable.
    */
    'name'?: string | null;
    /**
    * Name of the campaign associated to the redeemable. This field is available only if object is not `campaign`
    */
    'campaignName'?: string | null;
    /**
    * Id of the campaign associated to the redeemable. This field is available only if object is not `campaign`
    */
    'campaignId'?: string | null;
    'validationRulesAssignments'?: ValidationRulesAssignmentsList;
    'redeemables'?: Array<QualificationsRedeemableBase> | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "QualificationsRedeemableObjectEnum",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "result",
            "baseName": "result",
            "type": "RedeemableResult",
            "format": ""
        },
        {
            "name": "order",
            "baseName": "order",
            "type": "QualificationsRedeemableOrder",
            "format": ""
        },
        {
            "name": "validationRuleId",
            "baseName": "validation_rule_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "applicableTo",
            "baseName": "applicable_to",
            "type": "ApplicableToResultList",
            "format": ""
        },
        {
            "name": "inapplicableTo",
            "baseName": "inapplicable_to",
            "type": "InapplicableToResultList",
            "format": ""
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "any",
            "format": ""
        },
        {
            "name": "categories",
            "baseName": "categories",
            "type": "Array<CategoryWithStackingRulesType>",
            "format": ""
        },
        {
            "name": "banner",
            "baseName": "banner",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "campaignName",
            "baseName": "campaign_name",
            "type": "string",
            "format": ""
        },
        {
            "name": "campaignId",
            "baseName": "campaign_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "validationRulesAssignments",
            "baseName": "validation_rules_assignments",
            "type": "ValidationRulesAssignmentsList",
            "format": ""
        },
        {
            "name": "redeemables",
            "baseName": "redeemables",
            "type": "Array<QualificationsRedeemableBase>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return QualificationsRedeemable.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum QualificationsRedeemableObjectEnum {
    Campaign = 'campaign',
    PromotionTier = 'promotion_tier',
    PromotionStack = 'promotion_stack',
    Voucher = 'voucher'
}

