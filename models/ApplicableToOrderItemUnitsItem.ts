/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * OpenAPI spec version: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class ApplicableToOrderItemUnitsItem {
    /**
    * Number assigned to the order line item in accordance with the order sent in the request.
    */
    'index'?: number;
    /**
    * Numbers of units in the order line covered by the discount; e.g. `2, 5, 8` for 10 units with the setting `\"skip_initially\": 1`, `\"repeat\": 3`. The counting of units starts from `1`. The maximum quantity of all handled units is 1000. If the quantity of all order items exceeds 1000, this array is not returned, but `units_limit_exceeded: true`. However, the discount is calculated properly for all relevant units.
    */
    'units'?: Array<number>;
    /**
    * Returned as `true` only when the sum total of `quantity` of all order items exceeds 1000.
    */
    'unitsLimitExceeded'?: boolean;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "index",
            "baseName": "index",
            "type": "number",
            "format": ""
        },
        {
            "name": "units",
            "baseName": "units",
            "type": "Array<number>",
            "format": ""
        },
        {
            "name": "unitsLimitExceeded",
            "baseName": "units_limit_exceeded",
            "type": "boolean",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ApplicableToOrderItemUnitsItem.attributeTypeMap;
    }

    public constructor() {
    }
}
