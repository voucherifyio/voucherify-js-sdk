/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * OpenAPI spec version: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { LoyaltiesEarningRulesEnableResponseBodyLoyaltyOrderItemsQuantityApplicableToItem } from '../models/LoyaltiesEarningRulesEnableResponseBodyLoyaltyOrderItemsQuantityApplicableToItem';
import { HttpFile } from '../http/http';

/**
* Defines the ratio based on the property defined in the calculation_type parameter. For every set of value (1, 10, etc) defined in the every parameter for the property defined in calculation_type, give the customer the number of points defined in the points parameter. In other words, for every calculation_type, give points.
*/
export class LoyaltiesEarningRulesEnableResponseBodyLoyaltyOrderItemsQuantity {
    /**
    * Value is multiplied by 100 to precisely represent 2 decimal places. For example, a $10 order amount is written as 1000.
    */
    'every'?: number | null;
    /**
    * Number of points to be awarded, i.e. how many points to be added to the loyalty card.
    */
    'points'?: number | null;
    /**
    * Formula used to dynamically calculate the rewarded points.
    */
    'pointsFormula'?: string | null;
    /**
    * Type of object which will be covered by the earning rule. This is required together with `id`. Can be replaced by the `applicable_to` array. In response, the value of the first object is returned even if `applicable_to` array was used.
    */
    'object'?: LoyaltiesEarningRulesEnableResponseBodyLoyaltyOrderItemsQuantityObjectEnum | null;
    /**
    * Unique ID of the resource assigned by Voucherify. This is required together with `object`. Can be replaced by the `applicable_to` array. In response, the value of the first object is returned even if `applicable_to` array was used. Values are, for example, `pc_75U0dHlr7u75BJodrW1AE3t6` for product collection, `prod_0bae32322150fd0546` for a product, or `sku_0b7d7dfb090be5c619` for a SKU.
    */
    'id'?: string | null;
    /**
    * Defines products, SKUs, or product collections covered by the earning rule. Can be replaced by `object` and `id` to define only one object.
    */
    'applicableTo'?: Array<LoyaltiesEarningRulesEnableResponseBodyLoyaltyOrderItemsQuantityApplicableToItem> | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "every",
            "baseName": "every",
            "type": "number",
            "format": ""
        },
        {
            "name": "points",
            "baseName": "points",
            "type": "number",
            "format": ""
        },
        {
            "name": "pointsFormula",
            "baseName": "points_formula",
            "type": "string",
            "format": ""
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "LoyaltiesEarningRulesEnableResponseBodyLoyaltyOrderItemsQuantityObjectEnum",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "applicableTo",
            "baseName": "applicable_to",
            "type": "Array<LoyaltiesEarningRulesEnableResponseBodyLoyaltyOrderItemsQuantityApplicableToItem>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return LoyaltiesEarningRulesEnableResponseBodyLoyaltyOrderItemsQuantity.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum LoyaltiesEarningRulesEnableResponseBodyLoyaltyOrderItemsQuantityObjectEnum {
    ProductsCollection = 'products_collection',
    Product = 'product',
    Sku = 'sku'
}

