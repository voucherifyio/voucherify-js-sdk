/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * OpenAPI spec version: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { LoyaltyCardTransactionDetails } from '../models/LoyaltyCardTransactionDetails';
import { LoyaltyCardTransactionsType } from '../models/LoyaltyCardTransactionsType';
import { HttpFile } from '../http/http';

export class LoyaltyCardTransaction {
    /**
    * Unique transaction ID.
    */
    'id'?: string | null;
    /**
    * The merchant\'s transaction ID if it is different from the Voucherify transaction ID. It is really useful in case of an integration between multiple systems. It can be a transaction ID from a CRM system, database or 3rd-party service. In case of a redemption, this value is null.
    */
    'sourceId'?: string | null;
    /**
    * Unique voucher ID.
    */
    'voucherId'?: string | null;
    /**
    * Unqiue campaign ID of the voucher\'s parent campaign if it is part of campaign that generates bulk codes.
    */
    'campaignId'?: string | null;
    /**
    * The channel through which the transaction took place, whether through the API or the the Dashboard. In case of a redemption, this value is null.
    */
    'source'?: string | null;
    /**
    * Reason why the transaction occurred. In case of a redemption, this value is null.
    */
    'reason'?: string | null;
    /**
    * The related transaction ID on the receiving card.
    */
    'relatedTransactionId'?: string | null;
    /**
    * Timestamp representing the date and time when the transaction was created. The value is shown in the ISO 8601 format.
    */
    'createdAt'?: Date | null;
    'details'?: LoyaltyCardTransactionDetails | null;
    'type'?: LoyaltyCardTransactionsType;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "sourceId",
            "baseName": "source_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "voucherId",
            "baseName": "voucher_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "campaignId",
            "baseName": "campaign_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "source",
            "baseName": "source",
            "type": "string",
            "format": ""
        },
        {
            "name": "reason",
            "baseName": "reason",
            "type": "string",
            "format": ""
        },
        {
            "name": "relatedTransactionId",
            "baseName": "related_transaction_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "details",
            "baseName": "details",
            "type": "LoyaltyCardTransactionDetails",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "LoyaltyCardTransactionsType",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return LoyaltyCardTransaction.attributeTypeMap;
    }

    public constructor() {
    }
}


