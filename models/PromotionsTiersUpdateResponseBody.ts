/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * OpenAPI spec version: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Category } from '../models/Category';
import { PromotionsTiersUpdateResponseBodyAction } from '../models/PromotionsTiersUpdateResponseBodyAction';
import { PromotionsTiersUpdateResponseBodyCampaign } from '../models/PromotionsTiersUpdateResponseBodyCampaign';
import { PromotionsTiersUpdateResponseBodySummary } from '../models/PromotionsTiersUpdateResponseBodySummary';
import { ValidationRuleAssignmentsList } from '../models/ValidationRuleAssignmentsList';
import { ValidityHours } from '../models/ValidityHours';
import { ValidityTimeframe } from '../models/ValidityTimeframe';
import { HttpFile } from '../http/http';

/**
* Response body schema for **PUT** `v1/promotions/tiers/{promotionTierId}`.
*/
export class PromotionsTiersUpdateResponseBody {
    /**
    * Unique promotion tier ID.
    */
    'id'?: string | null;
    /**
    * Timestamp representing the date and time when the promotion tier was created. The value is shown in the ISO 8601 format.
    */
    'createdAt'?: Date | null;
    /**
    * Timestamp representing the date and time when the promotion tier was updated. The value is shown in the ISO 8601 format.
    */
    'updatedAt'?: Date | null;
    /**
    * Name of the promotion tier.
    */
    'name'?: string | null;
    /**
    * Text to be displayed to your customers on your website.
    */
    'banner'?: string | null;
    'action'?: PromotionsTiersUpdateResponseBodyAction | null;
    /**
    * The metadata object stores all custom attributes assigned to the promotion tier. A set of key/value pairs that you can attach to a promotion tier object. It can be useful for storing additional information about the promotion tier in a structured format.
    */
    'metadata'?: any | null;
    /**
    * The promotions hierarchy defines the order in which the discounts from different tiers will be applied to a customer\'s order. If a customer qualifies for discounts from more than one tier, discounts will be applied in the order defined in the hierarchy.
    */
    'hierarchy'?: number | null;
    /**
    * Promotion unique ID.
    */
    'promotionId'?: string | null;
    'campaign'?: PromotionsTiersUpdateResponseBodyCampaign | null;
    /**
    * Promotion tier\'s parent campaign\'s unique ID.
    */
    'campaignId'?: string | null;
    /**
    * A flag to toggle the promotion tier on or off. You can disable a promotion tier even though it\'s within the active period defined by the `start_date` and `expiration_date`.    - `true` indicates an *active* promotion tier - `false` indicates an *inactive* promotion tier
    */
    'active'?: boolean | null;
    /**
    * Activation timestamp defines when the promotion tier starts to be active in ISO 8601 format. Promotion tier is *inactive before* this date. 
    */
    'startDate'?: Date | null;
    /**
    * Activation timestamp defines when the promotion tier expires in ISO 8601 format. Promotion tier is *inactive after* this date. 
    */
    'expirationDate'?: Date | null;
    'validityTimeframe'?: ValidityTimeframe;
    /**
    * Integer array corresponding to the particular days of the week in which the voucher is valid.  - `0` Sunday - `1` Monday - `2` Tuesday - `3` Wednesday - `4` Thursday - `5` Friday - `6` Saturday
    */
    'validityDayOfWeek'?: Array<PromotionsTiersUpdateResponseBodyValidityDayOfWeekEnum>;
    'validityHours'?: ValidityHours;
    'summary'?: PromotionsTiersUpdateResponseBodySummary | null;
    /**
    * The type of the object represented by JSON. This object stores information about the promotion tier.
    */
    'object'?: string | null;
    'validationRuleAssignments'?: ValidationRuleAssignmentsList;
    /**
    * Promotion tier category ID.
    */
    'categoryId'?: string | null;
    'categories'?: Array<Category> | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "banner",
            "baseName": "banner",
            "type": "string",
            "format": ""
        },
        {
            "name": "action",
            "baseName": "action",
            "type": "PromotionsTiersUpdateResponseBodyAction",
            "format": ""
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "any",
            "format": ""
        },
        {
            "name": "hierarchy",
            "baseName": "hierarchy",
            "type": "number",
            "format": ""
        },
        {
            "name": "promotionId",
            "baseName": "promotion_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "campaign",
            "baseName": "campaign",
            "type": "PromotionsTiersUpdateResponseBodyCampaign",
            "format": ""
        },
        {
            "name": "campaignId",
            "baseName": "campaign_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "active",
            "baseName": "active",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "startDate",
            "baseName": "start_date",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "expirationDate",
            "baseName": "expiration_date",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "validityTimeframe",
            "baseName": "validity_timeframe",
            "type": "ValidityTimeframe",
            "format": ""
        },
        {
            "name": "validityDayOfWeek",
            "baseName": "validity_day_of_week",
            "type": "Array<PromotionsTiersUpdateResponseBodyValidityDayOfWeekEnum>",
            "format": ""
        },
        {
            "name": "validityHours",
            "baseName": "validity_hours",
            "type": "ValidityHours",
            "format": ""
        },
        {
            "name": "summary",
            "baseName": "summary",
            "type": "PromotionsTiersUpdateResponseBodySummary",
            "format": ""
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "string",
            "format": ""
        },
        {
            "name": "validationRuleAssignments",
            "baseName": "validation_rule_assignments",
            "type": "ValidationRuleAssignmentsList",
            "format": ""
        },
        {
            "name": "categoryId",
            "baseName": "category_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "categories",
            "baseName": "categories",
            "type": "Array<Category>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return PromotionsTiersUpdateResponseBody.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum PromotionsTiersUpdateResponseBodyValidityDayOfWeekEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1,
    NUMBER_2 = 2,
    NUMBER_3 = 3,
    NUMBER_4 = 4,
    NUMBER_5 = 5,
    NUMBER_6 = 6
}

