/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * OpenAPI spec version: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Customer } from '../models/Customer';
import { OrderItem } from '../models/OrderItem';
import { Referrer } from '../models/Referrer';
import { HttpFile } from '../http/http';

/**
* Request body schema for **POST** `v1/orders`.
*/
export class OrdersCreateRequestBody {
    /**
    * Unique ID assigned by Voucherify of an existing order that will be linked to the redemption of this request.
    */
    'id'?: string | null;
    /**
    * Unique source ID of an existing order that will be linked to the redemption of this request.
    */
    'sourceId'?: string | null;
    /**
    * The order status.
    */
    'status'?: OrdersCreateRequestBodyStatusEnum | null;
    /**
    * A positive integer in the smallest currency unit (e.g. 100 cents for $1.00) representing the total amount of the order. This is the sum of the order items\' amounts.
    */
    'amount'?: number | null;
    /**
    * A positive integer in the smallest currency unit (e.g. 100 cents for $1.00) representing the total amount of the order. This is the sum of the order items\' amounts.
    */
    'initialAmount'?: number | null;
    /**
    * Sum of all order-level discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).
    */
    'discountAmount'?: number | null;
    /**
    * Array of items applied to the order. It can include up to 500 items.
    */
    'items'?: Array<OrderItem> | null;
    /**
    * A set of custom key/value pairs that you can attach to an order. It can be useful for storing additional information about the order in a structured format. It can be used to define business validation rules or discount formulas.
    */
    'metadata'?: any | null;
    /**
    * Timestamp representing the date and time when the order was created. The value is shown in the ISO 8601 format.
    */
    'createdAt'?: Date | null;
    /**
    * Unique referrer ID.
    */
    'referrerId'?: string | null;
    'customer'?: Customer;
    'referrer'?: Referrer;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "sourceId",
            "baseName": "source_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "OrdersCreateRequestBodyStatusEnum",
            "format": ""
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "initialAmount",
            "baseName": "initial_amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "discountAmount",
            "baseName": "discount_amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "items",
            "baseName": "items",
            "type": "Array<OrderItem>",
            "format": ""
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "any",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "referrerId",
            "baseName": "referrer_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "customer",
            "baseName": "customer",
            "type": "Customer",
            "format": ""
        },
        {
            "name": "referrer",
            "baseName": "referrer",
            "type": "Referrer",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return OrdersCreateRequestBody.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum OrdersCreateRequestBodyStatusEnum {
    Created = 'CREATED',
    Paid = 'PAID',
    Canceled = 'CANCELED',
    Fulfilled = 'FULFILLED'
}

