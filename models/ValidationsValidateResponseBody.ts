/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * OpenAPI spec version: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { Session } from '../models/Session';
import { StackingRules } from '../models/StackingRules';
import { ValidationsRedeemableInapplicable } from '../models/ValidationsRedeemableInapplicable';
import { ValidationsRedeemableSkipped } from '../models/ValidationsRedeemableSkipped';
import { ValidationsValidateResponseBodyOrder } from '../models/ValidationsValidateResponseBodyOrder';
import { ValidationsValidateResponseBodyRedeemablesItem } from '../models/ValidationsValidateResponseBodyRedeemablesItem';
import { HttpFile } from '../http/http';

/**
* Response body schema for **POST** `v1/validations`.
*/
export class ValidationsValidateResponseBody {
    /**
    * Unique identifier of the validation, assigned by Voucherify.
    */
    'id'?: string | null;
    /**
    * The result of the validation. It takes all of the redeemables into account and returns a `false` if at least one redeemable is inapplicable. Returns `true` if all redeemables are applicable.
    */
    'valid'?: boolean | null;
    'redeemables'?: Array<ValidationsValidateResponseBodyRedeemablesItem> | null;
    /**
    * Lists validation results of each skipped redeemable.
    */
    'skippedRedeemables'?: Array<ValidationsRedeemableSkipped> | null;
    /**
    * Lists validation results of each inapplicable redeemable.
    */
    'inapplicableRedeemables'?: Array<ValidationsRedeemableInapplicable> | null;
    'order'?: ValidationsValidateResponseBodyOrder | null;
    /**
    * Hashed customer source ID.
    */
    'trackingId'?: string | null;
    'session'?: Session;
    'stackingRules': StackingRules;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "valid",
            "baseName": "valid",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "redeemables",
            "baseName": "redeemables",
            "type": "Array<ValidationsValidateResponseBodyRedeemablesItem>",
            "format": ""
        },
        {
            "name": "skippedRedeemables",
            "baseName": "skipped_redeemables",
            "type": "Array<ValidationsRedeemableSkipped>",
            "format": ""
        },
        {
            "name": "inapplicableRedeemables",
            "baseName": "inapplicable_redeemables",
            "type": "Array<ValidationsRedeemableInapplicable>",
            "format": ""
        },
        {
            "name": "order",
            "baseName": "order",
            "type": "ValidationsValidateResponseBodyOrder",
            "format": ""
        },
        {
            "name": "trackingId",
            "baseName": "tracking_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "session",
            "baseName": "session",
            "type": "Session",
            "format": ""
        },
        {
            "name": "stackingRules",
            "baseName": "stacking_rules",
            "type": "StackingRules",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ValidationsValidateResponseBody.attributeTypeMap;
    }

    public constructor() {
    }
}
