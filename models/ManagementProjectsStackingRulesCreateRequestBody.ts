/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * OpenAPI spec version: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

/**
* Request body schema for **POST** `/management/v1/projects/{projectId}/stacking-rules`.
*/
export class ManagementProjectsStackingRulesCreateRequestBody {
    /**
    * Lists the IDs of exclusive categories. A redeemable from a campaign with an exclusive category is the only redeemable to be redeemed when applied with redeemables from other campaigns unless these campaigns are exclusive or joint.
    */
    'exclusiveCategories'?: Array<string> | null;
    /**
    * Lists the IDs of the joint categories. A campaign with a joint category is always applied regardless of the exclusivity of other campaigns.
    */
    'jointCategories'?: Array<string> | null;
    /**
    * Defines how many redeemables can be sent in one request. Note: more redeemables means more processing time.
    */
    'redeemablesLimit'?: number | null;
    /**
    * Defines how many redeemables can be applied in one request. The number must be less than or equal to `redeemables_limit`. For example, a user can select 30 discounts but only 5 will be applied to the order and the remaining will be `SKIPPED` according to the `redeemables_sorting_rule`.
    */
    'applicableRedeemablesLimit'?: number | null;
    /**
    * Defines how many redeemables with the same category can be applied in one request. The number must be less than or equal to `applicable_redeemables_limit`. The ones above the limit will be `SKIPPED` according to the `redeemables_sorting_rule`.
    */
    'applicableRedeemablesPerCategoryLimit'?: number | null;
    /**
    * Lists categories by category IDs (keys) and defines their limits (values) of applicable redeemables that belong to campaigns with that category.
    */
    'applicableRedeemablesCategoryLimits'?: { [key: string]: number; } | null;
    /**
    * Defines how many redeemables with an assigned exclusive category can be applied in one request. The ones above the limit will be `SKIPPED` according to the `redeemables_sorting_rule`.
    */
    'applicableExclusiveRedeemablesLimit'?: number | null;
    /**
    * Defines how many redeemables with an assigned exclusive category can be applied in one request. The ones above the limit will be `SKIPPED` according to the `redeemables_sorting_rule`. The number must be less than or equal to `applicable_exclusive_redeemables_limit`.
    */
    'applicableExclusiveRedeemablesPerCategoryLimit'?: number | null;
    /**
    * Defines if the discounts are applied by taking into account the initial order amount or the discounted order amount.
    */
    'discountCalculationMode'?: ManagementProjectsStackingRulesCreateRequestBodyDiscountCalculationModeEnum | null;
    /**
    * Lists the IDs of the categories that apply a discount based on the initial amount.
    */
    'initialAmountModeCategories'?: Array<string> | null;
    /**
    * Lists the IDs of the categories that apply a discount based on the discounted amount.
    */
    'discountedAmountModeCategories'?: Array<string> | null;
    /**
    * Defines the application mode for redeemables. `\"ALL\"` means that all redeemables must be validated for the redemption to be successful. `\"PARTIAL\"` means that only those redeemables that can be validated will be redeemed. The redeemables that fail validaton will be skipped.
    */
    'redeemablesApplicationMode'?: ManagementProjectsStackingRulesCreateRequestBodyRedeemablesApplicationModeEnum | null;
    /**
    * Defines redeemables sorting rule. `CATEGORY_HIERARCHY` means that redeemables are applied oaccording to the category priority. `REQUESTED_ORDER` means that redeemables are applied in the sequence provided in the request.
    */
    'redeemablesSortingRule'?: ManagementProjectsStackingRulesCreateRequestBodyRedeemablesSortingRuleEnum | null;
    /**
    * Defines redeemables products application mode. `STACK` means that multiple discounts can be applied to a product. `ONCE` means that only one discount can be applied to the same product.
    */
    'redeemablesProductsApplicationMode'?: ManagementProjectsStackingRulesCreateRequestBodyRedeemablesProductsApplicationModeEnum | null;
    /**
    * Defines redeemables no effect rule. `REDEEM_ANYWAY` means that the redeemable will be redeemed regardless of any restrictions or conditions in place. `SKIP` means that the redeemable will be processed only when an applicable effect is calculated.
    */
    'redeemablesNoEffectRule'?: ManagementProjectsStackingRulesCreateRequestBodyRedeemablesNoEffectRuleEnum | null;
    /**
    * Lists category IDs. Redeemables with a given category are skipped even if the `redeemables_no_effect_rule` is set to `REDEEM_ANYWAY`. Category IDs can\'t overlap with the IDs in `no_effect_redeem_anyway_categories`.
    */
    'noEffectSkipCategories'?: Array<string> | null;
    /**
    * Lists category IDs. Redeemables with a given category are redeemed anyway even if the `redeemables_no_effect_rule` is set to `SKIP`. Category IDs can\'t overlap with the IDs in `no_effect_skip_categories`.
    */
    'noEffectRedeemAnywayCategories'?: Array<string> | null;
    /**
    * Defines the rollback mode for the order. `WITH_ORDER` is a default setting. The redemption is rolled back together with the data about the order, including related discount values. `WITHOUT_ORDER` allows rolling the redemption back without affecting order data, including the applied discount values.
    */
    'redeemablesRollbackOrderMode'?: ManagementProjectsStackingRulesCreateRequestBodyRedeemablesRollbackOrderModeEnum | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "exclusiveCategories",
            "baseName": "exclusive_categories",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "jointCategories",
            "baseName": "joint_categories",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "redeemablesLimit",
            "baseName": "redeemables_limit",
            "type": "number",
            "format": ""
        },
        {
            "name": "applicableRedeemablesLimit",
            "baseName": "applicable_redeemables_limit",
            "type": "number",
            "format": ""
        },
        {
            "name": "applicableRedeemablesPerCategoryLimit",
            "baseName": "applicable_redeemables_per_category_limit",
            "type": "number",
            "format": ""
        },
        {
            "name": "applicableRedeemablesCategoryLimits",
            "baseName": "applicable_redeemables_category_limits",
            "type": "{ [key: string]: number; }",
            "format": ""
        },
        {
            "name": "applicableExclusiveRedeemablesLimit",
            "baseName": "applicable_exclusive_redeemables_limit",
            "type": "number",
            "format": ""
        },
        {
            "name": "applicableExclusiveRedeemablesPerCategoryLimit",
            "baseName": "applicable_exclusive_redeemables_per_category_limit",
            "type": "number",
            "format": ""
        },
        {
            "name": "discountCalculationMode",
            "baseName": "discount_calculation_mode",
            "type": "ManagementProjectsStackingRulesCreateRequestBodyDiscountCalculationModeEnum",
            "format": ""
        },
        {
            "name": "initialAmountModeCategories",
            "baseName": "initial_amount_mode_categories",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "discountedAmountModeCategories",
            "baseName": "discounted_amount_mode_categories",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "redeemablesApplicationMode",
            "baseName": "redeemables_application_mode",
            "type": "ManagementProjectsStackingRulesCreateRequestBodyRedeemablesApplicationModeEnum",
            "format": ""
        },
        {
            "name": "redeemablesSortingRule",
            "baseName": "redeemables_sorting_rule",
            "type": "ManagementProjectsStackingRulesCreateRequestBodyRedeemablesSortingRuleEnum",
            "format": ""
        },
        {
            "name": "redeemablesProductsApplicationMode",
            "baseName": "redeemables_products_application_mode",
            "type": "ManagementProjectsStackingRulesCreateRequestBodyRedeemablesProductsApplicationModeEnum",
            "format": ""
        },
        {
            "name": "redeemablesNoEffectRule",
            "baseName": "redeemables_no_effect_rule",
            "type": "ManagementProjectsStackingRulesCreateRequestBodyRedeemablesNoEffectRuleEnum",
            "format": ""
        },
        {
            "name": "noEffectSkipCategories",
            "baseName": "no_effect_skip_categories",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "noEffectRedeemAnywayCategories",
            "baseName": "no_effect_redeem_anyway_categories",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "redeemablesRollbackOrderMode",
            "baseName": "redeemables_rollback_order_mode",
            "type": "ManagementProjectsStackingRulesCreateRequestBodyRedeemablesRollbackOrderModeEnum",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ManagementProjectsStackingRulesCreateRequestBody.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum ManagementProjectsStackingRulesCreateRequestBodyDiscountCalculationModeEnum {
    InitialAmount = 'INITIAL_AMOUNT',
    DiscountedAmount = 'DISCOUNTED_AMOUNT'
}
export enum ManagementProjectsStackingRulesCreateRequestBodyRedeemablesApplicationModeEnum {
    All = 'ALL',
    Partial = 'PARTIAL'
}
export enum ManagementProjectsStackingRulesCreateRequestBodyRedeemablesSortingRuleEnum {
    CategoryHierarchy = 'CATEGORY_HIERARCHY',
    RequestedOrder = 'REQUESTED_ORDER'
}
export enum ManagementProjectsStackingRulesCreateRequestBodyRedeemablesProductsApplicationModeEnum {
    Stack = 'STACK',
    Once = 'ONCE'
}
export enum ManagementProjectsStackingRulesCreateRequestBodyRedeemablesNoEffectRuleEnum {
    RedeemAnyway = 'REDEEM_ANYWAY',
    Skip = 'SKIP'
}
export enum ManagementProjectsStackingRulesCreateRequestBodyRedeemablesRollbackOrderModeEnum {
    WithOrder = 'WITH_ORDER',
    WithoutOrder = 'WITHOUT_ORDER'
}

