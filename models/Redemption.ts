/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * OpenAPI spec version: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { PromotionTier } from '../models/PromotionTier';
import { RedemptionChannel } from '../models/RedemptionChannel';
import { RedemptionGift } from '../models/RedemptionGift';
import { RedemptionLoyaltyCard } from '../models/RedemptionLoyaltyCard';
import { RedemptionOrder } from '../models/RedemptionOrder';
import { RedemptionRelatedRedemptions } from '../models/RedemptionRelatedRedemptions';
import { RedemptionRewardResult } from '../models/RedemptionRewardResult';
import { RedemptionSession } from '../models/RedemptionSession';
import { RedemptionVoucher } from '../models/RedemptionVoucher';
import { SimpleCustomer } from '../models/SimpleCustomer';
import { HttpFile } from '../http/http';

/**
* This is an object representing a redemption for **POST** `v1/redemptions` and **POST** `/client/v1/redemptions`.
*/
export class Redemption {
    /**
    * Unique redemption ID.
    */
    'id'?: string | null;
    /**
    * The type of the object represented by the JSON
    */
    'object'?: RedemptionObjectEnum | null;
    /**
    * Timestamp representing the date and time when the object was created. The value is shown in the ISO 8601 format.
    */
    'date'?: Date | null;
    /**
    * Unique customer ID of the redeeming customer.
    */
    'customerId'?: string | null;
    /**
    * Hashed customer source ID.
    */
    'trackingId'?: string | null;
    /**
    * The metadata object stores all custom attributes assigned to the redemption.
    */
    'metadata'?: any | null;
    /**
    * For gift cards, this is a positive integer in the smallest currency unit (e.g. 100 cents for $1.00) representing the number of redeemed credits. For loyalty cards, this is the number of loyalty points used in the transaction.
    */
    'amount'?: number | null;
    /**
    * Unique redemption ID of the parent redemption.
    */
    'redemption'?: string | null;
    /**
    * Redemption result.
    */
    'result'?: RedemptionResultEnum | null;
    /**
    * Redemption status.
    */
    'status'?: RedemptionStatusEnum | null;
    'session'?: RedemptionSession | null;
    'relatedRedemptions'?: RedemptionRelatedRedemptions | null;
    /**
    * If the result is `FAILURE`, this parameter will provide a generic reason as to why the redemption failed.
    */
    'failureCode'?: string | null;
    /**
    * If the result is `FAILURE`, this parameter will provide a more expanded reason as to why the redemption failed.
    */
    'failureMessage'?: string | null;
    'order'?: RedemptionOrder | null;
    'channel'?: RedemptionChannel | null;
    'customer'?: SimpleCustomer;
    /**
    * Defines the related object.
    */
    'relatedObjectType'?: RedemptionRelatedObjectTypeEnum | null;
    /**
    * Unique related object ID assigned by Voucherify, i.e. v_lfZi4rcEGe0sN9gmnj40bzwK2FH6QUno for a voucher.
    */
    'relatedObjectId'?: string | null;
    'promotionTier'?: PromotionTier;
    'reward'?: RedemptionRewardResult;
    'gift'?: RedemptionGift | null;
    'loyaltyCard'?: RedemptionLoyaltyCard | null;
    'voucher'?: RedemptionVoucher | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "RedemptionObjectEnum",
            "format": ""
        },
        {
            "name": "date",
            "baseName": "date",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "customerId",
            "baseName": "customer_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "trackingId",
            "baseName": "tracking_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "any",
            "format": ""
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "redemption",
            "baseName": "redemption",
            "type": "string",
            "format": ""
        },
        {
            "name": "result",
            "baseName": "result",
            "type": "RedemptionResultEnum",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "RedemptionStatusEnum",
            "format": ""
        },
        {
            "name": "session",
            "baseName": "session",
            "type": "RedemptionSession",
            "format": ""
        },
        {
            "name": "relatedRedemptions",
            "baseName": "related_redemptions",
            "type": "RedemptionRelatedRedemptions",
            "format": ""
        },
        {
            "name": "failureCode",
            "baseName": "failure_code",
            "type": "string",
            "format": ""
        },
        {
            "name": "failureMessage",
            "baseName": "failure_message",
            "type": "string",
            "format": ""
        },
        {
            "name": "order",
            "baseName": "order",
            "type": "RedemptionOrder",
            "format": ""
        },
        {
            "name": "channel",
            "baseName": "channel",
            "type": "RedemptionChannel",
            "format": ""
        },
        {
            "name": "customer",
            "baseName": "customer",
            "type": "SimpleCustomer",
            "format": ""
        },
        {
            "name": "relatedObjectType",
            "baseName": "related_object_type",
            "type": "RedemptionRelatedObjectTypeEnum",
            "format": ""
        },
        {
            "name": "relatedObjectId",
            "baseName": "related_object_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "promotionTier",
            "baseName": "promotion_tier",
            "type": "PromotionTier",
            "format": ""
        },
        {
            "name": "reward",
            "baseName": "reward",
            "type": "RedemptionRewardResult",
            "format": ""
        },
        {
            "name": "gift",
            "baseName": "gift",
            "type": "RedemptionGift",
            "format": ""
        },
        {
            "name": "loyaltyCard",
            "baseName": "loyalty_card",
            "type": "RedemptionLoyaltyCard",
            "format": ""
        },
        {
            "name": "voucher",
            "baseName": "voucher",
            "type": "RedemptionVoucher",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Redemption.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum RedemptionObjectEnum {
    Redemption = 'redemption'
}
export enum RedemptionResultEnum {
    Success = 'SUCCESS',
    Failure = 'FAILURE'
}
export enum RedemptionStatusEnum {
    Succeeded = 'SUCCEEDED',
    Failed = 'FAILED',
    RolledBack = 'ROLLED_BACK'
}
export enum RedemptionRelatedObjectTypeEnum {
    Voucher = 'voucher',
    PromotionTier = 'promotion_tier',
    Redemption = 'redemption'
}

