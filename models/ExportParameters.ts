/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * OpenAPI spec version: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class ExportParameters {
    'order'?: ExportParametersOrderEnum | null;
    /**
    * Array of strings containing the data in the export. These fields define the headers in the CSV file.
    */
    'fields'?: Array<ExportParametersFieldsEnum> | null;
    /**
    * Allowed additional properties must start with \"metadata.\" or \"redemption.\" and Allowed additional properties must start with \"metadata.\" and Allowed additional properties must start with \"metadata.\" or \"address.\" or \"summary.\" or \"loyalty.\" or \"loyalty_tier.\" or \"loyalty_points.\" or \"system_metadata.\"
    */
    'filters'?: any | null;
    /**
    * Unique identifier of the campaign. It is assigned by Voucherify. The campaign ID defines the campaign for which the voucher export will be triggered.
    */
    'campaignId'?: string | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "order",
            "baseName": "order",
            "type": "ExportParametersOrderEnum",
            "format": ""
        },
        {
            "name": "fields",
            "baseName": "fields",
            "type": "Array<ExportParametersFieldsEnum>",
            "format": ""
        },
        {
            "name": "filters",
            "baseName": "filters",
            "type": "any",
            "format": ""
        },
        {
            "name": "campaignId",
            "baseName": "campaign_id",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ExportParameters.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum ExportParametersOrderEnum {
    CreatedAt = '-created_at',
    CreatedAt2 = 'created_at',
    UpdatedAt = '-updated_at',
    UpdatedAt2 = 'updated_at',
    Code = '-code',
    Code2 = 'code',
    Id = '-id',
    Id2 = 'id',
    VoucherCode = '-voucher_code',
    VoucherCode2 = 'voucher_code',
    TrackingId = '-tracking_id',
    TrackingId2 = 'tracking_id',
    CustomerId = '-customer_id',
    CustomerId2 = 'customer_id',
    Name = '-name',
    Name2 = 'name',
    Email = '-email',
    Email2 = 'email',
    SourceId = '-source_id',
    SourceId2 = 'source_id',
    Channel = '-channel',
    Channel2 = 'channel',
    Status = '-status',
    Status2 = 'status',
    ExpiresAt = '-expires_at',
    ExpiresAt2 = 'expires_at'
}
export enum ExportParametersFieldsEnum {
    Code = 'code',
    VoucherType = 'voucher_type',
    Value = 'value',
    Formula = 'formula',
    DiscountType = 'discount_type',
    Campaign = 'campaign',
    Category = 'category',
    StartDate = 'start_date',
    ExpirationDate = 'expiration_date',
    GiftBalance = 'gift_balance',
    LoyaltyBalance = 'loyalty_balance',
    RedemptionQuantity = 'redemption_quantity',
    RedemptionCount = 'redemption_count',
    Active = 'active',
    QrCode = 'qr_code',
    BarCode = 'bar_code',
    Metadata = 'metadata',
    Id = 'id',
    IsReferralCode = 'is_referral_code',
    CreatedAt = 'created_at',
    UpdatedAt = 'updated_at',
    ValidityTimeframeInterval = 'validity_timeframe_interval',
    ValidityTimeframeDuration = 'validity_timeframe_duration',
    ValidityDayOfWeek = 'validity_day_of_week',
    DiscountAmountLimit = 'discount_amount_limit',
    CampaignId = 'campaign_id',
    AdditionalInfo = 'additional_info',
    CustomerId = 'customer_id',
    DiscountEffect = 'discount_effect',
    DiscountUnitType = 'discount_unit_type',
    DiscountUnitEffect = 'discount_unit_effect',
    ValidationRulesId = 'validation_rules_id',
    CustomerSourceId = 'customer_source_id',
    Object = 'object',
    Date = 'date',
    VoucherCode = 'voucher_code',
    PromotionTierId = 'promotion_tier_id',
    CustomerName = 'customer_name',
    TrackingId = 'tracking_id',
    OrderId = 'order_id',
    OrderAmount = 'order_amount',
    GiftAmount = 'gift_amount',
    LoyaltyPoints = 'loyalty_points',
    Result = 'result',
    FailureCode = 'failure_code',
    FailureMessage = 'failure_message',
    Name = 'name',
    Description = 'description',
    Email = 'email',
    SourceId = 'source_id',
    AddressCity = 'address_city',
    AddressState = 'address_state',
    AddressLine1 = 'address_line_1',
    AddressLine2 = 'address_line_2',
    AddressCountry = 'address_country',
    AddressPostalCode = 'address_postal_code',
    RedemptionsTotalRedeemed = 'redemptions_total_redeemed',
    RedemptionsTotalFailed = 'redemptions_total_failed',
    RedemptionsTotalSucceeded = 'redemptions_total_succeeded',
    RedemptionsTotalRolledBack = 'redemptions_total_rolled_back',
    RedemptionsTotalRollbackFailed = 'redemptions_total_rollback_failed',
    RedemptionsTotalRollbackSucceeded = 'redemptions_total_rollback_succeeded',
    OrdersTotalAmount = 'orders_total_amount',
    OrdersTotalCount = 'orders_total_count',
    OrdersAverageAmount = 'orders_average_amount',
    OrdersLastOrderAmount = 'orders_last_order_amount',
    OrdersLastOrderDate = 'orders_last_order_date',
    LoyaltyReferredCustomers = 'loyalty_referred_customers',
    Phone = 'phone',
    Birthday = 'birthday',
    Birthdate = 'birthdate',
    Channel = 'channel',
    IsWinner = 'is_winner',
    Status = 'status',
    Amount = 'amount',
    DiscountAmount = 'discount_amount',
    ItemsDiscountAmount = 'items_discount_amount',
    TotalDiscountAmount = 'total_discount_amount',
    TotalAmount = 'total_amount',
    ReferrerId = 'referrer_id',
    VoucherId = 'voucher_id',
    Points = 'points',
    ExpiresAt = 'expires_at',
    Type = 'type',
    Reason = 'reason',
    Source = 'source',
    Balance = 'balance',
    RelatedTransactionId = 'related_transaction_id',
    Details = 'details'
}

