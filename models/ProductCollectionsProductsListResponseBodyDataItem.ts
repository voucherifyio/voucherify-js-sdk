/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * OpenAPI spec version: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ProductWithoutSkus } from '../models/ProductWithoutSkus';
import { HttpFile } from '../http/http';

export class ProductCollectionsProductsListResponseBodyDataItem {
    'id'?: string;
    'sourceId'?: string;
    /**
    * Unique user-defined product name.
    */
    'name'?: string | null;
    /**
    * Unit price. It is represented by a value multiplied by 100 to accurately reflect 2 decimal places, such as `$100.00` being expressed as `10000`.
    */
    'price'?: number | null;
    /**
    * A list of product attributes whose values you can customize for given SKUs: `[\"color\",\"size\",\"ranking\"]`. Each child SKU can have a unique value for a given attribute.
    */
    'attributes'?: Array<string> | null;
    /**
    * The metadata object stores all custom attributes assigned to the product. A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format. It can be used to create product collections. and The metadata object stores all custom attributes assigned to the SKU. A set of key/value pairs that you can attach to a SKU object. It can be useful for storing additional information about the SKU in a structured format. It can be used to create product collections.
    */
    'metadata'?: any;
    'imageUrl'?: string;
    'createdAt'?: string;
    'updatedAt'?: string;
    'object'?: ProductCollectionsProductsListResponseBodyDataItemObjectEnum;
    /**
    * The parent product\'s unique ID.
    */
    'productId'?: string | null;
    /**
    * Unique user-defined SKU name.
    */
    'sku'?: string | null;
    /**
    * SKU price currency.
    */
    'currency'?: string | null;
    'product'?: ProductWithoutSkus;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "sourceId",
            "baseName": "source_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "price",
            "baseName": "price",
            "type": "number",
            "format": ""
        },
        {
            "name": "attributes",
            "baseName": "attributes",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "any",
            "format": ""
        },
        {
            "name": "imageUrl",
            "baseName": "image_url",
            "type": "string",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "string",
            "format": ""
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "ProductCollectionsProductsListResponseBodyDataItemObjectEnum",
            "format": ""
        },
        {
            "name": "productId",
            "baseName": "product_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "sku",
            "baseName": "sku",
            "type": "string",
            "format": ""
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string",
            "format": ""
        },
        {
            "name": "product",
            "baseName": "product",
            "type": "ProductWithoutSkus",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ProductCollectionsProductsListResponseBodyDataItem.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum ProductCollectionsProductsListResponseBodyDataItemObjectEnum {
    Product = 'product',
    Sku = 'sku'
}

