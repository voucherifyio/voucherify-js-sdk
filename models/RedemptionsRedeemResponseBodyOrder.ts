/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * OpenAPI spec version: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CustomerId } from '../models/CustomerId';
import { OrderRedemptionsEntry } from '../models/OrderRedemptionsEntry';
import { RedemptionsRedeemResponseBodyOrderItemsItem } from '../models/RedemptionsRedeemResponseBodyOrderItemsItem';
import { ReferrerId } from '../models/ReferrerId';
import { HttpFile } from '../http/http';

/**
* Contains the order details associated with the redemption.
*/
export class RedemptionsRedeemResponseBodyOrder {
    /**
    * Unique ID assigned by Voucherify of an existing order that will be linked to the redemption of this request.
    */
    'id'?: string | null;
    /**
    * Unique source ID of an existing order that will be linked to the redemption of this request.
    */
    'sourceId'?: string | null;
    /**
    * The order status.
    */
    'status'?: RedemptionsRedeemResponseBodyOrderStatusEnum | null;
    /**
    * This is the sum of the order items\' amounts. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).
    */
    'amount'?: number | null;
    /**
    * This is the sum of the order items\' amounts before any discount or other effect (e.g. add missing units) is applied. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).
    */
    'initialAmount'?: number | null;
    /**
    * Sum of all order-level discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).
    */
    'discountAmount'?: number | null;
    /**
    * Sum of all product-specific discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).
    */
    'itemsDiscountAmount'?: number | null;
    /**
    * Sum of all order-level AND all product-specific discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).
    */
    'totalDiscountAmount'?: number | null;
    /**
    * Order amount after undoing all the discounts through the rollback redemption. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).
    */
    'totalAmount'?: number | null;
    /**
    * This field shows the order-level discount applied. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).
    */
    'appliedDiscountAmount'?: number | null;
    /**
    * Sum of all product-specific discounts applied in a particular request. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).   `sum(items, i => i.applied_discount_amount)`
    */
    'itemsAppliedDiscountAmount'?: number | null;
    /**
    * Sum of all order-level AND all product-specific discounts applied in a particular request. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).   `total_applied_discount_amount` = `applied_discount_amount` + `items_applied_discount_amount`
    */
    'totalAppliedDiscountAmount'?: number | null;
    /**
    * A set of custom key/value pairs that you can attach to an order. It can be useful for storing additional information about the order in a structured format. It can be used to define business validation rules or discount formulas.
    */
    'metadata'?: any | null;
    /**
    * The type of the object represented by JSON.
    */
    'object'?: RedemptionsRedeemResponseBodyOrderObjectEnum | null;
    /**
    * Timestamp representing the date and time when the order was created. The value is shown in the ISO 8601 format.
    */
    'createdAt'?: Date | null;
    /**
    * Timestamp representing the date and time when the order was last updated in ISO 8601 format.
    */
    'updatedAt'?: Date | null;
    /**
    * Unique customer identifier of the customer making the purchase. The ID is assigned by Voucherify.
    */
    'customerId'?: string | null;
    /**
    * Unique referrer ID.
    */
    'referrerId'?: string | null;
    'customer'?: CustomerId;
    'referrer'?: ReferrerId;
    'redemptions'?: { [key: string]: OrderRedemptionsEntry; } | null;
    /**
    * Array of items applied to the order. It can include up to 500 items.
    */
    'items'?: Array<RedemptionsRedeemResponseBodyOrderItemsItem> | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "sourceId",
            "baseName": "source_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "RedemptionsRedeemResponseBodyOrderStatusEnum",
            "format": ""
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "initialAmount",
            "baseName": "initial_amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "discountAmount",
            "baseName": "discount_amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "itemsDiscountAmount",
            "baseName": "items_discount_amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "totalDiscountAmount",
            "baseName": "total_discount_amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "totalAmount",
            "baseName": "total_amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "appliedDiscountAmount",
            "baseName": "applied_discount_amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "itemsAppliedDiscountAmount",
            "baseName": "items_applied_discount_amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "totalAppliedDiscountAmount",
            "baseName": "total_applied_discount_amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "any",
            "format": ""
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "RedemptionsRedeemResponseBodyOrderObjectEnum",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "customerId",
            "baseName": "customer_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "referrerId",
            "baseName": "referrer_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "customer",
            "baseName": "customer",
            "type": "CustomerId",
            "format": ""
        },
        {
            "name": "referrer",
            "baseName": "referrer",
            "type": "ReferrerId",
            "format": ""
        },
        {
            "name": "redemptions",
            "baseName": "redemptions",
            "type": "{ [key: string]: OrderRedemptionsEntry; }",
            "format": ""
        },
        {
            "name": "items",
            "baseName": "items",
            "type": "Array<RedemptionsRedeemResponseBodyOrderItemsItem>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return RedemptionsRedeemResponseBodyOrder.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum RedemptionsRedeemResponseBodyOrderStatusEnum {
    Created = 'CREATED',
    Paid = 'PAID',
    Canceled = 'CANCELED',
    Fulfilled = 'FULFILLED'
}
export enum RedemptionsRedeemResponseBodyOrderObjectEnum {
    Order = 'order'
}

