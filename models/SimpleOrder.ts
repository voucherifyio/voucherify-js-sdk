/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * OpenAPI spec version: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { SimpleOrderItem } from '../models/SimpleOrderItem';
import { HttpFile } from '../http/http';

/**
* Order information.
*/
export class SimpleOrder {
    /**
    * Unique identifier of an existing order that will be linked to the redemption of this request.
    */
    'id'?: string | null;
    /**
    * Unique source identifier of an existing order that will be linked to the redemption of this request.
    */
    'sourceId'?: string | null;
    /**
    * The order status.
    */
    'status'?: SimpleOrderStatusEnum | null;
    /**
    * Unique customer identifier of the customer making the purchase. The ID is assigned by Voucherify.
    */
    'customerId'?: string | null;
    /**
    * Unique identifier of the referrer assigned by Voucherify.
    */
    'referrerId'?: string | null;
    /**
    * A positive integer in the smallest currency unit (e.g. 100 cents for $1.00) representing the total amount of the order. This is the sum of the order items\' amounts.
    */
    'amount'?: number | null;
    /**
    * Sum of all order-level discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).
    */
    'discountAmount'?: number | null;
    /**
    * This field shows the order-level discount applied. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).
    */
    'appliedDiscountAmount'?: number | null;
    /**
    * Sum of all product-specific discounts applied to the order.  It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).
    */
    'itemsDiscountAmount'?: number | null;
    /**
    * Sum of all product-specific discounts applied in a particular request. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).   `sum(items, i => i.applied_discount_amount)`
    */
    'itemsAppliedDiscountAmount'?: number | null;
    /**
    * Sum of all order-level AND all product-specific discounts applied to the order. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).
    */
    'totalDiscountAmount'?: number | null;
    /**
    * Sum of all order-level AND all product-specific discounts applied in a particular request. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00). `total_applied_discount_amount` = `applied_discount_amount` + `items_applied_discount_amount`
    */
    'totalAppliedDiscountAmount'?: number | null;
    /**
    * Order amount after undoing all the discounts through the rollback redemption. It is expressed as an integer in the smallest currency unit (e.g. 100 cents for $1.00).
    */
    'totalAmount'?: number | null;
    /**
    * Array of items applied to the order. It can include up to 500 items.
    */
    'items'?: Array<SimpleOrderItem> | null;
    /**
    * A set of custom key/value pairs that you can attach to an order. It can be useful for storing additional information about the order in a structured format. It can be used to define business validation rules or discount formulas.
    */
    'metadata'?: any | null;
    /**
    * The type of the object represented by JSON.
    */
    'object'?: SimpleOrderObjectEnum | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "sourceId",
            "baseName": "source_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "SimpleOrderStatusEnum",
            "format": ""
        },
        {
            "name": "customerId",
            "baseName": "customer_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "referrerId",
            "baseName": "referrer_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "discountAmount",
            "baseName": "discount_amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "appliedDiscountAmount",
            "baseName": "applied_discount_amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "itemsDiscountAmount",
            "baseName": "items_discount_amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "itemsAppliedDiscountAmount",
            "baseName": "items_applied_discount_amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "totalDiscountAmount",
            "baseName": "total_discount_amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "totalAppliedDiscountAmount",
            "baseName": "total_applied_discount_amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "totalAmount",
            "baseName": "total_amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "items",
            "baseName": "items",
            "type": "Array<SimpleOrderItem>",
            "format": ""
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "any",
            "format": ""
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "SimpleOrderObjectEnum",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return SimpleOrder.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum SimpleOrderStatusEnum {
    Created = 'CREATED',
    Paid = 'PAID',
    Canceled = 'CANCELED',
    Fulfilled = 'FULFILLED'
}
export enum SimpleOrderObjectEnum {
    Order = 'order'
}

