/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * OpenAPI spec version: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ReferrerAddress } from '../models/ReferrerAddress';
import { HttpFile } from '../http/http';

export class Referrer {
    /**
    * The ID of an existing customer.
    */
    'id'?: string | null;
    /**
    * A unique identifier of the customer who validates a voucher. It can be a customer ID or email from a CRM system, database, or a third-party service. If you also pass a customer ID (unique ID assigned by Voucherify), the source ID will be ignored.
    */
    'sourceId'?: string | null;
    /**
    * Customer\'s first and last name.
    */
    'name'?: string | null;
    /**
    * An arbitrary string that you can attach to a customer object.
    */
    'description'?: string | null;
    /**
    * Customer\'s email address.
    */
    'email'?: string | null;
    /**
    * Customer\'s phone number. This parameter is mandatory when you try to send out codes to customers via an SMS channel.
    */
    'phone'?: string | null;
    /**
    * `Deprecated`. ~~Customer\'s birthdate; format YYYY-MM-DD~~.
    */
    'birthday'?: string | null;
    /**
    * Customer\'s birthdate; format YYYY-MM-DD.
    */
    'birthdate'?: string | null;
    'address'?: ReferrerAddress | null;
    /**
    * A set of custom key/value pairs that you can attach to a customer. The metadata object stores all custom attributes assigned to the customer. It can be useful for storing additional information about the customer in a structured format. This metadata can be used for validating whether the customer qualifies for a discount or it can be used in building customer segments.
    */
    'metadata'?: any | null;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "sourceId",
            "baseName": "source_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string",
            "format": ""
        },
        {
            "name": "phone",
            "baseName": "phone",
            "type": "string",
            "format": ""
        },
        {
            "name": "birthday",
            "baseName": "birthday",
            "type": "string",
            "format": "date"
        },
        {
            "name": "birthdate",
            "baseName": "birthdate",
            "type": "string",
            "format": "date"
        },
        {
            "name": "address",
            "baseName": "address",
            "type": "ReferrerAddress",
            "format": ""
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "any",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Referrer.attributeTypeMap;
    }

    public constructor() {
    }
}
