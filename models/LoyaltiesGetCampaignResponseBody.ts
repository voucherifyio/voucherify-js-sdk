/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * OpenAPI spec version: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AccessSettingsCampaignAssignmentsList } from '../models/AccessSettingsCampaignAssignmentsList';
import { Category } from '../models/Category';
import { LoyaltyCampaignVoucher } from '../models/LoyaltyCampaignVoucher';
import { LoyaltyTiersExpirationAll } from '../models/LoyaltyTiersExpirationAll';
import { ValidationRulesAssignmentsList } from '../models/ValidationRulesAssignmentsList';
import { ValidityHours } from '../models/ValidityHours';
import { ValidityTimeframe } from '../models/ValidityTimeframe';
import { HttpFile } from '../http/http';

/**
* Response body schema for **GET** `/loyalties/{campaignId}`.
*/
export class LoyaltiesGetCampaignResponseBody {
    /**
    * Unique campaign ID, assigned by Voucherify.
    */
    'id'?: string | null;
    /**
    * Campaign name.
    */
    'name'?: string | null;
    /**
    * An optional field to keep any extra textual information about the campaign such as a campaign description and details.
    */
    'description'?: string | null;
    /**
    * Type of campaign.
    */
    'campaignType'?: LoyaltiesGetCampaignResponseBodyCampaignTypeEnum | null;
    /**
    * Defines whether the campaign can be updated with new vouchers after campaign creation.      - `AUTO_UPDATE`: the campaign is dynamic, i.e. vouchers will generate based on set criteria     -  `STATIC`: vouchers need to be manually published
    */
    'type'?: LoyaltiesGetCampaignResponseBodyTypeEnum | null;
    'voucher'?: LoyaltyCampaignVoucher;
    /**
    * Indicates whether customers will be able to auto-join a loyalty campaign if any earning rule is fulfilled.
    */
    'autoJoin'?: boolean | null;
    /**
    * Always set to `true` for loyalty campaigns, meaning customers can join the campaign only once. It can\'t be changed to `false`.
    */
    'joinOnce'?: boolean | null;
    /**
    * Flag indicating whether the campaign is to use the voucher\'s metadata schema instead of the campaign metadata schema.
    */
    'useVoucherMetadataSchema'?: boolean | null;
    'validityTimeframe'?: ValidityTimeframe;
    /**
    * Integer array corresponding to the particular days of the week in which the voucher is valid.  - `0` Sunday - `1` Monday - `2` Tuesday - `3` Wednesday - `4` Thursday - `5` Friday - `6` Saturday
    */
    'validityDayOfWeek'?: Array<LoyaltiesGetCampaignResponseBodyValidityDayOfWeekEnum>;
    'validityHours'?: ValidityHours;
    /**
    * Defines the amount of time the campaign will be active in ISO 8601 format after publishing. For example, a campaign with a `duration` of `P24D` will be valid for a duration of 24 days.
    */
    'activityDurationAfterPublishing'?: string | null;
    /**
    * Total number of unique vouchers in campaign.
    */
    'vouchersCount'?: number | null;
    /**
    * Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. 
    */
    'startDate'?: Date | null;
    /**
    * Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.
    */
    'expirationDate'?: Date | null;
    /**
    * A flag to toggle the campaign on or off. You can disable a campaign even though it\'s within the active period defined by the `start_date` and `expiration_date`.    - `true` indicates an *active* campaign - `false` indicates an *inactive* campaign
    */
    'active'?: boolean | null;
    /**
    * The metadata object stores all custom attributes assigned to the campaign. A set of key/value pairs that you can attach to a campaign object. It can be useful for storing additional information about the campaign in a structured format.
    */
    'metadata'?: any | null;
    /**
    * Timestamp representing the date and time when the campaign was created. The value is shown in the ISO 8601 format.
    */
    'createdAt'?: Date | null;
    /**
    * Timestamp representing the date and time when the campaign was last updated in ISO 8601 format.
    */
    'updatedAt'?: Date | null;
    /**
    * Unique category name.
    */
    'category'?: string | null;
    /**
    * Indicates the status of the campaign creation.
    */
    'creationStatus'?: LoyaltiesGetCampaignResponseBodyCreationStatusEnum | null;
    /**
    * Indicates the status of the campaign\'s voucher generation.
    */
    'vouchersGenerationStatus'?: LoyaltiesGetCampaignResponseBodyVouchersGenerationStatusEnum | null;
    /**
    * Indicates whether the campaign can be only read by a restricted user in the Areas and Stores enterprise feature. It is returned only to restricted users; this field is not returned for users with other roles.
    */
    'readonly'?: boolean | null;
    /**
    * Indicates whether the resource can be deleted.
    */
    '_protected'?: boolean | null;
    /**
    * Unique category ID that this campaign belongs to.
    */
    'categoryId'?: string | null;
    /**
    * Contains details about the category.
    */
    'categories'?: Array<Category> | null;
    /**
    * The type of the object represented by JSON. This object stores information about the campaign.
    */
    'object'?: string | null;
    'loyaltyTiersExpiration'?: LoyaltyTiersExpirationAll;
    'validationRulesAssignments'?: ValidationRulesAssignmentsList;
    'accessSettingsAssignments'?: AccessSettingsCampaignAssignmentsList;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "campaignType",
            "baseName": "campaign_type",
            "type": "LoyaltiesGetCampaignResponseBodyCampaignTypeEnum",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "LoyaltiesGetCampaignResponseBodyTypeEnum",
            "format": ""
        },
        {
            "name": "voucher",
            "baseName": "voucher",
            "type": "LoyaltyCampaignVoucher",
            "format": ""
        },
        {
            "name": "autoJoin",
            "baseName": "auto_join",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "joinOnce",
            "baseName": "join_once",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "useVoucherMetadataSchema",
            "baseName": "use_voucher_metadata_schema",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "validityTimeframe",
            "baseName": "validity_timeframe",
            "type": "ValidityTimeframe",
            "format": ""
        },
        {
            "name": "validityDayOfWeek",
            "baseName": "validity_day_of_week",
            "type": "Array<LoyaltiesGetCampaignResponseBodyValidityDayOfWeekEnum>",
            "format": ""
        },
        {
            "name": "validityHours",
            "baseName": "validity_hours",
            "type": "ValidityHours",
            "format": ""
        },
        {
            "name": "activityDurationAfterPublishing",
            "baseName": "activity_duration_after_publishing",
            "type": "string",
            "format": ""
        },
        {
            "name": "vouchersCount",
            "baseName": "vouchers_count",
            "type": "number",
            "format": ""
        },
        {
            "name": "startDate",
            "baseName": "start_date",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "expirationDate",
            "baseName": "expiration_date",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "active",
            "baseName": "active",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "metadata",
            "baseName": "metadata",
            "type": "any",
            "format": ""
        },
        {
            "name": "createdAt",
            "baseName": "created_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "updatedAt",
            "baseName": "updated_at",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "category",
            "baseName": "category",
            "type": "string",
            "format": ""
        },
        {
            "name": "creationStatus",
            "baseName": "creation_status",
            "type": "LoyaltiesGetCampaignResponseBodyCreationStatusEnum",
            "format": ""
        },
        {
            "name": "vouchersGenerationStatus",
            "baseName": "vouchers_generation_status",
            "type": "LoyaltiesGetCampaignResponseBodyVouchersGenerationStatusEnum",
            "format": ""
        },
        {
            "name": "readonly",
            "baseName": "readonly",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "_protected",
            "baseName": "protected",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "categoryId",
            "baseName": "category_id",
            "type": "string",
            "format": ""
        },
        {
            "name": "categories",
            "baseName": "categories",
            "type": "Array<Category>",
            "format": ""
        },
        {
            "name": "object",
            "baseName": "object",
            "type": "string",
            "format": ""
        },
        {
            "name": "loyaltyTiersExpiration",
            "baseName": "loyalty_tiers_expiration",
            "type": "LoyaltyTiersExpirationAll",
            "format": ""
        },
        {
            "name": "validationRulesAssignments",
            "baseName": "validation_rules_assignments",
            "type": "ValidationRulesAssignmentsList",
            "format": ""
        },
        {
            "name": "accessSettingsAssignments",
            "baseName": "access_settings_assignments",
            "type": "AccessSettingsCampaignAssignmentsList",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return LoyaltiesGetCampaignResponseBody.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum LoyaltiesGetCampaignResponseBodyCampaignTypeEnum {
    LoyaltyProgram = 'LOYALTY_PROGRAM'
}
export enum LoyaltiesGetCampaignResponseBodyTypeEnum {
    AutoUpdate = 'AUTO_UPDATE',
    Static = 'STATIC'
}
export enum LoyaltiesGetCampaignResponseBodyValidityDayOfWeekEnum {
    NUMBER_0 = 0,
    NUMBER_1 = 1,
    NUMBER_2 = 2,
    NUMBER_3 = 3,
    NUMBER_4 = 4,
    NUMBER_5 = 5,
    NUMBER_6 = 6
}
export enum LoyaltiesGetCampaignResponseBodyCreationStatusEnum {
    Done = 'DONE',
    InProgress = 'IN_PROGRESS',
    Failed = 'FAILED',
    Draft = 'DRAFT',
    Modifying = 'MODIFYING'
}
export enum LoyaltiesGetCampaignResponseBodyVouchersGenerationStatusEnum {
    Done = 'DONE',
    InProgress = 'IN_PROGRESS',
    Failed = 'FAILED',
    Draft = 'DRAFT',
    Modifying = 'MODIFYING'
}

