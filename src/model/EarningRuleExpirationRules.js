/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EarningRuleExpirationRules model module.
 * @module model/EarningRuleExpirationRules
 * @version v2018-08-01
 */
class EarningRuleExpirationRules {
    /**
     * Constructs a new <code>EarningRuleExpirationRules</code>.
     * Defines the loyalty point expiration rule. This expiration rule applies only to this earning rule and supersedes &#x60;expiration_rules&#x60; defined in the &#x60;voucher.loyalty_card&#x60; object.
     * @alias module:model/EarningRuleExpirationRules
     */
    constructor() { 
        
        EarningRuleExpirationRules.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EarningRuleExpirationRules</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EarningRuleExpirationRules} obj Optional instance to populate.
     * @return {module:model/EarningRuleExpirationRules} The populated <code>EarningRuleExpirationRules</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EarningRuleExpirationRules();

            if (data.hasOwnProperty('period_type')) {
                obj['period_type'] = ApiClient.convertToType(data['period_type'], 'String');
            }
            if (data.hasOwnProperty('period_value')) {
                obj['period_value'] = ApiClient.convertToType(data['period_value'], 'Number');
            }
            if (data.hasOwnProperty('rounding_type')) {
                obj['rounding_type'] = ApiClient.convertToType(data['rounding_type'], 'String');
            }
            if (data.hasOwnProperty('rounding_value')) {
                obj['rounding_value'] = ApiClient.convertToType(data['rounding_value'], 'Number');
            }
            if (data.hasOwnProperty('fixed_month')) {
                obj['fixed_month'] = ApiClient.convertToType(data['fixed_month'], 'Number');
            }
            if (data.hasOwnProperty('fixed_day')) {
                obj['fixed_day'] = ApiClient.convertToType(data['fixed_day'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EarningRuleExpirationRules</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EarningRuleExpirationRules</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['period_type'] && !(typeof data['period_type'] === 'string' || data['period_type'] instanceof String)) {
            throw new Error("Expected the field `period_type` to be a primitive type in the JSON string but got " + data['period_type']);
        }
        // ensure the json data is a string
        if (data['rounding_type'] && !(typeof data['rounding_type'] === 'string' || data['rounding_type'] instanceof String)) {
            throw new Error("Expected the field `rounding_type` to be a primitive type in the JSON string but got " + data['rounding_type']);
        }

        return true;
    }


}



/**
 * Type of period. Can be set for `MONTH` or `FIXED_DAY_OF_YEAR`. `MONTH` requires the `period_value` field. `FIXED_DAY_OF_YEAR` requires the `fixed_month` and `fixed_day` fields.
 * @member {module:model/EarningRuleExpirationRules.PeriodTypeEnum} period_type
 */
EarningRuleExpirationRules.prototype['period_type'] = undefined;

/**
 * Value of the period. Required for the `period_type: MONTH`.
 * @member {Number} period_value
 */
EarningRuleExpirationRules.prototype['period_value'] = undefined;

/**
 * Type of rounding of the expiration period. Optional for the `period_type: MONTH`.
 * @member {module:model/EarningRuleExpirationRules.RoundingTypeEnum} rounding_type
 */
EarningRuleExpirationRules.prototype['rounding_type'] = undefined;

/**
 * Value of rounding of the expiration period. Required for the `rounding_type`.
 * @member {Number} rounding_value
 */
EarningRuleExpirationRules.prototype['rounding_value'] = undefined;

/**
 * Determines the month when the points expire; `1` is January, `2` is February, and so on. Required for the `period_type: FIXED_DAY_OF_YEAR`.
 * @member {Number} fixed_month
 */
EarningRuleExpirationRules.prototype['fixed_month'] = undefined;

/**
 * Determines the day of the month when the points expire. Required for the `period_type: FIXED_DAY_OF_YEAR`.
 * @member {Number} fixed_day
 */
EarningRuleExpirationRules.prototype['fixed_day'] = undefined;





/**
 * Allowed values for the <code>period_type</code> property.
 * @enum {String}
 * @readonly
 */
EarningRuleExpirationRules['PeriodTypeEnum'] = {

    /**
     * value: "FIXED_DAY_OF_YEAR"
     * @const
     */
    "FIXED_DAY_OF_YEAR": "FIXED_DAY_OF_YEAR",

    /**
     * value: "MONTH"
     * @const
     */
    "MONTH": "MONTH"
};


/**
 * Allowed values for the <code>rounding_type</code> property.
 * @enum {String}
 * @readonly
 */
EarningRuleExpirationRules['RoundingTypeEnum'] = {

    /**
     * value: "END_OF_MONTH"
     * @const
     */
    "END_OF_MONTH": "END_OF_MONTH",

    /**
     * value: "END_OF_QUARTER"
     * @const
     */
    "END_OF_QUARTER": "END_OF_QUARTER",

    /**
     * value: "END_OF_HALF_YEAR"
     * @const
     */
    "END_OF_HALF_YEAR": "END_OF_HALF_YEAR",

    /**
     * value: "END_OF_YEAR"
     * @const
     */
    "END_OF_YEAR": "END_OF_YEAR",

    /**
     * value: "PARTICULAR_MONTH"
     * @const
     */
    "PARTICULAR_MONTH": "PARTICULAR_MONTH"
};



export default EarningRuleExpirationRules;

