/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PromotionStack from './PromotionStack';

/**
 * The PromotionsStacksListResponseBody model module.
 * @module model/PromotionsStacksListResponseBody
 * @version v2018-08-01
 */
class PromotionsStacksListResponseBody {
    /**
     * Constructs a new <code>PromotionsStacksListResponseBody</code>.
     * Response body schema for **GET** &#x60;v1/promotions/stacks&#x60; and for **GET** &#x60;v1/promotions/{campaignId}/stacks&#x60;.
     * @alias module:model/PromotionsStacksListResponseBody
     */
    constructor() { 
        
        PromotionsStacksListResponseBody.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['object'] = 'list';
        obj['data_ref'] = 'data';
    }

    /**
     * Constructs a <code>PromotionsStacksListResponseBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PromotionsStacksListResponseBody} obj Optional instance to populate.
     * @return {module:model/PromotionsStacksListResponseBody} The populated <code>PromotionsStacksListResponseBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PromotionsStacksListResponseBody();

            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('data_ref')) {
                obj['data_ref'] = ApiClient.convertToType(data['data_ref'], 'String');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], [PromotionStack]);
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PromotionsStacksListResponseBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PromotionsStacksListResponseBody</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['data_ref'] && !(typeof data['data_ref'] === 'string' || data['data_ref'] instanceof String)) {
            throw new Error("Expected the field `data_ref` to be a primitive type in the JSON string but got " + data['data_ref']);
        }
        if (data['data']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['data'])) {
                throw new Error("Expected the field `data` to be an array in the JSON data but got " + data['data']);
            }
            // validate the optional field `data` (array)
            for (const item of data['data']) {
                PromotionStack.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The type of the object represented by JSON. This object stores information about promotion stacks in a dictionary.
 * @member {module:model/PromotionsStacksListResponseBody.ObjectEnum} object
 * @default 'list'
 */
PromotionsStacksListResponseBody.prototype['object'] = 'list';

/**
 * Identifies the name of the attribute that contains the array of promotion stack objects.
 * @member {module:model/PromotionsStacksListResponseBody.DataRefEnum} data_ref
 * @default 'data'
 */
PromotionsStacksListResponseBody.prototype['data_ref'] = 'data';

/**
 * Contains array of promotion stack objects.
 * @member {Array.<module:model/PromotionStack>} data
 */
PromotionsStacksListResponseBody.prototype['data'] = undefined;

/**
 * Total number of promotion stacks.
 * @member {Number} total
 */
PromotionsStacksListResponseBody.prototype['total'] = undefined;





/**
 * Allowed values for the <code>object</code> property.
 * @enum {String}
 * @readonly
 */
PromotionsStacksListResponseBody['ObjectEnum'] = {

    /**
     * value: "list"
     * @const
     */
    "list": "list"
};


/**
 * Allowed values for the <code>data_ref</code> property.
 * @enum {String}
 * @readonly
 */
PromotionsStacksListResponseBody['DataRefEnum'] = {

    /**
     * value: "data"
     * @const
     */
    "data": "data"
};



export default PromotionsStacksListResponseBody;

