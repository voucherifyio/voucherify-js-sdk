/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LoyaltyTiersExpirationAllExpirationDate from './LoyaltyTiersExpirationAllExpirationDate';
import LoyaltyTiersExpirationAllStartDate from './LoyaltyTiersExpirationAllStartDate';

/**
 * The LoyaltyTiersExpirationAll model module.
 * @module model/LoyaltyTiersExpirationAll
 * @version v2018-08-01
 */
class LoyaltyTiersExpirationAll {
    /**
     * Constructs a new <code>LoyaltyTiersExpirationAll</code>.
     * Defines the Loyalty Tiers Expiration.
     * @alias module:model/LoyaltyTiersExpirationAll
     */
    constructor() { 
        
        LoyaltyTiersExpirationAll.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LoyaltyTiersExpirationAll</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LoyaltyTiersExpirationAll} obj Optional instance to populate.
     * @return {module:model/LoyaltyTiersExpirationAll} The populated <code>LoyaltyTiersExpirationAll</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LoyaltyTiersExpirationAll();

            if (data.hasOwnProperty('qualification_type')) {
                obj['qualification_type'] = ApiClient.convertToType(data['qualification_type'], 'String');
            }
            if (data.hasOwnProperty('qualification_period')) {
                obj['qualification_period'] = ApiClient.convertToType(data['qualification_period'], 'String');
            }
            if (data.hasOwnProperty('start_date')) {
                obj['start_date'] = LoyaltyTiersExpirationAllStartDate.constructFromObject(data['start_date']);
            }
            if (data.hasOwnProperty('expiration_date')) {
                obj['expiration_date'] = LoyaltyTiersExpirationAllExpirationDate.constructFromObject(data['expiration_date']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LoyaltyTiersExpirationAll</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LoyaltyTiersExpirationAll</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['qualification_type'] && !(typeof data['qualification_type'] === 'string' || data['qualification_type'] instanceof String)) {
            throw new Error("Expected the field `qualification_type` to be a primitive type in the JSON string but got " + data['qualification_type']);
        }
        // ensure the json data is a string
        if (data['qualification_period'] && !(typeof data['qualification_period'] === 'string' || data['qualification_period'] instanceof String)) {
            throw new Error("Expected the field `qualification_period` to be a primitive type in the JSON string but got " + data['qualification_period']);
        }
        // validate the optional field `start_date`
        if (data['start_date']) { // data not null
          LoyaltyTiersExpirationAllStartDate.validateJSON(data['start_date']);
        }
        // validate the optional field `expiration_date`
        if (data['expiration_date']) { // data not null
          LoyaltyTiersExpirationAllExpirationDate.validateJSON(data['expiration_date']);
        }

        return true;
    }


}



/**
 * Tier qualification.     `BALANCE`: Points balance is based on the customer's current points balance. Customers qualify for the tier if their points balance is in the points range of the tier.   `POINTS_IN_PERIOD`: A customer qualifies for the tier only if the sum of the accumulated points in a **defined time interval** reaches the tier threshold.
 * @member {module:model/LoyaltyTiersExpirationAll.QualificationTypeEnum} qualification_type
 */
LoyaltyTiersExpirationAll.prototype['qualification_type'] = undefined;

/**
 * Customers can qualify for the tier if they collected enough points in a given time period. So, in addition to the customer having to reach a points range, they also need to have collected the points within a set time period.      | **Period** | **Definition** | |:---|:---| | **Calendar Month** | Points collected in one calendar month<br />January, February, March, etc. | | **Calendar Quarter** | Points collected in the quarter<br />- January - March<br />- April - June<br />- July - September<br />- October - December | | **Calendar Half-year** | Points collected in the half-year<br />- January - June<br />- July - December | | **Calendar Year** | Points collected in one calendar year<br />January - December |
 * @member {module:model/LoyaltyTiersExpirationAll.QualificationPeriodEnum} qualification_period
 */
LoyaltyTiersExpirationAll.prototype['qualification_period'] = undefined;

/**
 * @member {module:model/LoyaltyTiersExpirationAllStartDate} start_date
 */
LoyaltyTiersExpirationAll.prototype['start_date'] = undefined;

/**
 * @member {module:model/LoyaltyTiersExpirationAllExpirationDate} expiration_date
 */
LoyaltyTiersExpirationAll.prototype['expiration_date'] = undefined;





/**
 * Allowed values for the <code>qualification_type</code> property.
 * @enum {String}
 * @readonly
 */
LoyaltyTiersExpirationAll['QualificationTypeEnum'] = {

    /**
     * value: "BALANCE"
     * @const
     */
    "BALANCE": "BALANCE",

    /**
     * value: "POINTS_IN_PERIOD"
     * @const
     */
    "POINTS_IN_PERIOD": "POINTS_IN_PERIOD"
};


/**
 * Allowed values for the <code>qualification_period</code> property.
 * @enum {String}
 * @readonly
 */
LoyaltyTiersExpirationAll['QualificationPeriodEnum'] = {

    /**
     * value: "MONTH"
     * @const
     */
    "MONTH": "MONTH",

    /**
     * value: "QUARTER"
     * @const
     */
    "QUARTER": "QUARTER",

    /**
     * value: "HALF_YEAR"
     * @const
     */
    "HALF_YEAR": "HALF_YEAR",

    /**
     * value: "YEAR"
     * @const
     */
    "YEAR": "YEAR"
};



export default LoyaltyTiersExpirationAll;

