/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ManagementProjectsBrandingCreateRequestBodyAddress from './ManagementProjectsBrandingCreateRequestBodyAddress';
import ManagementProjectsBrandingCreateRequestBodyBrand from './ManagementProjectsBrandingCreateRequestBodyBrand';
import ManagementProjectsBrandingCreateRequestBodyCockpits from './ManagementProjectsBrandingCreateRequestBodyCockpits';
import ManagementProjectsBrandingCreateRequestBodyContact from './ManagementProjectsBrandingCreateRequestBodyContact';

/**
 * The ManagementProjectsBrandingCreateRequestBody model module.
 * @module model/ManagementProjectsBrandingCreateRequestBody
 * @version v2018-08-01
 */
class ManagementProjectsBrandingCreateRequestBody {
    /**
     * Constructs a new <code>ManagementProjectsBrandingCreateRequestBody</code>.
     * Request body schema for **POST** &#x60;/management/v1/projects/{projectId}/branding&#x60;.
     * @alias module:model/ManagementProjectsBrandingCreateRequestBody
     */
    constructor() { 
        
        ManagementProjectsBrandingCreateRequestBody.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ManagementProjectsBrandingCreateRequestBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ManagementProjectsBrandingCreateRequestBody} obj Optional instance to populate.
     * @return {module:model/ManagementProjectsBrandingCreateRequestBody} The populated <code>ManagementProjectsBrandingCreateRequestBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ManagementProjectsBrandingCreateRequestBody();

            if (data.hasOwnProperty('brand')) {
                obj['brand'] = ManagementProjectsBrandingCreateRequestBodyBrand.constructFromObject(data['brand']);
            }
            if (data.hasOwnProperty('address')) {
                obj['address'] = ManagementProjectsBrandingCreateRequestBodyAddress.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('contact')) {
                obj['contact'] = ManagementProjectsBrandingCreateRequestBodyContact.constructFromObject(data['contact']);
            }
            if (data.hasOwnProperty('cockpits')) {
                obj['cockpits'] = ManagementProjectsBrandingCreateRequestBodyCockpits.constructFromObject(data['cockpits']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ManagementProjectsBrandingCreateRequestBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ManagementProjectsBrandingCreateRequestBody</code>.
     */
    static validateJSON(data) {
        // validate the optional field `brand`
        if (data['brand']) { // data not null
          ManagementProjectsBrandingCreateRequestBodyBrand.validateJSON(data['brand']);
        }
        // validate the optional field `address`
        if (data['address']) { // data not null
          ManagementProjectsBrandingCreateRequestBodyAddress.validateJSON(data['address']);
        }
        // validate the optional field `contact`
        if (data['contact']) { // data not null
          ManagementProjectsBrandingCreateRequestBodyContact.validateJSON(data['contact']);
        }
        // validate the optional field `cockpits`
        if (data['cockpits']) { // data not null
          ManagementProjectsBrandingCreateRequestBodyCockpits.validateJSON(data['cockpits']);
        }

        return true;
    }


}



/**
 * @member {module:model/ManagementProjectsBrandingCreateRequestBodyBrand} brand
 */
ManagementProjectsBrandingCreateRequestBody.prototype['brand'] = undefined;

/**
 * @member {module:model/ManagementProjectsBrandingCreateRequestBodyAddress} address
 */
ManagementProjectsBrandingCreateRequestBody.prototype['address'] = undefined;

/**
 * @member {module:model/ManagementProjectsBrandingCreateRequestBodyContact} contact
 */
ManagementProjectsBrandingCreateRequestBody.prototype['contact'] = undefined;

/**
 * @member {module:model/ManagementProjectsBrandingCreateRequestBodyCockpits} cockpits
 */
ManagementProjectsBrandingCreateRequestBody.prototype['cockpits'] = undefined;






export default ManagementProjectsBrandingCreateRequestBody;

