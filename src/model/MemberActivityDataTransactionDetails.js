/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LoyaltyPendingPoints from './LoyaltyPendingPoints';
import MemberActivityDataTransactionDetailsCustomEvent from './MemberActivityDataTransactionDetailsCustomEvent';
import MemberActivityDataTransactionDetailsDestinationVoucher from './MemberActivityDataTransactionDetailsDestinationVoucher';
import MemberActivityDataTransactionDetailsEarningRule from './MemberActivityDataTransactionDetailsEarningRule';
import MemberActivityDataTransactionDetailsEvent from './MemberActivityDataTransactionDetailsEvent';
import MemberActivityDataTransactionDetailsEventSchema from './MemberActivityDataTransactionDetailsEventSchema';
import MemberActivityDataTransactionDetailsHolderLoyaltyTier from './MemberActivityDataTransactionDetailsHolderLoyaltyTier';
import MemberActivityDataTransactionDetailsLoyaltyTier from './MemberActivityDataTransactionDetailsLoyaltyTier';
import MemberActivityDataTransactionDetailsOrder from './MemberActivityDataTransactionDetailsOrder';
import MemberActivityDataTransactionDetailsRedemption from './MemberActivityDataTransactionDetailsRedemption';
import MemberActivityDataTransactionDetailsReward from './MemberActivityDataTransactionDetailsReward';
import MemberActivityDataTransactionDetailsRollback from './MemberActivityDataTransactionDetailsRollback';
import MemberActivityDataTransactionDetailsSegment from './MemberActivityDataTransactionDetailsSegment';
import MemberActivityDataTransactionDetailsSourceVoucher from './MemberActivityDataTransactionDetailsSourceVoucher';
import VoucherBalance from './VoucherBalance';

/**
 * The MemberActivityDataTransactionDetails model module.
 * @module model/MemberActivityDataTransactionDetails
 * @version v2018-08-01
 */
class MemberActivityDataTransactionDetails {
    /**
     * Constructs a new <code>MemberActivityDataTransactionDetails</code>.
     * @alias module:model/MemberActivityDataTransactionDetails
     */
    constructor() { 
        
        MemberActivityDataTransactionDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MemberActivityDataTransactionDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MemberActivityDataTransactionDetails} obj Optional instance to populate.
     * @return {module:model/MemberActivityDataTransactionDetails} The populated <code>MemberActivityDataTransactionDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MemberActivityDataTransactionDetails();

            if (data.hasOwnProperty('balance')) {
                obj['balance'] = VoucherBalance.constructFromObject(data['balance']);
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = MemberActivityDataTransactionDetailsOrder.constructFromObject(data['order']);
            }
            if (data.hasOwnProperty('event')) {
                obj['event'] = MemberActivityDataTransactionDetailsEvent.constructFromObject(data['event']);
            }
            if (data.hasOwnProperty('earning_rule')) {
                obj['earning_rule'] = MemberActivityDataTransactionDetailsEarningRule.constructFromObject(data['earning_rule']);
            }
            if (data.hasOwnProperty('segment')) {
                obj['segment'] = MemberActivityDataTransactionDetailsSegment.constructFromObject(data['segment']);
            }
            if (data.hasOwnProperty('loyalty_tier')) {
                obj['loyalty_tier'] = MemberActivityDataTransactionDetailsLoyaltyTier.constructFromObject(data['loyalty_tier']);
            }
            if (data.hasOwnProperty('redemption')) {
                obj['redemption'] = MemberActivityDataTransactionDetailsRedemption.constructFromObject(data['redemption']);
            }
            if (data.hasOwnProperty('rollback')) {
                obj['rollback'] = MemberActivityDataTransactionDetailsRollback.constructFromObject(data['rollback']);
            }
            if (data.hasOwnProperty('custom_event')) {
                obj['custom_event'] = MemberActivityDataTransactionDetailsCustomEvent.constructFromObject(data['custom_event']);
            }
            if (data.hasOwnProperty('event_schema')) {
                obj['event_schema'] = MemberActivityDataTransactionDetailsEventSchema.constructFromObject(data['event_schema']);
            }
            if (data.hasOwnProperty('holder_loyalty_tier')) {
                obj['holder_loyalty_tier'] = MemberActivityDataTransactionDetailsHolderLoyaltyTier.constructFromObject(data['holder_loyalty_tier']);
            }
            if (data.hasOwnProperty('pending_points')) {
                obj['pending_points'] = LoyaltyPendingPoints.constructFromObject(data['pending_points']);
            }
            if (data.hasOwnProperty('reward')) {
                obj['reward'] = MemberActivityDataTransactionDetailsReward.constructFromObject(data['reward']);
            }
            if (data.hasOwnProperty('source_voucher')) {
                obj['source_voucher'] = MemberActivityDataTransactionDetailsSourceVoucher.constructFromObject(data['source_voucher']);
            }
            if (data.hasOwnProperty('destination_voucher')) {
                obj['destination_voucher'] = MemberActivityDataTransactionDetailsDestinationVoucher.constructFromObject(data['destination_voucher']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MemberActivityDataTransactionDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MemberActivityDataTransactionDetails</code>.
     */
    static validateJSON(data) {
        // validate the optional field `balance`
        if (data['balance']) { // data not null
          VoucherBalance.validateJSON(data['balance']);
        }
        // validate the optional field `order`
        if (data['order']) { // data not null
          MemberActivityDataTransactionDetailsOrder.validateJSON(data['order']);
        }
        // validate the optional field `event`
        if (data['event']) { // data not null
          MemberActivityDataTransactionDetailsEvent.validateJSON(data['event']);
        }
        // validate the optional field `earning_rule`
        if (data['earning_rule']) { // data not null
          MemberActivityDataTransactionDetailsEarningRule.validateJSON(data['earning_rule']);
        }
        // validate the optional field `segment`
        if (data['segment']) { // data not null
          MemberActivityDataTransactionDetailsSegment.validateJSON(data['segment']);
        }
        // validate the optional field `loyalty_tier`
        if (data['loyalty_tier']) { // data not null
          MemberActivityDataTransactionDetailsLoyaltyTier.validateJSON(data['loyalty_tier']);
        }
        // validate the optional field `redemption`
        if (data['redemption']) { // data not null
          MemberActivityDataTransactionDetailsRedemption.validateJSON(data['redemption']);
        }
        // validate the optional field `rollback`
        if (data['rollback']) { // data not null
          MemberActivityDataTransactionDetailsRollback.validateJSON(data['rollback']);
        }
        // validate the optional field `custom_event`
        if (data['custom_event']) { // data not null
          MemberActivityDataTransactionDetailsCustomEvent.validateJSON(data['custom_event']);
        }
        // validate the optional field `event_schema`
        if (data['event_schema']) { // data not null
          MemberActivityDataTransactionDetailsEventSchema.validateJSON(data['event_schema']);
        }
        // validate the optional field `holder_loyalty_tier`
        if (data['holder_loyalty_tier']) { // data not null
          MemberActivityDataTransactionDetailsHolderLoyaltyTier.validateJSON(data['holder_loyalty_tier']);
        }
        // validate the optional field `pending_points`
        if (data['pending_points']) { // data not null
          LoyaltyPendingPoints.validateJSON(data['pending_points']);
        }
        // validate the optional field `reward`
        if (data['reward']) { // data not null
          MemberActivityDataTransactionDetailsReward.validateJSON(data['reward']);
        }
        // validate the optional field `source_voucher`
        if (data['source_voucher']) { // data not null
          MemberActivityDataTransactionDetailsSourceVoucher.validateJSON(data['source_voucher']);
        }
        // validate the optional field `destination_voucher`
        if (data['destination_voucher']) { // data not null
          MemberActivityDataTransactionDetailsDestinationVoucher.validateJSON(data['destination_voucher']);
        }

        return true;
    }


}



/**
 * @member {module:model/VoucherBalance} balance
 */
MemberActivityDataTransactionDetails.prototype['balance'] = undefined;

/**
 * @member {module:model/MemberActivityDataTransactionDetailsOrder} order
 */
MemberActivityDataTransactionDetails.prototype['order'] = undefined;

/**
 * @member {module:model/MemberActivityDataTransactionDetailsEvent} event
 */
MemberActivityDataTransactionDetails.prototype['event'] = undefined;

/**
 * @member {module:model/MemberActivityDataTransactionDetailsEarningRule} earning_rule
 */
MemberActivityDataTransactionDetails.prototype['earning_rule'] = undefined;

/**
 * @member {module:model/MemberActivityDataTransactionDetailsSegment} segment
 */
MemberActivityDataTransactionDetails.prototype['segment'] = undefined;

/**
 * @member {module:model/MemberActivityDataTransactionDetailsLoyaltyTier} loyalty_tier
 */
MemberActivityDataTransactionDetails.prototype['loyalty_tier'] = undefined;

/**
 * @member {module:model/MemberActivityDataTransactionDetailsRedemption} redemption
 */
MemberActivityDataTransactionDetails.prototype['redemption'] = undefined;

/**
 * @member {module:model/MemberActivityDataTransactionDetailsRollback} rollback
 */
MemberActivityDataTransactionDetails.prototype['rollback'] = undefined;

/**
 * @member {module:model/MemberActivityDataTransactionDetailsCustomEvent} custom_event
 */
MemberActivityDataTransactionDetails.prototype['custom_event'] = undefined;

/**
 * @member {module:model/MemberActivityDataTransactionDetailsEventSchema} event_schema
 */
MemberActivityDataTransactionDetails.prototype['event_schema'] = undefined;

/**
 * @member {module:model/MemberActivityDataTransactionDetailsHolderLoyaltyTier} holder_loyalty_tier
 */
MemberActivityDataTransactionDetails.prototype['holder_loyalty_tier'] = undefined;

/**
 * @member {module:model/LoyaltyPendingPoints} pending_points
 */
MemberActivityDataTransactionDetails.prototype['pending_points'] = undefined;

/**
 * @member {module:model/MemberActivityDataTransactionDetailsReward} reward
 */
MemberActivityDataTransactionDetails.prototype['reward'] = undefined;

/**
 * @member {module:model/MemberActivityDataTransactionDetailsSourceVoucher} source_voucher
 */
MemberActivityDataTransactionDetails.prototype['source_voucher'] = undefined;

/**
 * @member {module:model/MemberActivityDataTransactionDetailsDestinationVoucher} destination_voucher
 */
MemberActivityDataTransactionDetails.prototype['destination_voucher'] = undefined;






export default MemberActivityDataTransactionDetails;

