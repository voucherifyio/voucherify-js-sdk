/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SimpleProductDiscountUnit from './SimpleProductDiscountUnit';
import SimpleSkuDiscountUnit from './SimpleSkuDiscountUnit';

/**
 * The DiscountUnitMultipleOneUnit model module.
 * @module model/DiscountUnitMultipleOneUnit
 * @version v2018-08-01
 */
class DiscountUnitMultipleOneUnit {
    /**
     * Constructs a new <code>DiscountUnitMultipleOneUnit</code>.
     * @alias module:model/DiscountUnitMultipleOneUnit
     */
    constructor() { 
        
        DiscountUnitMultipleOneUnit.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DiscountUnitMultipleOneUnit</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DiscountUnitMultipleOneUnit} obj Optional instance to populate.
     * @return {module:model/DiscountUnitMultipleOneUnit} The populated <code>DiscountUnitMultipleOneUnit</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DiscountUnitMultipleOneUnit();

            if (data.hasOwnProperty('unit_off')) {
                obj['unit_off'] = ApiClient.convertToType(data['unit_off'], 'Number');
            }
            if (data.hasOwnProperty('unit_off_formula')) {
                obj['unit_off_formula'] = ApiClient.convertToType(data['unit_off_formula'], 'String');
            }
            if (data.hasOwnProperty('effect')) {
                obj['effect'] = ApiClient.convertToType(data['effect'], 'String');
            }
            if (data.hasOwnProperty('unit_type')) {
                obj['unit_type'] = ApiClient.convertToType(data['unit_type'], 'String');
            }
            if (data.hasOwnProperty('product')) {
                obj['product'] = SimpleProductDiscountUnit.constructFromObject(data['product']);
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = SimpleSkuDiscountUnit.constructFromObject(data['sku']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DiscountUnitMultipleOneUnit</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DiscountUnitMultipleOneUnit</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['unit_off_formula'] && !(typeof data['unit_off_formula'] === 'string' || data['unit_off_formula'] instanceof String)) {
            throw new Error("Expected the field `unit_off_formula` to be a primitive type in the JSON string but got " + data['unit_off_formula']);
        }
        // ensure the json data is a string
        if (data['effect'] && !(typeof data['effect'] === 'string' || data['effect'] instanceof String)) {
            throw new Error("Expected the field `effect` to be a primitive type in the JSON string but got " + data['effect']);
        }
        // ensure the json data is a string
        if (data['unit_type'] && !(typeof data['unit_type'] === 'string' || data['unit_type'] instanceof String)) {
            throw new Error("Expected the field `unit_type` to be a primitive type in the JSON string but got " + data['unit_type']);
        }
        // validate the optional field `product`
        if (data['product']) { // data not null
          SimpleProductDiscountUnit.validateJSON(data['product']);
        }
        // validate the optional field `sku`
        if (data['sku']) { // data not null
          SimpleSkuDiscountUnit.validateJSON(data['sku']);
        }

        return true;
    }


}



/**
 * Number of units to be granted a full value discount.
 * @member {Number} unit_off
 */
DiscountUnitMultipleOneUnit.prototype['unit_off'] = undefined;

/**
 * Formula used to dynamically calculate the number of units.
 * @member {String} unit_off_formula
 */
DiscountUnitMultipleOneUnit.prototype['unit_off_formula'] = undefined;

/**
 * Defines how the unit is added to the customer's order.  
 * @member {module:model/DiscountUnitMultipleOneUnit.EffectEnum} effect
 */
DiscountUnitMultipleOneUnit.prototype['effect'] = undefined;

/**
 * The product deemed as free, chosen from product inventory (e.g. time, items).
 * @member {String} unit_type
 */
DiscountUnitMultipleOneUnit.prototype['unit_type'] = undefined;

/**
 * @member {module:model/SimpleProductDiscountUnit} product
 */
DiscountUnitMultipleOneUnit.prototype['product'] = undefined;

/**
 * @member {module:model/SimpleSkuDiscountUnit} sku
 */
DiscountUnitMultipleOneUnit.prototype['sku'] = undefined;





/**
 * Allowed values for the <code>effect</code> property.
 * @enum {String}
 * @readonly
 */
DiscountUnitMultipleOneUnit['EffectEnum'] = {

    /**
     * value: "ADD_NEW_ITEMS"
     * @const
     */
    "ADD_NEW_ITEMS": "ADD_NEW_ITEMS",

    /**
     * value: "ADD_MISSING_ITEMS"
     * @const
     */
    "ADD_MISSING_ITEMS": "ADD_MISSING_ITEMS"
};



export default DiscountUnitMultipleOneUnit;

