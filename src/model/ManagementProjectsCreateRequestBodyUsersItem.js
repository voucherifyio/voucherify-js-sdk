/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ManagementProjectsCreateRequestBodyUsersItem model module.
 * @module model/ManagementProjectsCreateRequestBodyUsersItem
 * @version v2018-08-01
 */
class ManagementProjectsCreateRequestBodyUsersItem {
    /**
     * Constructs a new <code>ManagementProjectsCreateRequestBodyUsersItem</code>.
     * Contains details about the users who will be assigned to the project. Only the &#x60;id&#x60; and &#x60;role&#x60; or &#x60;login&#x60; and &#x60;role&#x60; should be provided in the request.
     * @alias module:model/ManagementProjectsCreateRequestBodyUsersItem
     * @param role {String} The role of the user to be added. It can be one of the following predefined roles: `ADMIN`, `USER`, `VIEWER`, `MERCHANT` or an ID of a custom role.
     */
    constructor(role) { 
        
        ManagementProjectsCreateRequestBodyUsersItem.initialize(this, role);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, role) { 
        obj['role'] = role;
    }

    /**
     * Constructs a <code>ManagementProjectsCreateRequestBodyUsersItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ManagementProjectsCreateRequestBodyUsersItem} obj Optional instance to populate.
     * @return {module:model/ManagementProjectsCreateRequestBodyUsersItem} The populated <code>ManagementProjectsCreateRequestBodyUsersItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ManagementProjectsCreateRequestBodyUsersItem();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('login')) {
                obj['login'] = ApiClient.convertToType(data['login'], 'String');
            }
            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ManagementProjectsCreateRequestBodyUsersItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ManagementProjectsCreateRequestBodyUsersItem</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ManagementProjectsCreateRequestBodyUsersItem.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['login'] && !(typeof data['login'] === 'string' || data['login'] instanceof String)) {
            throw new Error("Expected the field `login` to be a primitive type in the JSON string but got " + data['login']);
        }
        // ensure the json data is a string
        if (data['role'] && !(typeof data['role'] === 'string' || data['role'] instanceof String)) {
            throw new Error("Expected the field `role` to be a primitive type in the JSON string but got " + data['role']);
        }

        return true;
    }


}

ManagementProjectsCreateRequestBodyUsersItem.RequiredProperties = ["role"];

/**
 * The unique identifier of the user who will be assigned to the project. It can be found in Team Settings > Team > Edit member. **Required** with the `role` string.  Do **not** use with the `login` string.
 * @member {String} id
 */
ManagementProjectsCreateRequestBodyUsersItem.prototype['id'] = undefined;

/**
 * The login data of the user who will be assigned to the project. **Required** with the `role` string.  Do **not** use with the `id` string.
 * @member {String} login
 */
ManagementProjectsCreateRequestBodyUsersItem.prototype['login'] = undefined;

/**
 * The role of the user to be added. It can be one of the following predefined roles: `ADMIN`, `USER`, `VIEWER`, `MERCHANT` or an ID of a custom role.
 * @member {String} role
 */
ManagementProjectsCreateRequestBodyUsersItem.prototype['role'] = undefined;






export default ManagementProjectsCreateRequestBodyUsersItem;

