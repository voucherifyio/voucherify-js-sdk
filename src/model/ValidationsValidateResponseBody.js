/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Session from './Session';
import StackingRules from './StackingRules';
import ValidationsRedeemableInapplicable from './ValidationsRedeemableInapplicable';
import ValidationsRedeemableSkipped from './ValidationsRedeemableSkipped';
import ValidationsValidateResponseBodyOrder from './ValidationsValidateResponseBodyOrder';
import ValidationsValidateResponseBodyRedeemablesItem from './ValidationsValidateResponseBodyRedeemablesItem';

/**
 * The ValidationsValidateResponseBody model module.
 * @module model/ValidationsValidateResponseBody
 * @version v2018-08-01
 */
class ValidationsValidateResponseBody {
    /**
     * Constructs a new <code>ValidationsValidateResponseBody</code>.
     * Response body schema for **POST** &#x60;v1/validations&#x60;.
     * @alias module:model/ValidationsValidateResponseBody
     * @param stackingRules {module:model/StackingRules} 
     */
    constructor(stackingRules) { 
        
        ValidationsValidateResponseBody.initialize(this, stackingRules);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, stackingRules) { 
        obj['stacking_rules'] = stackingRules;
    }

    /**
     * Constructs a <code>ValidationsValidateResponseBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ValidationsValidateResponseBody} obj Optional instance to populate.
     * @return {module:model/ValidationsValidateResponseBody} The populated <code>ValidationsValidateResponseBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ValidationsValidateResponseBody();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('valid')) {
                obj['valid'] = ApiClient.convertToType(data['valid'], 'Boolean');
            }
            if (data.hasOwnProperty('redeemables')) {
                obj['redeemables'] = ApiClient.convertToType(data['redeemables'], [ValidationsValidateResponseBodyRedeemablesItem]);
            }
            if (data.hasOwnProperty('skipped_redeemables')) {
                obj['skipped_redeemables'] = ApiClient.convertToType(data['skipped_redeemables'], [ValidationsRedeemableSkipped]);
            }
            if (data.hasOwnProperty('inapplicable_redeemables')) {
                obj['inapplicable_redeemables'] = ApiClient.convertToType(data['inapplicable_redeemables'], [ValidationsRedeemableInapplicable]);
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = ValidationsValidateResponseBodyOrder.constructFromObject(data['order']);
            }
            if (data.hasOwnProperty('tracking_id')) {
                obj['tracking_id'] = ApiClient.convertToType(data['tracking_id'], 'String');
            }
            if (data.hasOwnProperty('session')) {
                obj['session'] = Session.constructFromObject(data['session']);
            }
            if (data.hasOwnProperty('stacking_rules')) {
                obj['stacking_rules'] = StackingRules.constructFromObject(data['stacking_rules']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ValidationsValidateResponseBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ValidationsValidateResponseBody</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ValidationsValidateResponseBody.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        if (data['redeemables']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['redeemables'])) {
                throw new Error("Expected the field `redeemables` to be an array in the JSON data but got " + data['redeemables']);
            }
            // validate the optional field `redeemables` (array)
            for (const item of data['redeemables']) {
                ValidationsValidateResponseBodyRedeemablesItem.validateJSON(item);
            };
        }
        if (data['skipped_redeemables']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['skipped_redeemables'])) {
                throw new Error("Expected the field `skipped_redeemables` to be an array in the JSON data but got " + data['skipped_redeemables']);
            }
            // validate the optional field `skipped_redeemables` (array)
            for (const item of data['skipped_redeemables']) {
                ValidationsRedeemableSkipped.validateJSON(item);
            };
        }
        if (data['inapplicable_redeemables']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['inapplicable_redeemables'])) {
                throw new Error("Expected the field `inapplicable_redeemables` to be an array in the JSON data but got " + data['inapplicable_redeemables']);
            }
            // validate the optional field `inapplicable_redeemables` (array)
            for (const item of data['inapplicable_redeemables']) {
                ValidationsRedeemableInapplicable.validateJSON(item);
            };
        }
        // validate the optional field `order`
        if (data['order']) { // data not null
          ValidationsValidateResponseBodyOrder.validateJSON(data['order']);
        }
        // ensure the json data is a string
        if (data['tracking_id'] && !(typeof data['tracking_id'] === 'string' || data['tracking_id'] instanceof String)) {
            throw new Error("Expected the field `tracking_id` to be a primitive type in the JSON string but got " + data['tracking_id']);
        }
        // validate the optional field `session`
        if (data['session']) { // data not null
          Session.validateJSON(data['session']);
        }
        // validate the optional field `stacking_rules`
        if (data['stacking_rules']) { // data not null
          StackingRules.validateJSON(data['stacking_rules']);
        }

        return true;
    }


}

ValidationsValidateResponseBody.RequiredProperties = ["stacking_rules"];

/**
 * Unique identifier of the validation, assigned by Voucherify.
 * @member {String} id
 */
ValidationsValidateResponseBody.prototype['id'] = undefined;

/**
 * The result of the validation. It takes all of the redeemables into account and returns a `false` if at least one redeemable is inapplicable. Returns `true` if all redeemables are applicable.
 * @member {Boolean} valid
 */
ValidationsValidateResponseBody.prototype['valid'] = undefined;

/**
 * @member {Array.<module:model/ValidationsValidateResponseBodyRedeemablesItem>} redeemables
 */
ValidationsValidateResponseBody.prototype['redeemables'] = undefined;

/**
 * Lists validation results of each skipped redeemable.
 * @member {Array.<module:model/ValidationsRedeemableSkipped>} skipped_redeemables
 */
ValidationsValidateResponseBody.prototype['skipped_redeemables'] = undefined;

/**
 * Lists validation results of each inapplicable redeemable.
 * @member {Array.<module:model/ValidationsRedeemableInapplicable>} inapplicable_redeemables
 */
ValidationsValidateResponseBody.prototype['inapplicable_redeemables'] = undefined;

/**
 * @member {module:model/ValidationsValidateResponseBodyOrder} order
 */
ValidationsValidateResponseBody.prototype['order'] = undefined;

/**
 * Hashed customer source ID.
 * @member {String} tracking_id
 */
ValidationsValidateResponseBody.prototype['tracking_id'] = undefined;

/**
 * @member {module:model/Session} session
 */
ValidationsValidateResponseBody.prototype['session'] = undefined;

/**
 * @member {module:model/StackingRules} stacking_rules
 */
ValidationsValidateResponseBody.prototype['stacking_rules'] = undefined;






export default ValidationsValidateResponseBody;

