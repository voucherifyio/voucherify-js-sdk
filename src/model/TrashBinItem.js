/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TrashBinItem model module.
 * @module model/TrashBinItem
 * @version v2018-08-01
 */
class TrashBinItem {
    /**
     * Constructs a new <code>TrashBinItem</code>.
     * Resource moved to the bin, i.e. a campaign, product, SKU, or voucher.
     * @alias module:model/TrashBinItem
     */
    constructor() { 
        
        TrashBinItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TrashBinItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TrashBinItem} obj Optional instance to populate.
     * @return {module:model/TrashBinItem} The populated <code>TrashBinItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TrashBinItem();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('deleted_by_user_id')) {
                obj['deleted_by_user_id'] = ApiClient.convertToType(data['deleted_by_user_id'], 'String');
            }
            if (data.hasOwnProperty('resource_id')) {
                obj['resource_id'] = ApiClient.convertToType(data['resource_id'], 'String');
            }
            if (data.hasOwnProperty('resource_type')) {
                obj['resource_type'] = ApiClient.convertToType(data['resource_type'], 'String');
            }
            if (data.hasOwnProperty('resource_name')) {
                obj['resource_name'] = ApiClient.convertToType(data['resource_name'], 'String');
            }
            if (data.hasOwnProperty('resource_parent_id')) {
                obj['resource_parent_id'] = ApiClient.convertToType(data['resource_parent_id'], 'String');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TrashBinItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TrashBinItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['deleted_by_user_id'] && !(typeof data['deleted_by_user_id'] === 'string' || data['deleted_by_user_id'] instanceof String)) {
            throw new Error("Expected the field `deleted_by_user_id` to be a primitive type in the JSON string but got " + data['deleted_by_user_id']);
        }
        // ensure the json data is a string
        if (data['resource_id'] && !(typeof data['resource_id'] === 'string' || data['resource_id'] instanceof String)) {
            throw new Error("Expected the field `resource_id` to be a primitive type in the JSON string but got " + data['resource_id']);
        }
        // ensure the json data is a string
        if (data['resource_type'] && !(typeof data['resource_type'] === 'string' || data['resource_type'] instanceof String)) {
            throw new Error("Expected the field `resource_type` to be a primitive type in the JSON string but got " + data['resource_type']);
        }
        // ensure the json data is a string
        if (data['resource_name'] && !(typeof data['resource_name'] === 'string' || data['resource_name'] instanceof String)) {
            throw new Error("Expected the field `resource_name` to be a primitive type in the JSON string but got " + data['resource_name']);
        }
        // ensure the json data is a string
        if (data['resource_parent_id'] && !(typeof data['resource_parent_id'] === 'string' || data['resource_parent_id'] instanceof String)) {
            throw new Error("Expected the field `resource_parent_id` to be a primitive type in the JSON string but got " + data['resource_parent_id']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }

        return true;
    }


}



/**
 * Unique identifier of the trash bin entry. It should not be confused with the ID of the resource moved to the bin.
 * @member {String} id
 */
TrashBinItem.prototype['id'] = undefined;

/**
 * Timestamp representing the date and time when the resource was moved to the bin. The value for this parameter is shown in the ISO 8601 format.
 * @member {Date} created_at
 */
TrashBinItem.prototype['created_at'] = undefined;

/**
 * Unique identifier of the user who moved the resource to the bin. It returns a user ID if the resource was moved to the bin through an action in the website. It returns a `null` if the resource was deleted through the API.
 * @member {String} deleted_by_user_id
 */
TrashBinItem.prototype['deleted_by_user_id'] = undefined;

/**
 * Unique identifier of the resource moved to the bin, i.e. an ID of a campaign, product, SKU, or voucher.
 * @member {String} resource_id
 */
TrashBinItem.prototype['resource_id'] = undefined;

/**
 * Type of the resource moved to the bin.
 * @member {module:model/TrashBinItem.ResourceTypeEnum} resource_type
 */
TrashBinItem.prototype['resource_type'] = undefined;

/**
 * Name of the resouce moved to the bin. It is the name of the campaign, product or SKU, or the voucher code.
 * @member {String} resource_name
 */
TrashBinItem.prototype['resource_name'] = undefined;

/**
 * Unique identifier of the parent resource. For a voucher, it is a campaign ID, except for generic (standalone) vouchers. For an SKU, it is the product ID. It returns `null` for campaigns and base products.
 * @member {String} resource_parent_id
 */
TrashBinItem.prototype['resource_parent_id'] = undefined;

/**
 * The type of the object represented by JSON. It is equal to the `resource_type`.
 * @member {module:model/TrashBinItem.ObjectEnum} object
 */
TrashBinItem.prototype['object'] = undefined;





/**
 * Allowed values for the <code>resource_type</code> property.
 * @enum {String}
 * @readonly
 */
TrashBinItem['ResourceTypeEnum'] = {

    /**
     * value: "campaign"
     * @const
     */
    "campaign": "campaign",

    /**
     * value: "product"
     * @const
     */
    "product": "product",

    /**
     * value: "sku"
     * @const
     */
    "sku": "sku",

    /**
     * value: "voucher"
     * @const
     */
    "voucher": "voucher"
};


/**
 * Allowed values for the <code>object</code> property.
 * @enum {String}
 * @readonly
 */
TrashBinItem['ObjectEnum'] = {

    /**
     * value: "campaign"
     * @const
     */
    "campaign": "campaign",

    /**
     * value: "product"
     * @const
     */
    "product": "product",

    /**
     * value: "sku"
     * @const
     */
    "sku": "sku",

    /**
     * value: "voucher"
     * @const
     */
    "voucher": "voucher"
};



export default TrashBinItem;

