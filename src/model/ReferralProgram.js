/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ReferralProgramCustomEvent from './ReferralProgramCustomEvent';
import ReferralProgramRefereeReward from './ReferralProgramRefereeReward';

/**
 * The ReferralProgram model module.
 * @module model/ReferralProgram
 * @version v2018-08-01
 */
class ReferralProgram {
    /**
     * Constructs a new <code>ReferralProgram</code>.
     * Defines the referee reward and the way a referral is triggered. Context: &#x60;REFERRAL_PROGRAM&#x60;.
     * @alias module:model/ReferralProgram
     */
    constructor() { 
        
        ReferralProgram.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReferralProgram</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReferralProgram} obj Optional instance to populate.
     * @return {module:model/ReferralProgram} The populated <code>ReferralProgram</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReferralProgram();

            if (data.hasOwnProperty('conversion_event_type')) {
                obj['conversion_event_type'] = ApiClient.convertToType(data['conversion_event_type'], 'String');
            }
            if (data.hasOwnProperty('custom_event')) {
                obj['custom_event'] = ReferralProgramCustomEvent.constructFromObject(data['custom_event']);
            }
            if (data.hasOwnProperty('referee_reward')) {
                obj['referee_reward'] = ReferralProgramRefereeReward.constructFromObject(data['referee_reward']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReferralProgram</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReferralProgram</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['conversion_event_type'] && !(typeof data['conversion_event_type'] === 'string' || data['conversion_event_type'] instanceof String)) {
            throw new Error("Expected the field `conversion_event_type` to be a primitive type in the JSON string but got " + data['conversion_event_type']);
        }
        // validate the optional field `custom_event`
        if (data['custom_event']) { // data not null
          ReferralProgramCustomEvent.validateJSON(data['custom_event']);
        }
        // validate the optional field `referee_reward`
        if (data['referee_reward']) { // data not null
          ReferralProgramRefereeReward.validateJSON(data['referee_reward']);
        }

        return true;
    }


}



/**
 * Define how a referral is triggered.
 * @member {module:model/ReferralProgram.ConversionEventTypeEnum} conversion_event_type
 */
ReferralProgram.prototype['conversion_event_type'] = undefined;

/**
 * @member {module:model/ReferralProgramCustomEvent} custom_event
 */
ReferralProgram.prototype['custom_event'] = undefined;

/**
 * @member {module:model/ReferralProgramRefereeReward} referee_reward
 */
ReferralProgram.prototype['referee_reward'] = undefined;





/**
 * Allowed values for the <code>conversion_event_type</code> property.
 * @enum {String}
 * @readonly
 */
ReferralProgram['ConversionEventTypeEnum'] = {

    /**
     * value: "redemption"
     * @const
     */
    "redemption": "redemption",

    /**
     * value: "custom_event"
     * @const
     */
    "custom_event": "custom_event"
};



export default ReferralProgram;

