/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CampaignLoyaltyCard from './CampaignLoyaltyCard';
import CampaignLoyaltyVoucherRedemption from './CampaignLoyaltyVoucherRedemption';
import CodeConfig from './CodeConfig';

/**
 * The CampaignLoyaltyVoucher model module.
 * @module model/CampaignLoyaltyVoucher
 * @version v2018-08-01
 */
class CampaignLoyaltyVoucher {
    /**
     * Constructs a new <code>CampaignLoyaltyVoucher</code>.
     * Schema model for a discount voucher.
     * @alias module:model/CampaignLoyaltyVoucher
     * @param loyaltyCard {module:model/CampaignLoyaltyCard} 
     */
    constructor(loyaltyCard) { 
        
        CampaignLoyaltyVoucher.initialize(this, loyaltyCard);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, loyaltyCard) { 
        obj['type'] = 'LOYALTY_CARD';
        obj['loyalty_card'] = loyaltyCard;
    }

    /**
     * Constructs a <code>CampaignLoyaltyVoucher</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CampaignLoyaltyVoucher} obj Optional instance to populate.
     * @return {module:model/CampaignLoyaltyVoucher} The populated <code>CampaignLoyaltyVoucher</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CampaignLoyaltyVoucher();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('loyalty_card')) {
                obj['loyalty_card'] = CampaignLoyaltyCard.constructFromObject(data['loyalty_card']);
            }
            if (data.hasOwnProperty('redemption')) {
                obj['redemption'] = CampaignLoyaltyVoucherRedemption.constructFromObject(data['redemption']);
            }
            if (data.hasOwnProperty('code_config')) {
                obj['code_config'] = CodeConfig.constructFromObject(data['code_config']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CampaignLoyaltyVoucher</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CampaignLoyaltyVoucher</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CampaignLoyaltyVoucher.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // validate the optional field `loyalty_card`
        if (data['loyalty_card']) { // data not null
          CampaignLoyaltyCard.validateJSON(data['loyalty_card']);
        }
        // validate the optional field `redemption`
        if (data['redemption']) { // data not null
          CampaignLoyaltyVoucherRedemption.validateJSON(data['redemption']);
        }
        // validate the optional field `code_config`
        if (data['code_config']) { // data not null
          CodeConfig.validateJSON(data['code_config']);
        }

        return true;
    }


}

CampaignLoyaltyVoucher.RequiredProperties = ["loyalty_card"];

/**
 * Type of voucher.
 * @member {module:model/CampaignLoyaltyVoucher.TypeEnum} type
 * @default 'LOYALTY_CARD'
 */
CampaignLoyaltyVoucher.prototype['type'] = 'LOYALTY_CARD';

/**
 * @member {module:model/CampaignLoyaltyCard} loyalty_card
 */
CampaignLoyaltyVoucher.prototype['loyalty_card'] = undefined;

/**
 * @member {module:model/CampaignLoyaltyVoucherRedemption} redemption
 */
CampaignLoyaltyVoucher.prototype['redemption'] = undefined;

/**
 * @member {module:model/CodeConfig} code_config
 */
CampaignLoyaltyVoucher.prototype['code_config'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
CampaignLoyaltyVoucher['TypeEnum'] = {

    /**
     * value: "LOYALTY_CARD"
     * @const
     */
    "LOYALTY_CARD": "LOYALTY_CARD"
};



export default CampaignLoyaltyVoucher;

