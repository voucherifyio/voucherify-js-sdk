/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MemberActivityDataRedemptionOrderItemsItemProduct model module.
 * @module model/MemberActivityDataRedemptionOrderItemsItemProduct
 * @version v2018-08-01
 */
class MemberActivityDataRedemptionOrderItemsItemProduct {
    /**
     * Constructs a new <code>MemberActivityDataRedemptionOrderItemsItemProduct</code>.
     * An object containing details of the related product.
     * @alias module:model/MemberActivityDataRedemptionOrderItemsItemProduct
     */
    constructor() { 
        
        MemberActivityDataRedemptionOrderItemsItemProduct.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MemberActivityDataRedemptionOrderItemsItemProduct</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MemberActivityDataRedemptionOrderItemsItemProduct} obj Optional instance to populate.
     * @return {module:model/MemberActivityDataRedemptionOrderItemsItemProduct} The populated <code>MemberActivityDataRedemptionOrderItemsItemProduct</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MemberActivityDataRedemptionOrderItemsItemProduct();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('source_id')) {
                obj['source_id'] = ApiClient.convertToType(data['source_id'], 'String');
            }
            if (data.hasOwnProperty('override')) {
                obj['override'] = ApiClient.convertToType(data['override'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MemberActivityDataRedemptionOrderItemsItemProduct</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MemberActivityDataRedemptionOrderItemsItemProduct</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['source_id'] && !(typeof data['source_id'] === 'string' || data['source_id'] instanceof String)) {
            throw new Error("Expected the field `source_id` to be a primitive type in the JSON string but got " + data['source_id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * A unique identifier that represents the product and is assigned by Voucherify.
 * @member {String} id
 */
MemberActivityDataRedemptionOrderItemsItemProduct.prototype['id'] = undefined;

/**
 * The merchant's product ID (if it is different than Voucherify's product ID). It is really useful in case of integration between multiple systems. It can be an ID from an eCommerce site, a database or a 3rd party service.
 * @member {String} source_id
 */
MemberActivityDataRedemptionOrderItemsItemProduct.prototype['source_id'] = undefined;

/**
 * The override set to `true` is used to store the product information in the system. If the product does not exist, it will be created with a source_id; if it does exist, the provided values for the name, price, and metadata will replace those already stored in the system.
 * @member {Boolean} override
 */
MemberActivityDataRedemptionOrderItemsItemProduct.prototype['override'] = undefined;

/**
 * Product name.
 * @member {String} name
 */
MemberActivityDataRedemptionOrderItemsItemProduct.prototype['name'] = undefined;

/**
 * A set of custom key/value pairs that you can attach to a product. It can be useful for storing additional information about the product in a structured format. It can be used to create product collections.
 * @member {Object} metadata
 */
MemberActivityDataRedemptionOrderItemsItemProduct.prototype['metadata'] = undefined;

/**
 * Product price. A positive integer in the smallest currency unit (e.g. 100 cents for $1.00).
 * @member {Number} price
 */
MemberActivityDataRedemptionOrderItemsItemProduct.prototype['price'] = undefined;






export default MemberActivityDataRedemptionOrderItemsItemProduct;

