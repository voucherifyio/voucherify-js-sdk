/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SimpleCustomerRequiredObjectType from './SimpleCustomerRequiredObjectType';

/**
 * The ClientEventsCreateResponseBody model module.
 * @module model/ClientEventsCreateResponseBody
 * @version v2018-08-01
 */
class ClientEventsCreateResponseBody {
    /**
     * Constructs a new <code>ClientEventsCreateResponseBody</code>.
     * Response body schema for **POST** &#x60;v1/events&#x60;.
     * @alias module:model/ClientEventsCreateResponseBody
     * @param customer {module:model/SimpleCustomerRequiredObjectType} 
     */
    constructor(customer) { 
        
        ClientEventsCreateResponseBody.initialize(this, customer);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, customer) { 
        obj['object'] = 'event';
        obj['customer'] = customer;
    }

    /**
     * Constructs a <code>ClientEventsCreateResponseBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClientEventsCreateResponseBody} obj Optional instance to populate.
     * @return {module:model/ClientEventsCreateResponseBody} The populated <code>ClientEventsCreateResponseBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClientEventsCreateResponseBody();

            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('customer')) {
                obj['customer'] = SimpleCustomerRequiredObjectType.constructFromObject(data['customer']);
            }
            if (data.hasOwnProperty('referral')) {
                obj['referral'] = ApiClient.convertToType(data['referral'], Object);
            }
            if (data.hasOwnProperty('loyalty')) {
                obj['loyalty'] = ApiClient.convertToType(data['loyalty'], Object);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClientEventsCreateResponseBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClientEventsCreateResponseBody</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ClientEventsCreateResponseBody.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // validate the optional field `customer`
        if (data['customer']) { // data not null
          SimpleCustomerRequiredObjectType.validateJSON(data['customer']);
        }

        return true;
    }


}

ClientEventsCreateResponseBody.RequiredProperties = ["customer"];

/**
 * The object represented is an `event`.
 * @member {module:model/ClientEventsCreateResponseBody.ObjectEnum} object
 * @default 'event'
 */
ClientEventsCreateResponseBody.prototype['object'] = 'event';

/**
 * The event name.
 * @member {String} type
 */
ClientEventsCreateResponseBody.prototype['type'] = undefined;

/**
 * @member {module:model/SimpleCustomerRequiredObjectType} customer
 */
ClientEventsCreateResponseBody.prototype['customer'] = undefined;

/**
 * A `null` referral object.
 * @member {Object} referral
 */
ClientEventsCreateResponseBody.prototype['referral'] = undefined;

/**
 * A `null` loyalty object.
 * @member {Object} loyalty
 */
ClientEventsCreateResponseBody.prototype['loyalty'] = undefined;

/**
 * @member {Object} metadata
 */
ClientEventsCreateResponseBody.prototype['metadata'] = undefined;





/**
 * Allowed values for the <code>object</code> property.
 * @enum {String}
 * @readonly
 */
ClientEventsCreateResponseBody['ObjectEnum'] = {

    /**
     * value: "event"
     * @const
     */
    "event": "event"
};



export default ClientEventsCreateResponseBody;

