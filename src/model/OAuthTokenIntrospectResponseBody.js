/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OAuthTokenIntrospectResponseBody model module.
 * @module model/OAuthTokenIntrospectResponseBody
 * @version v2018-08-01
 */
class OAuthTokenIntrospectResponseBody {
    /**
     * Constructs a new <code>OAuthTokenIntrospectResponseBody</code>.
     * Response body schema for **POST** &#x60;/oauth/introspect&#x60;.
     * @alias module:model/OAuthTokenIntrospectResponseBody
     */
    constructor() { 
        
        OAuthTokenIntrospectResponseBody.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['token_type'] = 'Bearer';
    }

    /**
     * Constructs a <code>OAuthTokenIntrospectResponseBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OAuthTokenIntrospectResponseBody} obj Optional instance to populate.
     * @return {module:model/OAuthTokenIntrospectResponseBody} The populated <code>OAuthTokenIntrospectResponseBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OAuthTokenIntrospectResponseBody();

            if (data.hasOwnProperty('access_token')) {
                obj['access_token'] = ApiClient.convertToType(data['access_token'], 'String');
            }
            if (data.hasOwnProperty('client_id')) {
                obj['client_id'] = ApiClient.convertToType(data['client_id'], 'String');
            }
            if (data.hasOwnProperty('expires_at')) {
                obj['expires_at'] = ApiClient.convertToType(data['expires_at'], 'Number');
            }
            if (data.hasOwnProperty('expires_in')) {
                obj['expires_in'] = ApiClient.convertToType(data['expires_in'], 'Number');
            }
            if (data.hasOwnProperty('scope')) {
                obj['scope'] = ApiClient.convertToType(data['scope'], 'String');
            }
            if (data.hasOwnProperty('token_type')) {
                obj['token_type'] = ApiClient.convertToType(data['token_type'], 'String');
            }
            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OAuthTokenIntrospectResponseBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OAuthTokenIntrospectResponseBody</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['access_token'] && !(typeof data['access_token'] === 'string' || data['access_token'] instanceof String)) {
            throw new Error("Expected the field `access_token` to be a primitive type in the JSON string but got " + data['access_token']);
        }
        // ensure the json data is a string
        if (data['client_id'] && !(typeof data['client_id'] === 'string' || data['client_id'] instanceof String)) {
            throw new Error("Expected the field `client_id` to be a primitive type in the JSON string but got " + data['client_id']);
        }
        // ensure the json data is a string
        if (data['scope'] && !(typeof data['scope'] === 'string' || data['scope'] instanceof String)) {
            throw new Error("Expected the field `scope` to be a primitive type in the JSON string but got " + data['scope']);
        }
        // ensure the json data is a string
        if (data['token_type'] && !(typeof data['token_type'] === 'string' || data['token_type'] instanceof String)) {
            throw new Error("Expected the field `token_type` to be a primitive type in the JSON string but got " + data['token_type']);
        }

        return true;
    }


}



/**
 * The access token used to authorize access to the Voucherify API.
 * @member {String} access_token
 */
OAuthTokenIntrospectResponseBody.prototype['access_token'] = undefined;

/**
 * Unique client identifier, assigned by Voucherify, for OAuth.
 * @member {String} client_id
 */
OAuthTokenIntrospectResponseBody.prototype['client_id'] = undefined;

/**
 * Timestamp in seconds in the Unix format indicating when the token expires.
 * @member {Number} expires_at
 */
OAuthTokenIntrospectResponseBody.prototype['expires_at'] = undefined;

/**
 * Number of seconds left until the token expires.
 * @member {Number} expires_in
 */
OAuthTokenIntrospectResponseBody.prototype['expires_in'] = undefined;

/**
 * Defines the scope of possible actions that can be done with the OAuth token. The `api` scope allows using the server-side API. The `client_api` scope allows using the whole client-side API. Possible values: `api`, `assets`, `async-actions`, `campaigns`, `categories`, `client_api`, `client_consents`, `client_customers`, `client_events`, `client_promotions`, `client_publish`, `client_qualifications`, `client_redeem`, `client_redemptions`, `client_validate`, `client_validations`, `client_vouchers`, `consents`, `customers`, `events`, `exports`, `locations`, `loyalties`, `metadata-schemas`, `orders`, `product-collections`, `products`, `promotions`, `publications`, `qualifications`, `redemptions`, `referrals`, `rewards`, `segments`, `SKUs`, `task-results`, `templates`, `trash-bin`, `validation-rules-assignments`, `validation-rules`, `validations`, `vouchers`.
 * @member {String} scope
 */
OAuthTokenIntrospectResponseBody.prototype['scope'] = undefined;

/**
 * Type of the token. Use the value as the header prefix for authorization.
 * @member {module:model/OAuthTokenIntrospectResponseBody.TokenTypeEnum} token_type
 * @default 'Bearer'
 */
OAuthTokenIntrospectResponseBody.prototype['token_type'] = 'Bearer';

/**
 * Determines if the token is active. Nonexistent tokens are also marked as inactive.
 * @member {Boolean} active
 */
OAuthTokenIntrospectResponseBody.prototype['active'] = undefined;





/**
 * Allowed values for the <code>token_type</code> property.
 * @enum {String}
 * @readonly
 */
OAuthTokenIntrospectResponseBody['TokenTypeEnum'] = {

    /**
     * value: "Bearer"
     * @const
     */
    "Bearer": "Bearer"
};



export default OAuthTokenIntrospectResponseBody;

