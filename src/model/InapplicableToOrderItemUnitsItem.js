/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InapplicableToOrderItemUnitsItem model module.
 * @module model/InapplicableToOrderItemUnitsItem
 * @version v2018-08-01
 */
class InapplicableToOrderItemUnitsItem {
    /**
     * Constructs a new <code>InapplicableToOrderItemUnitsItem</code>.
     * @alias module:model/InapplicableToOrderItemUnitsItem
     */
    constructor() { 
        
        InapplicableToOrderItemUnitsItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InapplicableToOrderItemUnitsItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InapplicableToOrderItemUnitsItem} obj Optional instance to populate.
     * @return {module:model/InapplicableToOrderItemUnitsItem} The populated <code>InapplicableToOrderItemUnitsItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InapplicableToOrderItemUnitsItem();

            if (data.hasOwnProperty('index')) {
                obj['index'] = ApiClient.convertToType(data['index'], 'Number');
            }
            if (data.hasOwnProperty('units')) {
                obj['units'] = ApiClient.convertToType(data['units'], ['Number']);
            }
            if (data.hasOwnProperty('units_limit_exceeded')) {
                obj['units_limit_exceeded'] = ApiClient.convertToType(data['units_limit_exceeded'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InapplicableToOrderItemUnitsItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InapplicableToOrderItemUnitsItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['units'])) {
            throw new Error("Expected the field `units` to be an array in the JSON data but got " + data['units']);
        }

        return true;
    }


}



/**
 * Number assigned to the order line item in accordance with the order sent in the request.
 * @member {Number} index
 */
InapplicableToOrderItemUnitsItem.prototype['index'] = undefined;

/**
 * Numbers of units in the order line covered by the discount; e.g. `2, 5, 8` for 10 units with the setting `\"skip_initially\": 1`, `\"repeat\": 3`. The counting of units starts from `1`. The maximum quantity of all handled units is 1000. If the quantity of all order items exceeds 1000, this array is not returned, but `units_limit_exceeded: true`. However, the discount is calculated properly for all relevant units.
 * @member {Array.<Number>} units
 */
InapplicableToOrderItemUnitsItem.prototype['units'] = undefined;

/**
 * Returned as `true` only when the sum total of `quantity` of all order items exceeds 1000.
 * @member {Boolean} units_limit_exceeded
 */
InapplicableToOrderItemUnitsItem.prototype['units_limit_exceeded'] = undefined;






export default InapplicableToOrderItemUnitsItem;

