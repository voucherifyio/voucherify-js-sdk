/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LoyaltiesTransferPoints from './LoyaltiesTransferPoints';

/**
 * The RedeemableLoyaltyCard model module.
 * @module model/RedeemableLoyaltyCard
 * @version v2018-08-01
 */
class RedeemableLoyaltyCard {
    /**
     * Constructs a new <code>RedeemableLoyaltyCard</code>.
     * Redeemable loyalty card object response
     * @alias module:model/RedeemableLoyaltyCard
     */
    constructor() { 
        
        RedeemableLoyaltyCard.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RedeemableLoyaltyCard</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RedeemableLoyaltyCard} obj Optional instance to populate.
     * @return {module:model/RedeemableLoyaltyCard} The populated <code>RedeemableLoyaltyCard</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RedeemableLoyaltyCard();

            if (data.hasOwnProperty('points')) {
                obj['points'] = ApiClient.convertToType(data['points'], 'Number');
            }
            if (data.hasOwnProperty('balance')) {
                obj['balance'] = ApiClient.convertToType(data['balance'], 'Number');
            }
            if (data.hasOwnProperty('exchange_ratio')) {
                obj['exchange_ratio'] = ApiClient.convertToType(data['exchange_ratio'], 'Number');
            }
            if (data.hasOwnProperty('points_ratio')) {
                obj['points_ratio'] = ApiClient.convertToType(data['points_ratio'], 'Number');
            }
            if (data.hasOwnProperty('transfers')) {
                obj['transfers'] = ApiClient.convertToType(data['transfers'], [LoyaltiesTransferPoints]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RedeemableLoyaltyCard</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RedeemableLoyaltyCard</code>.
     */
    static validateJSON(data) {
        if (data['transfers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['transfers'])) {
                throw new Error("Expected the field `transfers` to be an array in the JSON data but got " + data['transfers']);
            }
            // validate the optional field `transfers` (array)
            for (const item of data['transfers']) {
                LoyaltiesTransferPoints.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Total number of points added to the loyalty card over its lifespan.
 * @member {Number} points
 */
RedeemableLoyaltyCard.prototype['points'] = undefined;

/**
 * Points available for reward redemption. This is calculated as follows: `balance` = `points` - `expired_points` - `subtracted_points` - `redemption.redeemed_points`.
 * @member {Number} balance
 */
RedeemableLoyaltyCard.prototype['balance'] = undefined;

/**
 * The cash equivalent of the points defined in the points_ratio property.
 * @member {Number} exchange_ratio
 */
RedeemableLoyaltyCard.prototype['exchange_ratio'] = undefined;

/**
 * The number of loyalty points that will map to the predefined cash amount defined by the exchange_ratio property.
 * @member {Number} points_ratio
 */
RedeemableLoyaltyCard.prototype['points_ratio'] = undefined;

/**
 * @member {Array.<module:model/LoyaltiesTransferPoints>} transfers
 */
RedeemableLoyaltyCard.prototype['transfers'] = undefined;






export default RedeemableLoyaltyCard;

