/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CustomerSummaryOrders from './CustomerSummaryOrders';
import CustomerSummaryRedemptions from './CustomerSummaryRedemptions';

/**
 * The CustomerSummary model module.
 * @module model/CustomerSummary
 * @version v2018-08-01
 */
class CustomerSummary {
    /**
     * Constructs a new <code>CustomerSummary</code>.
     * @alias module:model/CustomerSummary
     * @param redemptions {module:model/CustomerSummaryRedemptions} 
     * @param orders {module:model/CustomerSummaryOrders} 
     */
    constructor(redemptions, orders) { 
        
        CustomerSummary.initialize(this, redemptions, orders);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, redemptions, orders) { 
        obj['redemptions'] = redemptions;
        obj['orders'] = orders;
    }

    /**
     * Constructs a <code>CustomerSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomerSummary} obj Optional instance to populate.
     * @return {module:model/CustomerSummary} The populated <code>CustomerSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomerSummary();

            if (data.hasOwnProperty('redemptions')) {
                obj['redemptions'] = CustomerSummaryRedemptions.constructFromObject(data['redemptions']);
            }
            if (data.hasOwnProperty('orders')) {
                obj['orders'] = CustomerSummaryOrders.constructFromObject(data['orders']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomerSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomerSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CustomerSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `redemptions`
        if (data['redemptions']) { // data not null
          CustomerSummaryRedemptions.validateJSON(data['redemptions']);
        }
        // validate the optional field `orders`
        if (data['orders']) { // data not null
          CustomerSummaryOrders.validateJSON(data['orders']);
        }

        return true;
    }


}

CustomerSummary.RequiredProperties = ["redemptions", "orders"];

/**
 * @member {module:model/CustomerSummaryRedemptions} redemptions
 */
CustomerSummary.prototype['redemptions'] = undefined;

/**
 * @member {module:model/CustomerSummaryOrders} orders
 */
CustomerSummary.prototype['orders'] = undefined;






export default CustomerSummary;

