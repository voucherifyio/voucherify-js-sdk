/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProductCollectionsCreateRequestBodyProductsItem model module.
 * @module model/ProductCollectionsCreateRequestBodyProductsItem
 * @version v2018-08-01
 */
class ProductCollectionsCreateRequestBodyProductsItem {
    /**
     * Constructs a new <code>ProductCollectionsCreateRequestBodyProductsItem</code>.
     * @alias module:model/ProductCollectionsCreateRequestBodyProductsItem
     * @param id {String} The product ID.
     * @param object {module:model/ProductCollectionsCreateRequestBodyProductsItem.ObjectEnum} Denotes the type of the object represented by the ID.
     */
    constructor(id, object) { 
        
        ProductCollectionsCreateRequestBodyProductsItem.initialize(this, id, object);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, object) { 
        obj['id'] = id;
        obj['object'] = object;
    }

    /**
     * Constructs a <code>ProductCollectionsCreateRequestBodyProductsItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductCollectionsCreateRequestBodyProductsItem} obj Optional instance to populate.
     * @return {module:model/ProductCollectionsCreateRequestBodyProductsItem} The populated <code>ProductCollectionsCreateRequestBodyProductsItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductCollectionsCreateRequestBodyProductsItem();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('product_id')) {
                obj['product_id'] = ApiClient.convertToType(data['product_id'], 'String');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductCollectionsCreateRequestBodyProductsItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductCollectionsCreateRequestBodyProductsItem</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProductCollectionsCreateRequestBodyProductsItem.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['product_id'] && !(typeof data['product_id'] === 'string' || data['product_id'] instanceof String)) {
            throw new Error("Expected the field `product_id` to be a primitive type in the JSON string but got " + data['product_id']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }

        return true;
    }


}

ProductCollectionsCreateRequestBodyProductsItem.RequiredProperties = ["id", "object"];

/**
 * The product ID.
 * @member {String} id
 */
ProductCollectionsCreateRequestBodyProductsItem.prototype['id'] = undefined;

/**
 * Product ID for SKUs.
 * @member {String} product_id
 */
ProductCollectionsCreateRequestBodyProductsItem.prototype['product_id'] = undefined;

/**
 * Denotes the type of the object represented by the ID.
 * @member {module:model/ProductCollectionsCreateRequestBodyProductsItem.ObjectEnum} object
 */
ProductCollectionsCreateRequestBodyProductsItem.prototype['object'] = undefined;





/**
 * Allowed values for the <code>object</code> property.
 * @enum {String}
 * @readonly
 */
ProductCollectionsCreateRequestBodyProductsItem['ObjectEnum'] = {

    /**
     * value: "sku"
     * @const
     */
    "sku": "sku",

    /**
     * value: "product"
     * @const
     */
    "product": "product"
};



export default ProductCollectionsCreateRequestBodyProductsItem;

