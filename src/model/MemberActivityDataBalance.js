/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MemberActivityDataBalanceRelatedObject from './MemberActivityDataBalanceRelatedObject';

/**
 * The MemberActivityDataBalance model module.
 * @module model/MemberActivityDataBalance
 * @version v2018-08-01
 */
class MemberActivityDataBalance {
    /**
     * Constructs a new <code>MemberActivityDataBalance</code>.
     * @alias module:model/MemberActivityDataBalance
     */
    constructor() { 
        
        MemberActivityDataBalance.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['object'] = 'balance';
    }

    /**
     * Constructs a <code>MemberActivityDataBalance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MemberActivityDataBalance} obj Optional instance to populate.
     * @return {module:model/MemberActivityDataBalance} The populated <code>MemberActivityDataBalance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MemberActivityDataBalance();

            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('points')) {
                obj['points'] = ApiClient.convertToType(data['points'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('balance')) {
                obj['balance'] = ApiClient.convertToType(data['balance'], 'Number');
            }
            if (data.hasOwnProperty('operation_type')) {
                obj['operation_type'] = ApiClient.convertToType(data['operation_type'], 'String');
            }
            if (data.hasOwnProperty('related_object')) {
                obj['related_object'] = MemberActivityDataBalanceRelatedObject.constructFromObject(data['related_object']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MemberActivityDataBalance</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MemberActivityDataBalance</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['operation_type'] && !(typeof data['operation_type'] === 'string' || data['operation_type'] instanceof String)) {
            throw new Error("Expected the field `operation_type` to be a primitive type in the JSON string but got " + data['operation_type']);
        }
        // validate the optional field `related_object`
        if (data['related_object']) { // data not null
          MemberActivityDataBalanceRelatedObject.validateJSON(data['related_object']);
        }

        return true;
    }


}



/**
 * Credits added or subtracted on a gift card.
 * @member {Number} amount
 */
MemberActivityDataBalance.prototype['amount'] = undefined;

/**
 * Points added or subtracted in the transaction of a loyalty card.
 * @member {Number} points
 */
MemberActivityDataBalance.prototype['points'] = undefined;

/**
 * The type of voucher whose balance is being adjusted due to the transaction.
 * @member {module:model/MemberActivityDataBalance.TypeEnum} type
 */
MemberActivityDataBalance.prototype['type'] = undefined;

/**
 * The number of all points or credits accumulated on the card as affected by add or subtract operations.
 * @member {Number} total
 */
MemberActivityDataBalance.prototype['total'] = undefined;

/**
 * The type of the object represented by the JSON.
 * @member {module:model/MemberActivityDataBalance.ObjectEnum} object
 * @default 'balance'
 */
MemberActivityDataBalance.prototype['object'] = 'balance';

/**
 * The available points or credits on the card after the transaction as affected by redemption or rollback.
 * @member {Number} balance
 */
MemberActivityDataBalance.prototype['balance'] = undefined;

/**
 * The type of the operation being performed. The operation type is `AUTOMATIC` if it is an automatic redemption.
 * @member {module:model/MemberActivityDataBalance.OperationTypeEnum} operation_type
 */
MemberActivityDataBalance.prototype['operation_type'] = undefined;

/**
 * @member {module:model/MemberActivityDataBalanceRelatedObject} related_object
 */
MemberActivityDataBalance.prototype['related_object'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
MemberActivityDataBalance['TypeEnum'] = {

    /**
     * value: "loyalty_card"
     * @const
     */
    "loyalty_card": "loyalty_card",

    /**
     * value: "gift_voucher"
     * @const
     */
    "gift_voucher": "gift_voucher"
};


/**
 * Allowed values for the <code>object</code> property.
 * @enum {String}
 * @readonly
 */
MemberActivityDataBalance['ObjectEnum'] = {

    /**
     * value: "balance"
     * @const
     */
    "balance": "balance"
};


/**
 * Allowed values for the <code>operation_type</code> property.
 * @enum {String}
 * @readonly
 */
MemberActivityDataBalance['OperationTypeEnum'] = {

    /**
     * value: "MANUAL"
     * @const
     */
    "MANUAL": "MANUAL",

    /**
     * value: "AUTOMATIC"
     * @const
     */
    "AUTOMATIC": "AUTOMATIC"
};



export default MemberActivityDataBalance;

