/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApplicableTo from './ApplicableTo';

/**
 * The ValidationRulesCreateResponseBodyApplicableTo model module.
 * @module model/ValidationRulesCreateResponseBodyApplicableTo
 * @version v2018-08-01
 */
class ValidationRulesCreateResponseBodyApplicableTo {
    /**
     * Constructs a new <code>ValidationRulesCreateResponseBodyApplicableTo</code>.
     * @alias module:model/ValidationRulesCreateResponseBodyApplicableTo
     */
    constructor() { 
        
        ValidationRulesCreateResponseBodyApplicableTo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ValidationRulesCreateResponseBodyApplicableTo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ValidationRulesCreateResponseBodyApplicableTo} obj Optional instance to populate.
     * @return {module:model/ValidationRulesCreateResponseBodyApplicableTo} The populated <code>ValidationRulesCreateResponseBodyApplicableTo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ValidationRulesCreateResponseBodyApplicableTo();

            if (data.hasOwnProperty('excluded')) {
                obj['excluded'] = ApiClient.convertToType(data['excluded'], [ApplicableTo]);
            }
            if (data.hasOwnProperty('included')) {
                obj['included'] = ApiClient.convertToType(data['included'], [ApplicableTo]);
            }
            if (data.hasOwnProperty('included_all')) {
                obj['included_all'] = ApiClient.convertToType(data['included_all'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ValidationRulesCreateResponseBodyApplicableTo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ValidationRulesCreateResponseBodyApplicableTo</code>.
     */
    static validateJSON(data) {
        if (data['excluded']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['excluded'])) {
                throw new Error("Expected the field `excluded` to be an array in the JSON data but got " + data['excluded']);
            }
            // validate the optional field `excluded` (array)
            for (const item of data['excluded']) {
                ApplicableTo.validateJSON(item);
            };
        }
        if (data['included']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['included'])) {
                throw new Error("Expected the field `included` to be an array in the JSON data but got " + data['included']);
            }
            // validate the optional field `included` (array)
            for (const item of data['included']) {
                ApplicableTo.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Defines which items are excluded from a discount.
 * @member {Array.<module:model/ApplicableTo>} excluded
 */
ValidationRulesCreateResponseBodyApplicableTo.prototype['excluded'] = undefined;

/**
 * Defines which items are included in a discount.
 * @member {Array.<module:model/ApplicableTo>} included
 */
ValidationRulesCreateResponseBodyApplicableTo.prototype['included'] = undefined;

/**
 * Indicates whether all items are included in the discount.
 * @member {Boolean} included_all
 */
ValidationRulesCreateResponseBodyApplicableTo.prototype['included_all'] = undefined;






export default ValidationRulesCreateResponseBodyApplicableTo;

