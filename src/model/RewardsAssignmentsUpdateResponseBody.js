/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RewardsAssignmentsUpdateResponseBodyParameters from './RewardsAssignmentsUpdateResponseBodyParameters';

/**
 * The RewardsAssignmentsUpdateResponseBody model module.
 * @module model/RewardsAssignmentsUpdateResponseBody
 * @version v2018-08-01
 */
class RewardsAssignmentsUpdateResponseBody {
    /**
     * Constructs a new <code>RewardsAssignmentsUpdateResponseBody</code>.
     * Response body schema for **PUT** &#x60;v1/rewards/{rewardId}/assignments/{assignmentId}&#x60;.
     * @alias module:model/RewardsAssignmentsUpdateResponseBody
     */
    constructor() { 
        
        RewardsAssignmentsUpdateResponseBody.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['object'] = 'reward_assignment';
        obj['related_object_type'] = 'campaign';
    }

    /**
     * Constructs a <code>RewardsAssignmentsUpdateResponseBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RewardsAssignmentsUpdateResponseBody} obj Optional instance to populate.
     * @return {module:model/RewardsAssignmentsUpdateResponseBody} The populated <code>RewardsAssignmentsUpdateResponseBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RewardsAssignmentsUpdateResponseBody();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('reward_id')) {
                obj['reward_id'] = ApiClient.convertToType(data['reward_id'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('related_object_id')) {
                obj['related_object_id'] = ApiClient.convertToType(data['related_object_id'], 'String');
            }
            if (data.hasOwnProperty('related_object_type')) {
                obj['related_object_type'] = ApiClient.convertToType(data['related_object_type'], 'String');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = RewardsAssignmentsUpdateResponseBodyParameters.constructFromObject(data['parameters']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RewardsAssignmentsUpdateResponseBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RewardsAssignmentsUpdateResponseBody</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['reward_id'] && !(typeof data['reward_id'] === 'string' || data['reward_id'] instanceof String)) {
            throw new Error("Expected the field `reward_id` to be a primitive type in the JSON string but got " + data['reward_id']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['related_object_id'] && !(typeof data['related_object_id'] === 'string' || data['related_object_id'] instanceof String)) {
            throw new Error("Expected the field `related_object_id` to be a primitive type in the JSON string but got " + data['related_object_id']);
        }
        // ensure the json data is a string
        if (data['related_object_type'] && !(typeof data['related_object_type'] === 'string' || data['related_object_type'] instanceof String)) {
            throw new Error("Expected the field `related_object_type` to be a primitive type in the JSON string but got " + data['related_object_type']);
        }
        // validate the optional field `parameters`
        if (data['parameters']) { // data not null
          RewardsAssignmentsUpdateResponseBodyParameters.validateJSON(data['parameters']);
        }

        return true;
    }


}



/**
 * Unique reward assignment ID, assigned by Voucherify.
 * @member {String} id
 */
RewardsAssignmentsUpdateResponseBody.prototype['id'] = undefined;

/**
 * Associated reward ID.
 * @member {String} reward_id
 */
RewardsAssignmentsUpdateResponseBody.prototype['reward_id'] = undefined;

/**
 * Timestamp representing the date and time when the reward assignment was created. The value is shown in the ISO 8601 format.
 * @member {Date} created_at
 */
RewardsAssignmentsUpdateResponseBody.prototype['created_at'] = undefined;

/**
 * Timestamp representing the date and time when the reward assignment was updated. The value is shown in the ISO 8601 format.
 * @member {Date} updated_at
 */
RewardsAssignmentsUpdateResponseBody.prototype['updated_at'] = undefined;

/**
 * The type of the object represented by the JSON. This object stores information about the reward assignment.
 * @member {module:model/RewardsAssignmentsUpdateResponseBody.ObjectEnum} object
 * @default 'reward_assignment'
 */
RewardsAssignmentsUpdateResponseBody.prototype['object'] = 'reward_assignment';

/**
 * Related object ID to which the reward was assigned.
 * @member {String} related_object_id
 */
RewardsAssignmentsUpdateResponseBody.prototype['related_object_id'] = undefined;

/**
 * Related object type to which the reward was assigned.
 * @member {module:model/RewardsAssignmentsUpdateResponseBody.RelatedObjectTypeEnum} related_object_type
 * @default 'campaign'
 */
RewardsAssignmentsUpdateResponseBody.prototype['related_object_type'] = 'campaign';

/**
 * @member {module:model/RewardsAssignmentsUpdateResponseBodyParameters} parameters
 */
RewardsAssignmentsUpdateResponseBody.prototype['parameters'] = undefined;





/**
 * Allowed values for the <code>object</code> property.
 * @enum {String}
 * @readonly
 */
RewardsAssignmentsUpdateResponseBody['ObjectEnum'] = {

    /**
     * value: "reward_assignment"
     * @const
     */
    "reward_assignment": "reward_assignment"
};


/**
 * Allowed values for the <code>related_object_type</code> property.
 * @enum {String}
 * @readonly
 */
RewardsAssignmentsUpdateResponseBody['RelatedObjectTypeEnum'] = {

    /**
     * value: "campaign"
     * @const
     */
    "campaign": "campaign"
};



export default RewardsAssignmentsUpdateResponseBody;

