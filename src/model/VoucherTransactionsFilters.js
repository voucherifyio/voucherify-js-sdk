/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VoucherTransactionsExportFilterConditions from './VoucherTransactionsExportFilterConditions';

/**
 * The VoucherTransactionsFilters model module.
 * @module model/VoucherTransactionsFilters
 * @version v2018-08-01
 */
class VoucherTransactionsFilters {
    /**
     * Constructs a new <code>VoucherTransactionsFilters</code>.
     * List of available fields and filters that can be exported with gift card or loyalty card transactions along with the sorting order of the returned data.
     * @alias module:model/VoucherTransactionsFilters
     * @param filters {module:model/VoucherTransactionsExportFilterConditions} 
     */
    constructor(filters) { 
        
        VoucherTransactionsFilters.initialize(this, filters);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, filters) { 
        obj['filters'] = filters;
    }

    /**
     * Constructs a <code>VoucherTransactionsFilters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VoucherTransactionsFilters} obj Optional instance to populate.
     * @return {module:model/VoucherTransactionsFilters} The populated <code>VoucherTransactionsFilters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VoucherTransactionsFilters();

            if (data.hasOwnProperty('order')) {
                obj['order'] = ApiClient.convertToType(data['order'], 'String');
            }
            if (data.hasOwnProperty('fields')) {
                obj['fields'] = ApiClient.convertToType(data['fields'], ['String']);
            }
            if (data.hasOwnProperty('filters')) {
                obj['filters'] = VoucherTransactionsExportFilterConditions.constructFromObject(data['filters']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VoucherTransactionsFilters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VoucherTransactionsFilters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VoucherTransactionsFilters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['order'] && !(typeof data['order'] === 'string' || data['order'] instanceof String)) {
            throw new Error("Expected the field `order` to be a primitive type in the JSON string but got " + data['order']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['fields'])) {
            throw new Error("Expected the field `fields` to be an array in the JSON data but got " + data['fields']);
        }
        // validate the optional field `filters`
        if (data['filters']) { // data not null
          VoucherTransactionsExportFilterConditions.validateJSON(data['filters']);
        }

        return true;
    }


}

VoucherTransactionsFilters.RequiredProperties = ["filters"];

/**
 * How the export is filtered, where the dash `-` preceding a sorting option means sorting in a descending order.
 * @member {module:model/VoucherTransactionsFilters.OrderEnum} order
 */
VoucherTransactionsFilters.prototype['order'] = undefined;

/**
 * Array of strings containing the data in the export. These fields define the headers in the CSV file. The array can be a combination of any of the following available fields:  | **Field** | **Definition** | **Example Export** | |:---|:---|:---| | id | Unique transaction ID. | vtx_0cb7811f1c07765800 | | type | Transaction type. | - `CREDITS_REMOVAL` <br /> - `CREDITS_ADDITION` <br /> - `CREDITS_REFUND` <br /> - `CREDITS_REDEMPTION` <br /> - `POINTS_ACCRUAL`<br /> - `POINTS_REDEMPTION`<br /> - `POINTS_REFUND`<br /> - `POINTS_ADDITION`<br /> - `POINTS_REMOVAL`<br /> - `POINTS_EXPIRATION`<br /> - `POINTS_TRANSFER_IN`<br /> - `POINTS_TRANSFER_OUT` | | source_id | Unique transaction source ID. | 8638 | | reason | Contains the reason for the transaction if one was included originally. |  | | balance | The gift card or loyalty card balance after the transaction. |  | | amount | The amount of gift card or loyalty card credits being allocated during the transaction. This value can either be negative or positive depending on the nature of the transaction. |  | | created_at | Timestamp in ISO 8601 format representing the date and time when the transaction was created. | 2022-03-09T09:16:32.521Z  | | voucher_id | Unique Voucher ID. | v_dky7ksKfPX50Wb2Bxvcoeb1xT20b6tcp | | campaign_id | Parent campaign ID. | camp_FNYR4jhqZBM9xTptxDGgeNBV | | source|  Channel through which the transaction was initiated. | API | | details | More detailed information stored in the form of a JSON. | Provides more details related to the transaction in the form of an object. | | related_transaction_id | Unique transaction ID related to a receiver/donor card in the case of a points transfer from/to another card. | vtx_0c9afe802593b34b80 |
 * @member {Array.<module:model/VoucherTransactionsFilters.FieldsEnum>} fields
 */
VoucherTransactionsFilters.prototype['fields'] = undefined;

/**
 * @member {module:model/VoucherTransactionsExportFilterConditions} filters
 */
VoucherTransactionsFilters.prototype['filters'] = undefined;





/**
 * Allowed values for the <code>order</code> property.
 * @enum {String}
 * @readonly
 */
VoucherTransactionsFilters['OrderEnum'] = {

    /**
     * value: "-created_at"
     * @const
     */
    "-created_at": "-created_at",

    /**
     * value: "created_at"
     * @const
     */
    "created_at": "created_at"
};


/**
 * Allowed values for the <code>fields</code> property.
 * @enum {String}
 * @readonly
 */
VoucherTransactionsFilters['FieldsEnum'] = {

    /**
     * value: "id"
     * @const
     */
    "id": "id",

    /**
     * value: "type"
     * @const
     */
    "type": "type",

    /**
     * value: "source_id"
     * @const
     */
    "source_id": "source_id",

    /**
     * value: "reason"
     * @const
     */
    "reason": "reason",

    /**
     * value: "balance"
     * @const
     */
    "balance": "balance",

    /**
     * value: "amount"
     * @const
     */
    "amount": "amount",

    /**
     * value: "created_at"
     * @const
     */
    "created_at": "created_at",

    /**
     * value: "voucher_id"
     * @const
     */
    "voucher_id": "voucher_id",

    /**
     * value: "campaign_id"
     * @const
     */
    "campaign_id": "campaign_id",

    /**
     * value: "source"
     * @const
     */
    "source": "source",

    /**
     * value: "details"
     * @const
     */
    "details": "details",

    /**
     * value: "related_transaction_id"
     * @const
     */
    "related_transaction_id": "related_transaction_id"
};



export default VoucherTransactionsFilters;

