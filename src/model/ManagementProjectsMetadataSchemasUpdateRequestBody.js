/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ManagementProjectsMetadataSchemaDefinition from './ManagementProjectsMetadataSchemaDefinition';

/**
 * The ManagementProjectsMetadataSchemasUpdateRequestBody model module.
 * @module model/ManagementProjectsMetadataSchemasUpdateRequestBody
 * @version v2018-08-01
 */
class ManagementProjectsMetadataSchemasUpdateRequestBody {
    /**
     * Constructs a new <code>ManagementProjectsMetadataSchemasUpdateRequestBody</code>.
     * 
     * @alias module:model/ManagementProjectsMetadataSchemasUpdateRequestBody
     */
    constructor() { 
        
        ManagementProjectsMetadataSchemasUpdateRequestBody.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ManagementProjectsMetadataSchemasUpdateRequestBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ManagementProjectsMetadataSchemasUpdateRequestBody} obj Optional instance to populate.
     * @return {module:model/ManagementProjectsMetadataSchemasUpdateRequestBody} The populated <code>ManagementProjectsMetadataSchemasUpdateRequestBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ManagementProjectsMetadataSchemasUpdateRequestBody();

            if (data.hasOwnProperty('allow_defined_only')) {
                obj['allow_defined_only'] = ApiClient.convertToType(data['allow_defined_only'], 'Boolean');
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], {'String': ManagementProjectsMetadataSchemaDefinition});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ManagementProjectsMetadataSchemasUpdateRequestBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ManagementProjectsMetadataSchemasUpdateRequestBody</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Restricts the creation of metadata fields when set to `true`. In other words, it indicates whether or not you are allowed to create new metadata definitions; for example, in the campaign manager or publication manager. If it is set to true, then only the defined fields will be available for assigning values. 
 * @member {Boolean} allow_defined_only
 */
ManagementProjectsMetadataSchemasUpdateRequestBody.prototype['allow_defined_only'] = undefined;

/**
 * Contains metadata definitions. There can be many properties within this object.  Only the properties sent in the request will be updated. However, if you send a property, all its key-value pairs must be provided - otherwise, they will be overwritten to new values.  You cannot change the `\"type\"` property. However, it is required, so you need to add it to the request.
 * @member {Object.<String, module:model/ManagementProjectsMetadataSchemaDefinition>} properties
 */
ManagementProjectsMetadataSchemasUpdateRequestBody.prototype['properties'] = undefined;






export default ManagementProjectsMetadataSchemasUpdateRequestBody;

