/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LoyaltyTierBase from './LoyaltyTierBase';
import LoyaltyTierBasePoints from './LoyaltyTierBasePoints';
import MappingPoints from './MappingPoints';

/**
 * The LoyaltiesTiersCreateInBulkRequestBodyItem model module.
 * @module model/LoyaltiesTiersCreateInBulkRequestBodyItem
 * @version v2018-08-01
 */
class LoyaltiesTiersCreateInBulkRequestBodyItem {
    /**
     * Constructs a new <code>LoyaltiesTiersCreateInBulkRequestBodyItem</code>.
     * @alias module:model/LoyaltiesTiersCreateInBulkRequestBodyItem
     * @implements module:model/LoyaltyTierBase
     */
    constructor() { 
        LoyaltyTierBase.initialize(this);
        LoyaltiesTiersCreateInBulkRequestBodyItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LoyaltiesTiersCreateInBulkRequestBodyItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LoyaltiesTiersCreateInBulkRequestBodyItem} obj Optional instance to populate.
     * @return {module:model/LoyaltiesTiersCreateInBulkRequestBodyItem} The populated <code>LoyaltiesTiersCreateInBulkRequestBodyItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LoyaltiesTiersCreateInBulkRequestBodyItem();
            LoyaltyTierBase.constructFromObject(data, obj);

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('earning_rules')) {
                obj['earning_rules'] = ApiClient.convertToType(data['earning_rules'], {'String': MappingPoints});
            }
            if (data.hasOwnProperty('rewards')) {
                obj['rewards'] = ApiClient.convertToType(data['rewards'], {'String': MappingPoints});
            }
            if (data.hasOwnProperty('points')) {
                obj['points'] = LoyaltyTierBasePoints.constructFromObject(data['points']);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LoyaltiesTiersCreateInBulkRequestBodyItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LoyaltiesTiersCreateInBulkRequestBodyItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `points`
        if (data['points']) { // data not null
          LoyaltyTierBasePoints.validateJSON(data['points']);
        }

        return true;
    }


}



/**
 * Loyalty Tier name.
 * @member {String} name
 */
LoyaltiesTiersCreateInBulkRequestBodyItem.prototype['name'] = undefined;

/**
 * Contains a list of earning rule IDs and their points mapping for the given earning rule.
 * @member {Object.<String, module:model/MappingPoints>} earning_rules
 */
LoyaltiesTiersCreateInBulkRequestBodyItem.prototype['earning_rules'] = undefined;

/**
 * Contains a list of reward IDs and their points mapping for the given reward.
 * @member {Object.<String, module:model/MappingPoints>} rewards
 */
LoyaltiesTiersCreateInBulkRequestBodyItem.prototype['rewards'] = undefined;

/**
 * @member {module:model/LoyaltyTierBasePoints} points
 */
LoyaltiesTiersCreateInBulkRequestBodyItem.prototype['points'] = undefined;

/**
 * The metadata object stores all custom attributes assigned to the loyalty tier. A set of key/value pairs that you can attach to a loyalty tier object. It can be useful for storing additional information about the loyalty tier in a structured format.
 * @member {Object} metadata
 */
LoyaltiesTiersCreateInBulkRequestBodyItem.prototype['metadata'] = undefined;


// Implement LoyaltyTierBase interface:
/**
 * Loyalty Tier name.
 * @member {String} name
 */
LoyaltyTierBase.prototype['name'] = undefined;
/**
 * Contains a list of earning rule IDs and their points mapping for the given earning rule.
 * @member {Object.<String, module:model/MappingPoints>} earning_rules
 */
LoyaltyTierBase.prototype['earning_rules'] = undefined;
/**
 * Contains a list of reward IDs and their points mapping for the given reward.
 * @member {Object.<String, module:model/MappingPoints>} rewards
 */
LoyaltyTierBase.prototype['rewards'] = undefined;
/**
 * @member {module:model/LoyaltyTierBasePoints} points
 */
LoyaltyTierBase.prototype['points'] = undefined;




export default LoyaltiesTiersCreateInBulkRequestBodyItem;

