/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LoyaltyPointsBucketBucket from './LoyaltyPointsBucketBucket';

/**
 * The LoyaltyPointsBucket model module.
 * @module model/LoyaltyPointsBucket
 * @version v2018-08-01
 */
class LoyaltyPointsBucket {
    /**
     * Constructs a new <code>LoyaltyPointsBucket</code>.
     * Contains the details about expiring loyalty points.
     * @alias module:model/LoyaltyPointsBucket
     */
    constructor() { 
        
        LoyaltyPointsBucket.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['object'] = 'loyalty_points_bucket';
    }

    /**
     * Constructs a <code>LoyaltyPointsBucket</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LoyaltyPointsBucket} obj Optional instance to populate.
     * @return {module:model/LoyaltyPointsBucket} The populated <code>LoyaltyPointsBucket</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LoyaltyPointsBucket();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('voucher_id')) {
                obj['voucher_id'] = ApiClient.convertToType(data['voucher_id'], 'String');
            }
            if (data.hasOwnProperty('campaign_id')) {
                obj['campaign_id'] = ApiClient.convertToType(data['campaign_id'], 'String');
            }
            if (data.hasOwnProperty('bucket')) {
                obj['bucket'] = LoyaltyPointsBucketBucket.constructFromObject(data['bucket']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('expires_at')) {
                obj['expires_at'] = ApiClient.convertToType(data['expires_at'], 'Date');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LoyaltyPointsBucket</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LoyaltyPointsBucket</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['voucher_id'] && !(typeof data['voucher_id'] === 'string' || data['voucher_id'] instanceof String)) {
            throw new Error("Expected the field `voucher_id` to be a primitive type in the JSON string but got " + data['voucher_id']);
        }
        // ensure the json data is a string
        if (data['campaign_id'] && !(typeof data['campaign_id'] === 'string' || data['campaign_id'] instanceof String)) {
            throw new Error("Expected the field `campaign_id` to be a primitive type in the JSON string but got " + data['campaign_id']);
        }
        // validate the optional field `bucket`
        if (data['bucket']) { // data not null
          LoyaltyPointsBucketBucket.validateJSON(data['bucket']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }

        return true;
    }


}



/**
 * Unique identifier of the loyalty points bucket.
 * @member {String} id
 */
LoyaltyPointsBucket.prototype['id'] = undefined;

/**
 * Unique identifier of the parent loyalty card.
 * @member {String} voucher_id
 */
LoyaltyPointsBucket.prototype['voucher_id'] = undefined;

/**
 * Unique identifier of the parent campaign.
 * @member {String} campaign_id
 */
LoyaltyPointsBucket.prototype['campaign_id'] = undefined;

/**
 * @member {module:model/LoyaltyPointsBucketBucket} bucket
 */
LoyaltyPointsBucket.prototype['bucket'] = undefined;

/**
 * Loyalty point point bucket status.
 * @member {String} status
 */
LoyaltyPointsBucket.prototype['status'] = undefined;

/**
 * Date when the number of points defined in the bucket object are due to expire.
 * @member {Date} expires_at
 */
LoyaltyPointsBucket.prototype['expires_at'] = undefined;

/**
 * Timestamp representing the date and time when the loyalty point bucket object was created in ISO 8601 format.
 * @member {Date} created_at
 */
LoyaltyPointsBucket.prototype['created_at'] = undefined;

/**
 * Timestamp representing the date and time when the loyalty point bucket object was updated in ISO 8601 format.
 * @member {Date} updated_at
 */
LoyaltyPointsBucket.prototype['updated_at'] = undefined;

/**
 * The type of the object represented by JSON. This object stores information about the loyalty point bucket.
 * @member {module:model/LoyaltyPointsBucket.ObjectEnum} object
 * @default 'loyalty_points_bucket'
 */
LoyaltyPointsBucket.prototype['object'] = 'loyalty_points_bucket';





/**
 * Allowed values for the <code>object</code> property.
 * @enum {String}
 * @readonly
 */
LoyaltyPointsBucket['ObjectEnum'] = {

    /**
     * value: "loyalty_points_bucket"
     * @const
     */
    "loyalty_points_bucket": "loyalty_points_bucket"
};



export default LoyaltyPointsBucket;

