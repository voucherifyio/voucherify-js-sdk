/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SegmentsGetResponseBody model module.
 * @module model/SegmentsGetResponseBody
 * @version v2018-08-01
 */
class SegmentsGetResponseBody {
    /**
     * Constructs a new <code>SegmentsGetResponseBody</code>.
     * Response body schema for **GET** &#x60;v1/v1/segments/{segmentId}&#x60;.
     * @alias module:model/SegmentsGetResponseBody
     */
    constructor() { 
        
        SegmentsGetResponseBody.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['object'] = 'segment';
    }

    /**
     * Constructs a <code>SegmentsGetResponseBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SegmentsGetResponseBody} obj Optional instance to populate.
     * @return {module:model/SegmentsGetResponseBody} The populated <code>SegmentsGetResponseBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SegmentsGetResponseBody();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('filter')) {
                obj['filter'] = ApiClient.convertToType(data['filter'], Object);
            }
            if (data.hasOwnProperty('initial_sync_status')) {
                obj['initial_sync_status'] = ApiClient.convertToType(data['initial_sync_status'], 'String');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SegmentsGetResponseBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SegmentsGetResponseBody</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['initial_sync_status'] && !(typeof data['initial_sync_status'] === 'string' || data['initial_sync_status'] instanceof String)) {
            throw new Error("Expected the field `initial_sync_status` to be a primitive type in the JSON string but got " + data['initial_sync_status']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }

        return true;
    }


}



/**
 * Unique segment ID.
 * @member {String} id
 */
SegmentsGetResponseBody.prototype['id'] = undefined;

/**
 * Segment name.
 * @member {String} name
 */
SegmentsGetResponseBody.prototype['name'] = undefined;

/**
 * Timestamp representing the date and time when the segment was created. The value is shown in the ISO 8601 format.
 * @member {Date} created_at
 */
SegmentsGetResponseBody.prototype['created_at'] = undefined;

/**
 * Defines whether the segment is: - Active (`auto-update`): customers enter and leave the segment based on the defined filters and the `customer.segment.entered` and `customer.segment.left` events are triggered, - Passive (`passive`): customers enter and leave the segment based on the defined filters, but the `customer.segment.entered` and `customer.segment.left` events are not triggered, - Static (`static`): manually selected customers.
 * @member {module:model/SegmentsGetResponseBody.TypeEnum} type
 */
SegmentsGetResponseBody.prototype['type'] = undefined;

/**
 * Defines a set of criteria for an `auto-update` or `passive` segment type.
 * @member {Object} filter
 */
SegmentsGetResponseBody.prototype['filter'] = undefined;

/**
 * @member {module:model/SegmentsGetResponseBody.InitialSyncStatusEnum} initial_sync_status
 */
SegmentsGetResponseBody.prototype['initial_sync_status'] = undefined;

/**
 * The type of the object represented by JSON. This object stores information about the customer segment.
 * @member {module:model/SegmentsGetResponseBody.ObjectEnum} object
 * @default 'segment'
 */
SegmentsGetResponseBody.prototype['object'] = 'segment';





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
SegmentsGetResponseBody['TypeEnum'] = {

    /**
     * value: "auto-update"
     * @const
     */
    "auto-update": "auto-update",

    /**
     * value: "passive"
     * @const
     */
    "passive": "passive",

    /**
     * value: "static"
     * @const
     */
    "static": "static"
};


/**
 * Allowed values for the <code>initial_sync_status</code> property.
 * @enum {String}
 * @readonly
 */
SegmentsGetResponseBody['InitialSyncStatusEnum'] = {

    /**
     * value: "IN_PROGRESS"
     * @const
     */
    "IN_PROGRESS": "IN_PROGRESS",

    /**
     * value: "DONE"
     * @const
     */
    "DONE": "DONE"
};


/**
 * Allowed values for the <code>object</code> property.
 * @enum {String}
 * @readonly
 */
SegmentsGetResponseBody['ObjectEnum'] = {

    /**
     * value: "segment"
     * @const
     */
    "segment": "segment"
};



export default SegmentsGetResponseBody;

