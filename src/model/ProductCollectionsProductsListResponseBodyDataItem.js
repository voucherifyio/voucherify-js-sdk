/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProductWithoutSkus from './ProductWithoutSkus';

/**
 * The ProductCollectionsProductsListResponseBodyDataItem model module.
 * @module model/ProductCollectionsProductsListResponseBodyDataItem
 * @version v2018-08-01
 */
class ProductCollectionsProductsListResponseBodyDataItem {
    /**
     * Constructs a new <code>ProductCollectionsProductsListResponseBodyDataItem</code>.
     * @alias module:model/ProductCollectionsProductsListResponseBodyDataItem
     */
    constructor() { 
        
        ProductCollectionsProductsListResponseBodyDataItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductCollectionsProductsListResponseBodyDataItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductCollectionsProductsListResponseBodyDataItem} obj Optional instance to populate.
     * @return {module:model/ProductCollectionsProductsListResponseBodyDataItem} The populated <code>ProductCollectionsProductsListResponseBodyDataItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductCollectionsProductsListResponseBodyDataItem();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('source_id')) {
                obj['source_id'] = ApiClient.convertToType(data['source_id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], ['String']);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('image_url')) {
                obj['image_url'] = ApiClient.convertToType(data['image_url'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('product_id')) {
                obj['product_id'] = ApiClient.convertToType(data['product_id'], 'String');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('product')) {
                obj['product'] = ProductWithoutSkus.constructFromObject(data['product']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductCollectionsProductsListResponseBodyDataItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductCollectionsProductsListResponseBodyDataItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['source_id'] && !(typeof data['source_id'] === 'string' || data['source_id'] instanceof String)) {
            throw new Error("Expected the field `source_id` to be a primitive type in the JSON string but got " + data['source_id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['attributes'])) {
            throw new Error("Expected the field `attributes` to be an array in the JSON data but got " + data['attributes']);
        }
        // ensure the json data is a string
        if (data['image_url'] && !(typeof data['image_url'] === 'string' || data['image_url'] instanceof String)) {
            throw new Error("Expected the field `image_url` to be a primitive type in the JSON string but got " + data['image_url']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
            throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['product_id'] && !(typeof data['product_id'] === 'string' || data['product_id'] instanceof String)) {
            throw new Error("Expected the field `product_id` to be a primitive type in the JSON string but got " + data['product_id']);
        }
        // ensure the json data is a string
        if (data['sku'] && !(typeof data['sku'] === 'string' || data['sku'] instanceof String)) {
            throw new Error("Expected the field `sku` to be a primitive type in the JSON string but got " + data['sku']);
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // validate the optional field `product`
        if (data['product']) { // data not null
          ProductWithoutSkus.validateJSON(data['product']);
        }

        return true;
    }


}



/**
 * @member {String} id
 */
ProductCollectionsProductsListResponseBodyDataItem.prototype['id'] = undefined;

/**
 * @member {String} source_id
 */
ProductCollectionsProductsListResponseBodyDataItem.prototype['source_id'] = undefined;

/**
 * Unique user-defined product name.
 * @member {String} name
 */
ProductCollectionsProductsListResponseBodyDataItem.prototype['name'] = undefined;

/**
 * Unit price. It is represented by a value multiplied by 100 to accurately reflect 2 decimal places, such as `$100.00` being expressed as `10000`.
 * @member {Number} price
 */
ProductCollectionsProductsListResponseBodyDataItem.prototype['price'] = undefined;

/**
 * A list of product attributes whose values you can customize for given SKUs: `[\"color\",\"size\",\"ranking\"]`. Each child SKU can have a unique value for a given attribute.
 * @member {Array.<String>} attributes
 */
ProductCollectionsProductsListResponseBodyDataItem.prototype['attributes'] = undefined;

/**
 * The metadata object stores all custom attributes assigned to the product. A set of key/value pairs that you can attach to a product object. It can be useful for storing additional information about the product in a structured format. It can be used to create product collections. and The metadata object stores all custom attributes assigned to the SKU. A set of key/value pairs that you can attach to a SKU object. It can be useful for storing additional information about the SKU in a structured format. It can be used to create product collections.
 * @member {Object} metadata
 */
ProductCollectionsProductsListResponseBodyDataItem.prototype['metadata'] = undefined;

/**
 * @member {String} image_url
 */
ProductCollectionsProductsListResponseBodyDataItem.prototype['image_url'] = undefined;

/**
 * @member {String} created_at
 */
ProductCollectionsProductsListResponseBodyDataItem.prototype['created_at'] = undefined;

/**
 * @member {String} updated_at
 */
ProductCollectionsProductsListResponseBodyDataItem.prototype['updated_at'] = undefined;

/**
 * @member {module:model/ProductCollectionsProductsListResponseBodyDataItem.ObjectEnum} object
 */
ProductCollectionsProductsListResponseBodyDataItem.prototype['object'] = undefined;

/**
 * The parent product's unique ID.
 * @member {String} product_id
 */
ProductCollectionsProductsListResponseBodyDataItem.prototype['product_id'] = undefined;

/**
 * Unique user-defined SKU name.
 * @member {String} sku
 */
ProductCollectionsProductsListResponseBodyDataItem.prototype['sku'] = undefined;

/**
 * SKU price currency.
 * @member {String} currency
 */
ProductCollectionsProductsListResponseBodyDataItem.prototype['currency'] = undefined;

/**
 * @member {module:model/ProductWithoutSkus} product
 */
ProductCollectionsProductsListResponseBodyDataItem.prototype['product'] = undefined;





/**
 * Allowed values for the <code>object</code> property.
 * @enum {String}
 * @readonly
 */
ProductCollectionsProductsListResponseBodyDataItem['ObjectEnum'] = {

    /**
     * value: "product"
     * @const
     */
    "product": "product",

    /**
     * value: "sku"
     * @const
     */
    "sku": "sku"
};



export default ProductCollectionsProductsListResponseBodyDataItem;

