/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApplicableToResultList from './ApplicableToResultList';
import CategoryWithStackingRulesType from './CategoryWithStackingRulesType';
import ClientValidationsValidateResponseBodyRedeemablesItemOrder from './ClientValidationsValidateResponseBodyRedeemablesItemOrder';
import ClientValidationsValidateResponseBodyRedeemablesItemResult from './ClientValidationsValidateResponseBodyRedeemablesItemResult';
import InapplicableToResultList from './InapplicableToResultList';

/**
 * The ClientValidationsValidateResponseBodyRedeemablesItem model module.
 * @module model/ClientValidationsValidateResponseBodyRedeemablesItem
 * @version v2018-08-01
 */
class ClientValidationsValidateResponseBodyRedeemablesItem {
    /**
     * Constructs a new <code>ClientValidationsValidateResponseBodyRedeemablesItem</code>.
     * @alias module:model/ClientValidationsValidateResponseBodyRedeemablesItem
     */
    constructor() { 
        
        ClientValidationsValidateResponseBodyRedeemablesItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClientValidationsValidateResponseBodyRedeemablesItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClientValidationsValidateResponseBodyRedeemablesItem} obj Optional instance to populate.
     * @return {module:model/ClientValidationsValidateResponseBodyRedeemablesItem} The populated <code>ClientValidationsValidateResponseBodyRedeemablesItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClientValidationsValidateResponseBodyRedeemablesItem();

            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = ClientValidationsValidateResponseBodyRedeemablesItemOrder.constructFromObject(data['order']);
            }
            if (data.hasOwnProperty('applicable_to')) {
                obj['applicable_to'] = ApplicableToResultList.constructFromObject(data['applicable_to']);
            }
            if (data.hasOwnProperty('inapplicable_to')) {
                obj['inapplicable_to'] = InapplicableToResultList.constructFromObject(data['inapplicable_to']);
            }
            if (data.hasOwnProperty('result')) {
                obj['result'] = ClientValidationsValidateResponseBodyRedeemablesItemResult.constructFromObject(data['result']);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('categories')) {
                obj['categories'] = ApiClient.convertToType(data['categories'], [CategoryWithStackingRulesType]);
            }
            if (data.hasOwnProperty('campaign_name')) {
                obj['campaign_name'] = ApiClient.convertToType(data['campaign_name'], 'String');
            }
            if (data.hasOwnProperty('campaign_id')) {
                obj['campaign_id'] = ApiClient.convertToType(data['campaign_id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClientValidationsValidateResponseBodyRedeemablesItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClientValidationsValidateResponseBodyRedeemablesItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // validate the optional field `order`
        if (data['order']) { // data not null
          ClientValidationsValidateResponseBodyRedeemablesItemOrder.validateJSON(data['order']);
        }
        // validate the optional field `applicable_to`
        if (data['applicable_to']) { // data not null
          ApplicableToResultList.validateJSON(data['applicable_to']);
        }
        // validate the optional field `inapplicable_to`
        if (data['inapplicable_to']) { // data not null
          InapplicableToResultList.validateJSON(data['inapplicable_to']);
        }
        // validate the optional field `result`
        if (data['result']) { // data not null
          ClientValidationsValidateResponseBodyRedeemablesItemResult.validateJSON(data['result']);
        }
        if (data['categories']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['categories'])) {
                throw new Error("Expected the field `categories` to be an array in the JSON data but got " + data['categories']);
            }
            // validate the optional field `categories` (array)
            for (const item of data['categories']) {
                CategoryWithStackingRulesType.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['campaign_name'] && !(typeof data['campaign_name'] === 'string' || data['campaign_name'] instanceof String)) {
            throw new Error("Expected the field `campaign_name` to be a primitive type in the JSON string but got " + data['campaign_name']);
        }
        // ensure the json data is a string
        if (data['campaign_id'] && !(typeof data['campaign_id'] === 'string' || data['campaign_id'] instanceof String)) {
            throw new Error("Expected the field `campaign_id` to be a primitive type in the JSON string but got " + data['campaign_id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * @member {module:model/ClientValidationsValidateResponseBodyRedeemablesItem.StatusEnum} status
 */
ClientValidationsValidateResponseBodyRedeemablesItem.prototype['status'] = undefined;

/**
 * Redeemable ID, i.e. the voucher code.
 * @member {String} id
 */
ClientValidationsValidateResponseBodyRedeemablesItem.prototype['id'] = undefined;

/**
 * Redeemable's object type.
 * @member {module:model/ClientValidationsValidateResponseBodyRedeemablesItem.ObjectEnum} object
 */
ClientValidationsValidateResponseBodyRedeemablesItem.prototype['object'] = undefined;

/**
 * @member {module:model/ClientValidationsValidateResponseBodyRedeemablesItemOrder} order
 */
ClientValidationsValidateResponseBodyRedeemablesItem.prototype['order'] = undefined;

/**
 * @member {module:model/ApplicableToResultList} applicable_to
 */
ClientValidationsValidateResponseBodyRedeemablesItem.prototype['applicable_to'] = undefined;

/**
 * @member {module:model/InapplicableToResultList} inapplicable_to
 */
ClientValidationsValidateResponseBodyRedeemablesItem.prototype['inapplicable_to'] = undefined;

/**
 * @member {module:model/ClientValidationsValidateResponseBodyRedeemablesItemResult} result
 */
ClientValidationsValidateResponseBodyRedeemablesItem.prototype['result'] = undefined;

/**
 * The metadata object stores all custom attributes in the form of key/value pairs assigned to the redeemable.
 * @member {Object} metadata
 */
ClientValidationsValidateResponseBodyRedeemablesItem.prototype['metadata'] = undefined;

/**
 * @member {Array.<module:model/CategoryWithStackingRulesType>} categories
 */
ClientValidationsValidateResponseBodyRedeemablesItem.prototype['categories'] = undefined;

/**
 * Campaign name. Displayed only if the `options.expand` is passed with a `redeemable` value in the validation request body.
 * @member {String} campaign_name
 */
ClientValidationsValidateResponseBodyRedeemablesItem.prototype['campaign_name'] = undefined;

/**
 * Unique campaign ID assigned by Voucherify. Displayed only if the `options.expand` is passed with a `redeemable` value in the validation request body.
 * @member {String} campaign_id
 */
ClientValidationsValidateResponseBodyRedeemablesItem.prototype['campaign_id'] = undefined;

/**
 * Name of the promotion tier. Displayed only if the `options.expand` is passed with a `redeemable` value in the validation request body.
 * @member {String} name
 */
ClientValidationsValidateResponseBodyRedeemablesItem.prototype['name'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
ClientValidationsValidateResponseBodyRedeemablesItem['StatusEnum'] = {

    /**
     * value: "APPLICABLE"
     * @const
     */
    "APPLICABLE": "APPLICABLE",

    /**
     * value: "INAPPLICABLE"
     * @const
     */
    "INAPPLICABLE": "INAPPLICABLE",

    /**
     * value: "SKIPPED"
     * @const
     */
    "SKIPPED": "SKIPPED"
};


/**
 * Allowed values for the <code>object</code> property.
 * @enum {String}
 * @readonly
 */
ClientValidationsValidateResponseBodyRedeemablesItem['ObjectEnum'] = {

    /**
     * value: "voucher"
     * @const
     */
    "voucher": "voucher",

    /**
     * value: "promotion_tier"
     * @const
     */
    "promotion_tier": "promotion_tier"
};



export default ClientValidationsValidateResponseBodyRedeemablesItem;

