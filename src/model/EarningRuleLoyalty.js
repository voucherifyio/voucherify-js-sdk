/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EarningRuleLoyaltyCustomEvent from './EarningRuleLoyaltyCustomEvent';
import EarningRuleLoyaltyCustomer from './EarningRuleLoyaltyCustomer';
import EarningRuleLoyaltyOrder from './EarningRuleLoyaltyOrder';
import EarningRuleLoyaltyOrderItems from './EarningRuleLoyaltyOrderItems';

/**
 * The EarningRuleLoyalty model module.
 * @module model/EarningRuleLoyalty
 * @version v2018-08-01
 */
class EarningRuleLoyalty {
    /**
     * Constructs a new <code>EarningRuleLoyalty</code>.
     * @alias module:model/EarningRuleLoyalty
     */
    constructor() { 
        
        EarningRuleLoyalty.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EarningRuleLoyalty</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EarningRuleLoyalty} obj Optional instance to populate.
     * @return {module:model/EarningRuleLoyalty} The populated <code>EarningRuleLoyalty</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EarningRuleLoyalty();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('points')) {
                obj['points'] = ApiClient.convertToType(data['points'], 'Number');
            }
            if (data.hasOwnProperty('points_formula')) {
                obj['points_formula'] = ApiClient.convertToType(data['points_formula'], 'String');
            }
            if (data.hasOwnProperty('calculation_type')) {
                obj['calculation_type'] = ApiClient.convertToType(data['calculation_type'], 'String');
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = EarningRuleLoyaltyOrder.constructFromObject(data['order']);
            }
            if (data.hasOwnProperty('order_items')) {
                obj['order_items'] = EarningRuleLoyaltyOrderItems.constructFromObject(data['order_items']);
            }
            if (data.hasOwnProperty('customer')) {
                obj['customer'] = EarningRuleLoyaltyCustomer.constructFromObject(data['customer']);
            }
            if (data.hasOwnProperty('custom_event')) {
                obj['custom_event'] = EarningRuleLoyaltyCustomEvent.constructFromObject(data['custom_event']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EarningRuleLoyalty</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EarningRuleLoyalty</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['points_formula'] && !(typeof data['points_formula'] === 'string' || data['points_formula'] instanceof String)) {
            throw new Error("Expected the field `points_formula` to be a primitive type in the JSON string but got " + data['points_formula']);
        }
        // ensure the json data is a string
        if (data['calculation_type'] && !(typeof data['calculation_type'] === 'string' || data['calculation_type'] instanceof String)) {
            throw new Error("Expected the field `calculation_type` to be a primitive type in the JSON string but got " + data['calculation_type']);
        }
        // validate the optional field `order`
        if (data['order']) { // data not null
          EarningRuleLoyaltyOrder.validateJSON(data['order']);
        }
        // validate the optional field `order_items`
        if (data['order_items']) { // data not null
          EarningRuleLoyaltyOrderItems.validateJSON(data['order_items']);
        }
        // validate the optional field `customer`
        if (data['customer']) { // data not null
          EarningRuleLoyaltyCustomer.validateJSON(data['customer']);
        }
        // validate the optional field `custom_event`
        if (data['custom_event']) { // data not null
          EarningRuleLoyaltyCustomEvent.validateJSON(data['custom_event']);
        }

        return true;
    }


}



/**
 * @member {module:model/EarningRuleLoyalty.TypeEnum} type
 */
EarningRuleLoyalty.prototype['type'] = undefined;

/**
 * Defines how the points will be added to the loyalty card. FIXED adds a fixed number of points.
 * @member {Number} points
 */
EarningRuleLoyalty.prototype['points'] = undefined;

/**
 * Formula used to dynamically calculate the rewarded points.
 * @member {String} points_formula
 */
EarningRuleLoyalty.prototype['points_formula'] = undefined;

/**
 * @member {module:model/EarningRuleLoyalty.CalculationTypeEnum} calculation_type
 */
EarningRuleLoyalty.prototype['calculation_type'] = undefined;

/**
 * @member {module:model/EarningRuleLoyaltyOrder} order
 */
EarningRuleLoyalty.prototype['order'] = undefined;

/**
 * @member {module:model/EarningRuleLoyaltyOrderItems} order_items
 */
EarningRuleLoyalty.prototype['order_items'] = undefined;

/**
 * @member {module:model/EarningRuleLoyaltyCustomer} customer
 */
EarningRuleLoyalty.prototype['customer'] = undefined;

/**
 * @member {module:model/EarningRuleLoyaltyCustomEvent} custom_event
 */
EarningRuleLoyalty.prototype['custom_event'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
EarningRuleLoyalty['TypeEnum'] = {

    /**
     * value: "FIXED"
     * @const
     */
    "FIXED": "FIXED",

    /**
     * value: "PROPORTIONAL"
     * @const
     */
    "PROPORTIONAL": "PROPORTIONAL"
};


/**
 * Allowed values for the <code>calculation_type</code> property.
 * @enum {String}
 * @readonly
 */
EarningRuleLoyalty['CalculationTypeEnum'] = {

    /**
     * value: "ORDER_AMOUNT"
     * @const
     */
    "ORDER_AMOUNT": "ORDER_AMOUNT",

    /**
     * value: "ORDER_TOTAL_AMOUNT"
     * @const
     */
    "ORDER_TOTAL_AMOUNT": "ORDER_TOTAL_AMOUNT",

    /**
     * value: "ORDER_METADATA"
     * @const
     */
    "ORDER_METADATA": "ORDER_METADATA",

    /**
     * value: "ORDER_ITEMS_QUANTITY"
     * @const
     */
    "ORDER_ITEMS_QUANTITY": "ORDER_ITEMS_QUANTITY",

    /**
     * value: "ORDER_ITEMS_AMOUNT"
     * @const
     */
    "ORDER_ITEMS_AMOUNT": "ORDER_ITEMS_AMOUNT",

    /**
     * value: "ORDER_ITEMS_SUBTOTAL_AMOUNT"
     * @const
     */
    "ORDER_ITEMS_SUBTOTAL_AMOUNT": "ORDER_ITEMS_SUBTOTAL_AMOUNT",

    /**
     * value: "CUSTOMER_METADATA"
     * @const
     */
    "CUSTOMER_METADATA": "CUSTOMER_METADATA",

    /**
     * value: "CUSTOM_EVENT_METADATA"
     * @const
     */
    "CUSTOM_EVENT_METADATA": "CUSTOM_EVENT_METADATA"
};



export default EarningRuleLoyalty;

