/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ApplicationDetailsItem from './ApplicationDetailsItem';
import OrderCalculatedItem from './OrderCalculatedItem';
import OrderCalculatedItemProduct from './OrderCalculatedItemProduct';
import OrderCalculatedItemSku from './OrderCalculatedItemSku';

/**
 * The QualificationsRedeemableOrderItemsItem model module.
 * @module model/QualificationsRedeemableOrderItemsItem
 * @version v2018-08-01
 */
class QualificationsRedeemableOrderItemsItem {
    /**
     * Constructs a new <code>QualificationsRedeemableOrderItemsItem</code>.
     * @alias module:model/QualificationsRedeemableOrderItemsItem
     * @implements module:model/OrderCalculatedItem
     */
    constructor() { 
        OrderCalculatedItem.initialize(this);
        QualificationsRedeemableOrderItemsItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['object'] = 'order_item';
    }

    /**
     * Constructs a <code>QualificationsRedeemableOrderItemsItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QualificationsRedeemableOrderItemsItem} obj Optional instance to populate.
     * @return {module:model/QualificationsRedeemableOrderItemsItem} The populated <code>QualificationsRedeemableOrderItemsItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QualificationsRedeemableOrderItemsItem();
            OrderCalculatedItem.constructFromObject(data, obj);

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('sku_id')) {
                obj['sku_id'] = ApiClient.convertToType(data['sku_id'], 'String');
            }
            if (data.hasOwnProperty('product_id')) {
                obj['product_id'] = ApiClient.convertToType(data['product_id'], 'String');
            }
            if (data.hasOwnProperty('related_object')) {
                obj['related_object'] = ApiClient.convertToType(data['related_object'], 'String');
            }
            if (data.hasOwnProperty('source_id')) {
                obj['source_id'] = ApiClient.convertToType(data['source_id'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('discount_quantity')) {
                obj['discount_quantity'] = ApiClient.convertToType(data['discount_quantity'], 'Number');
            }
            if (data.hasOwnProperty('initial_quantity')) {
                obj['initial_quantity'] = ApiClient.convertToType(data['initial_quantity'], 'Number');
            }
            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('discount_amount')) {
                obj['discount_amount'] = ApiClient.convertToType(data['discount_amount'], 'Number');
            }
            if (data.hasOwnProperty('applied_discount_amount')) {
                obj['applied_discount_amount'] = ApiClient.convertToType(data['applied_discount_amount'], 'Number');
            }
            if (data.hasOwnProperty('applied_discount_quantity')) {
                obj['applied_discount_quantity'] = ApiClient.convertToType(data['applied_discount_quantity'], 'Number');
            }
            if (data.hasOwnProperty('applied_quantity')) {
                obj['applied_quantity'] = ApiClient.convertToType(data['applied_quantity'], 'Number');
            }
            if (data.hasOwnProperty('applied_quantity_amount')) {
                obj['applied_quantity_amount'] = ApiClient.convertToType(data['applied_quantity_amount'], 'Number');
            }
            if (data.hasOwnProperty('initial_amount')) {
                obj['initial_amount'] = ApiClient.convertToType(data['initial_amount'], 'Number');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('subtotal_amount')) {
                obj['subtotal_amount'] = ApiClient.convertToType(data['subtotal_amount'], 'Number');
            }
            if (data.hasOwnProperty('product')) {
                obj['product'] = OrderCalculatedItemProduct.constructFromObject(data['product']);
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = OrderCalculatedItemSku.constructFromObject(data['sku']);
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('application_details')) {
                obj['application_details'] = ApiClient.convertToType(data['application_details'], [ApplicationDetailsItem]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QualificationsRedeemableOrderItemsItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QualificationsRedeemableOrderItemsItem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['sku_id'] && !(typeof data['sku_id'] === 'string' || data['sku_id'] instanceof String)) {
            throw new Error("Expected the field `sku_id` to be a primitive type in the JSON string but got " + data['sku_id']);
        }
        // ensure the json data is a string
        if (data['product_id'] && !(typeof data['product_id'] === 'string' || data['product_id'] instanceof String)) {
            throw new Error("Expected the field `product_id` to be a primitive type in the JSON string but got " + data['product_id']);
        }
        // ensure the json data is a string
        if (data['related_object'] && !(typeof data['related_object'] === 'string' || data['related_object'] instanceof String)) {
            throw new Error("Expected the field `related_object` to be a primitive type in the JSON string but got " + data['related_object']);
        }
        // ensure the json data is a string
        if (data['source_id'] && !(typeof data['source_id'] === 'string' || data['source_id'] instanceof String)) {
            throw new Error("Expected the field `source_id` to be a primitive type in the JSON string but got " + data['source_id']);
        }
        // validate the optional field `product`
        if (data['product']) { // data not null
          OrderCalculatedItemProduct.validateJSON(data['product']);
        }
        // validate the optional field `sku`
        if (data['sku']) { // data not null
          OrderCalculatedItemSku.validateJSON(data['sku']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        if (data['application_details']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['application_details'])) {
                throw new Error("Expected the field `application_details` to be an array in the JSON data but got " + data['application_details']);
            }
            // validate the optional field `application_details` (array)
            for (const item of data['application_details']) {
                ApplicationDetailsItem.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Unique identifier of the order line item.
 * @member {String} id
 */
QualificationsRedeemableOrderItemsItem.prototype['id'] = undefined;

/**
 * Unique identifier of the SKU. It is assigned by Voucherify.
 * @member {String} sku_id
 */
QualificationsRedeemableOrderItemsItem.prototype['sku_id'] = undefined;

/**
 * Unique identifier of the product. It is assigned by Voucherify.
 * @member {String} product_id
 */
QualificationsRedeemableOrderItemsItem.prototype['product_id'] = undefined;

/**
 * Used along with the source_id property, can be set to either sku or product.
 * @member {module:model/QualificationsRedeemableOrderItemsItem.RelatedObjectEnum} related_object
 */
QualificationsRedeemableOrderItemsItem.prototype['related_object'] = undefined;

/**
 * The merchant's product/SKU ID (if it is different from the Voucherify product/SKU ID). It is useful in the integration between multiple systems. It can be an ID from an eCommerce site, a database, or a third-party service.
 * @member {String} source_id
 */
QualificationsRedeemableOrderItemsItem.prototype['source_id'] = undefined;

/**
 * The quantity of the particular item in the cart.
 * @member {Number} quantity
 */
QualificationsRedeemableOrderItemsItem.prototype['quantity'] = undefined;

/**
 * Number of dicounted items.
 * @member {Number} discount_quantity
 */
QualificationsRedeemableOrderItemsItem.prototype['discount_quantity'] = undefined;

/**
 * A positive integer in the smallest unit quantity representing the total amount of the order; this is the sum of the order items' quantity.
 * @member {Number} initial_quantity
 */
QualificationsRedeemableOrderItemsItem.prototype['initial_quantity'] = undefined;

/**
 * The total amount of the order item (price * quantity).
 * @member {Number} amount
 */
QualificationsRedeemableOrderItemsItem.prototype['amount'] = undefined;

/**
 * Sum of all order-item-level discounts applied to the order.
 * @member {Number} discount_amount
 */
QualificationsRedeemableOrderItemsItem.prototype['discount_amount'] = undefined;

/**
 * This field shows the order-level discount applied.
 * @member {Number} applied_discount_amount
 */
QualificationsRedeemableOrderItemsItem.prototype['applied_discount_amount'] = undefined;

/**
 * Number of the discounted items applied in the transaction.
 * @member {Number} applied_discount_quantity
 */
QualificationsRedeemableOrderItemsItem.prototype['applied_discount_quantity'] = undefined;

/**
 * Quantity of items changed by the application of a new quantity items. It can be positive when an item is added or negative if an item is replaced.
 * @member {Number} applied_quantity
 */
QualificationsRedeemableOrderItemsItem.prototype['applied_quantity'] = undefined;

/**
 * Amount for the items changed by the application of a new quantity items. It can be positive when an item is added or negative if an item is replaced.
 * @member {Number} applied_quantity_amount
 */
QualificationsRedeemableOrderItemsItem.prototype['applied_quantity_amount'] = undefined;

/**
 * A positive integer in the smallest currency unit (e.g. 100 cents for $1.00) representing the total amount of the order. This is the sum of the order items' amounts.
 * @member {Number} initial_amount
 */
QualificationsRedeemableOrderItemsItem.prototype['initial_amount'] = undefined;

/**
 * Unit price of an item. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.
 * @member {Number} price
 */
QualificationsRedeemableOrderItemsItem.prototype['price'] = undefined;

/**
 * Final order item amount after the applied item-level discount.  If there are no item-level discounts applied, this item is equal to the `amount`.    `subtotal_amount`=`amount`-`applied_discount_amount`
 * @member {Number} subtotal_amount
 */
QualificationsRedeemableOrderItemsItem.prototype['subtotal_amount'] = undefined;

/**
 * @member {module:model/OrderCalculatedItemProduct} product
 */
QualificationsRedeemableOrderItemsItem.prototype['product'] = undefined;

/**
 * @member {module:model/OrderCalculatedItemSku} sku
 */
QualificationsRedeemableOrderItemsItem.prototype['sku'] = undefined;

/**
 * The type of the object represented by JSON.
 * @member {module:model/QualificationsRedeemableOrderItemsItem.ObjectEnum} object
 * @default 'order_item'
 */
QualificationsRedeemableOrderItemsItem.prototype['object'] = 'order_item';

/**
 * A set of custom key/value pairs that you can attach to an item object. It can be useful for storing additional information about the item in a structured format. It can be used to define business validation rules or discount formulas.
 * @member {Object} metadata
 */
QualificationsRedeemableOrderItemsItem.prototype['metadata'] = undefined;

/**
 * Array containing details about the items that are replaced and the items that are replacements for discounts with the `REPLACE_ITEMS` effect.
 * @member {Array.<module:model/ApplicationDetailsItem>} application_details
 */
QualificationsRedeemableOrderItemsItem.prototype['application_details'] = undefined;


// Implement OrderCalculatedItem interface:
/**
 * Unique identifier of the order line item.
 * @member {String} id
 */
OrderCalculatedItem.prototype['id'] = undefined;
/**
 * Unique identifier of the SKU. It is assigned by Voucherify.
 * @member {String} sku_id
 */
OrderCalculatedItem.prototype['sku_id'] = undefined;
/**
 * Unique identifier of the product. It is assigned by Voucherify.
 * @member {String} product_id
 */
OrderCalculatedItem.prototype['product_id'] = undefined;
/**
 * Used along with the source_id property, can be set to either sku or product.
 * @member {module:model/OrderCalculatedItem.RelatedObjectEnum} related_object
 */
OrderCalculatedItem.prototype['related_object'] = undefined;
/**
 * The merchant's product/SKU ID (if it is different from the Voucherify product/SKU ID). It is useful in the integration between multiple systems. It can be an ID from an eCommerce site, a database, or a third-party service.
 * @member {String} source_id
 */
OrderCalculatedItem.prototype['source_id'] = undefined;
/**
 * The quantity of the particular item in the cart.
 * @member {Number} quantity
 */
OrderCalculatedItem.prototype['quantity'] = undefined;
/**
 * Number of dicounted items.
 * @member {Number} discount_quantity
 */
OrderCalculatedItem.prototype['discount_quantity'] = undefined;
/**
 * A positive integer in the smallest unit quantity representing the total amount of the order; this is the sum of the order items' quantity.
 * @member {Number} initial_quantity
 */
OrderCalculatedItem.prototype['initial_quantity'] = undefined;
/**
 * The total amount of the order item (price * quantity).
 * @member {Number} amount
 */
OrderCalculatedItem.prototype['amount'] = undefined;
/**
 * Sum of all order-item-level discounts applied to the order.
 * @member {Number} discount_amount
 */
OrderCalculatedItem.prototype['discount_amount'] = undefined;
/**
 * This field shows the order-level discount applied.
 * @member {Number} applied_discount_amount
 */
OrderCalculatedItem.prototype['applied_discount_amount'] = undefined;
/**
 * Number of the discounted items applied in the transaction.
 * @member {Number} applied_discount_quantity
 */
OrderCalculatedItem.prototype['applied_discount_quantity'] = undefined;
/**
 * Quantity of items changed by the application of a new quantity items. It can be positive when an item is added or negative if an item is replaced.
 * @member {Number} applied_quantity
 */
OrderCalculatedItem.prototype['applied_quantity'] = undefined;
/**
 * Amount for the items changed by the application of a new quantity items. It can be positive when an item is added or negative if an item is replaced.
 * @member {Number} applied_quantity_amount
 */
OrderCalculatedItem.prototype['applied_quantity_amount'] = undefined;
/**
 * A positive integer in the smallest currency unit (e.g. 100 cents for $1.00) representing the total amount of the order. This is the sum of the order items' amounts.
 * @member {Number} initial_amount
 */
OrderCalculatedItem.prototype['initial_amount'] = undefined;
/**
 * Unit price of an item. The value is multiplied by 100 to represent 2 decimal places. For example `10000 cents` for `$100.00`.
 * @member {Number} price
 */
OrderCalculatedItem.prototype['price'] = undefined;
/**
 * Final order item amount after the applied item-level discount.  If there are no item-level discounts applied, this item is equal to the `amount`.    `subtotal_amount`=`amount`-`applied_discount_amount`
 * @member {Number} subtotal_amount
 */
OrderCalculatedItem.prototype['subtotal_amount'] = undefined;
/**
 * @member {module:model/OrderCalculatedItemProduct} product
 */
OrderCalculatedItem.prototype['product'] = undefined;
/**
 * @member {module:model/OrderCalculatedItemSku} sku
 */
OrderCalculatedItem.prototype['sku'] = undefined;
/**
 * The type of the object represented by JSON.
 * @member {module:model/OrderCalculatedItem.ObjectEnum} object
 * @default 'order_item'
 */
OrderCalculatedItem.prototype['object'] = 'order_item';
/**
 * A set of custom key/value pairs that you can attach to an item object. It can be useful for storing additional information about the item in a structured format. It can be used to define business validation rules or discount formulas.
 * @member {Object} metadata
 */
OrderCalculatedItem.prototype['metadata'] = undefined;



/**
 * Allowed values for the <code>related_object</code> property.
 * @enum {String}
 * @readonly
 */
QualificationsRedeemableOrderItemsItem['RelatedObjectEnum'] = {

    /**
     * value: "product"
     * @const
     */
    "product": "product",

    /**
     * value: "sku"
     * @const
     */
    "sku": "sku"
};


/**
 * Allowed values for the <code>object</code> property.
 * @enum {String}
 * @readonly
 */
QualificationsRedeemableOrderItemsItem['ObjectEnum'] = {

    /**
     * value: "order_item"
     * @const
     */
    "order_item": "order_item"
};



export default QualificationsRedeemableOrderItemsItem;

