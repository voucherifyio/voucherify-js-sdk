/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ManagementProjectsWebhooksUpdateResponseBody model module.
 * @module model/ManagementProjectsWebhooksUpdateResponseBody
 * @version v2018-08-01
 */
class ManagementProjectsWebhooksUpdateResponseBody {
    /**
     * Constructs a new <code>ManagementProjectsWebhooksUpdateResponseBody</code>.
     * Response body schema for **PUT** &#x60;/management/v1/projects/{projectId}/webhooks/{webhookId}&#x60;.
     * @alias module:model/ManagementProjectsWebhooksUpdateResponseBody
     */
    constructor() { 
        
        ManagementProjectsWebhooksUpdateResponseBody.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['object'] = 'webhook';
        obj['active'] = true;
    }

    /**
     * Constructs a <code>ManagementProjectsWebhooksUpdateResponseBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ManagementProjectsWebhooksUpdateResponseBody} obj Optional instance to populate.
     * @return {module:model/ManagementProjectsWebhooksUpdateResponseBody} The populated <code>ManagementProjectsWebhooksUpdateResponseBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ManagementProjectsWebhooksUpdateResponseBody();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('target_url')) {
                obj['target_url'] = ApiClient.convertToType(data['target_url'], 'String');
            }
            if (data.hasOwnProperty('events')) {
                obj['events'] = ApiClient.convertToType(data['events'], ['String']);
            }
            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ManagementProjectsWebhooksUpdateResponseBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ManagementProjectsWebhooksUpdateResponseBody</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['target_url'] && !(typeof data['target_url'] === 'string' || data['target_url'] instanceof String)) {
            throw new Error("Expected the field `target_url` to be a primitive type in the JSON string but got " + data['target_url']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['events'])) {
            throw new Error("Expected the field `events` to be an array in the JSON data but got " + data['events']);
        }

        return true;
    }


}



/**
 * Unique identifier of the webhook.
 * @member {String} id
 */
ManagementProjectsWebhooksUpdateResponseBody.prototype['id'] = undefined;

/**
 * The type of the object represented by JSON.
 * @member {module:model/ManagementProjectsWebhooksUpdateResponseBody.ObjectEnum} object
 * @default 'webhook'
 */
ManagementProjectsWebhooksUpdateResponseBody.prototype['object'] = 'webhook';

/**
 * Timestamp representing the date and time when the webhook configuration was created. The value for this parameter is shown in the ISO 8601 format.
 * @member {Date} created_at
 */
ManagementProjectsWebhooksUpdateResponseBody.prototype['created_at'] = undefined;

/**
 * URL address that receives webhooks.
 * @member {String} target_url
 */
ManagementProjectsWebhooksUpdateResponseBody.prototype['target_url'] = undefined;

/**
 * Lists the events that trigger webhook sendout.
 * @member {Array.<module:model/ManagementProjectsWebhooksUpdateResponseBody.EventsEnum>} events
 */
ManagementProjectsWebhooksUpdateResponseBody.prototype['events'] = undefined;

/**
 * Determines if the webhook configuration is active.
 * @member {Boolean} active
 * @default true
 */
ManagementProjectsWebhooksUpdateResponseBody.prototype['active'] = true;





/**
 * Allowed values for the <code>object</code> property.
 * @enum {String}
 * @readonly
 */
ManagementProjectsWebhooksUpdateResponseBody['ObjectEnum'] = {

    /**
     * value: "webhook"
     * @const
     */
    "webhook": "webhook"
};


/**
 * Allowed values for the <code>events</code> property.
 * @enum {String}
 * @readonly
 */
ManagementProjectsWebhooksUpdateResponseBody['EventsEnum'] = {

    /**
     * value: "business_validation_rule.assignment.created"
     * @const
     */
    "business_validation_rule.assignment.created": "business_validation_rule.assignment.created",

    /**
     * value: "business_validation_rule.assignment.deleted"
     * @const
     */
    "business_validation_rule.assignment.deleted": "business_validation_rule.assignment.deleted",

    /**
     * value: "business_validation_rule.created"
     * @const
     */
    "business_validation_rule.created": "business_validation_rule.created",

    /**
     * value: "business_validation_rule.deleted"
     * @const
     */
    "business_validation_rule.deleted": "business_validation_rule.deleted",

    /**
     * value: "business_validation_rule.updated"
     * @const
     */
    "business_validation_rule.updated": "business_validation_rule.updated",

    /**
     * value: "campaign.created"
     * @const
     */
    "campaign.created": "campaign.created",

    /**
     * value: "campaign.deleted"
     * @const
     */
    "campaign.deleted": "campaign.deleted",

    /**
     * value: "campaign.disabled"
     * @const
     */
    "campaign.disabled": "campaign.disabled",

    /**
     * value: "campaign.enabled"
     * @const
     */
    "campaign.enabled": "campaign.enabled",

    /**
     * value: "campaign.earning_rule.assigned"
     * @const
     */
    "campaign.earning_rule.assigned": "campaign.earning_rule.assigned",

    /**
     * value: "campaign.earning_rule.deleted"
     * @const
     */
    "campaign.earning_rule.deleted": "campaign.earning_rule.deleted",

    /**
     * value: "campaign.earning_rule.disabled"
     * @const
     */
    "campaign.earning_rule.disabled": "campaign.earning_rule.disabled",

    /**
     * value: "campaign.earning_rule.enabled"
     * @const
     */
    "campaign.earning_rule.enabled": "campaign.earning_rule.enabled",

    /**
     * value: "campaign.earning_rule.updated"
     * @const
     */
    "campaign.earning_rule.updated": "campaign.earning_rule.updated",

    /**
     * value: "campaign.loyalty_tier.created"
     * @const
     */
    "campaign.loyalty_tier.created": "campaign.loyalty_tier.created",

    /**
     * value: "campaign.loyalty_tier.deleted"
     * @const
     */
    "campaign.loyalty_tier.deleted": "campaign.loyalty_tier.deleted",

    /**
     * value: "campaign.loyalty_tier.updated"
     * @const
     */
    "campaign.loyalty_tier.updated": "campaign.loyalty_tier.updated",

    /**
     * value: "campaign.promotion_stack.created"
     * @const
     */
    "campaign.promotion_stack.created": "campaign.promotion_stack.created",

    /**
     * value: "campaign.promotion_stack.updated"
     * @const
     */
    "campaign.promotion_stack.updated": "campaign.promotion_stack.updated",

    /**
     * value: "campaign.promotion_tier.created"
     * @const
     */
    "campaign.promotion_tier.created": "campaign.promotion_tier.created",

    /**
     * value: "campaign.promotion_tier.deleted"
     * @const
     */
    "campaign.promotion_tier.deleted": "campaign.promotion_tier.deleted",

    /**
     * value: "campaign.promotion_tier.disabled"
     * @const
     */
    "campaign.promotion_tier.disabled": "campaign.promotion_tier.disabled",

    /**
     * value: "campaign.promotion_tier.enabled"
     * @const
     */
    "campaign.promotion_tier.enabled": "campaign.promotion_tier.enabled",

    /**
     * value: "campaign.promotion_tier.updated"
     * @const
     */
    "campaign.promotion_tier.updated": "campaign.promotion_tier.updated",

    /**
     * value: "campaign.referral_tier.created"
     * @const
     */
    "campaign.referral_tier.created": "campaign.referral_tier.created",

    /**
     * value: "campaign.referral_tier.deleted"
     * @const
     */
    "campaign.referral_tier.deleted": "campaign.referral_tier.deleted",

    /**
     * value: "campaign.referral_tier.updated"
     * @const
     */
    "campaign.referral_tier.updated": "campaign.referral_tier.updated",

    /**
     * value: "campaign.reward.assignment.created"
     * @const
     */
    "campaign.reward.assignment.created": "campaign.reward.assignment.created",

    /**
     * value: "campaign.reward.assignment.deleted"
     * @const
     */
    "campaign.reward.assignment.deleted": "campaign.reward.assignment.deleted",

    /**
     * value: "campaign.reward.assignment.updated"
     * @const
     */
    "campaign.reward.assignment.updated": "campaign.reward.assignment.updated",

    /**
     * value: "campaign.updated"
     * @const
     */
    "campaign.updated": "campaign.updated",

    /**
     * value: "campaign.vouchers.aded"
     * @const
     */
    "campaign.vouchers.aded": "campaign.vouchers.aded",

    /**
     * value: "campaign.vouchers.generation.completed"
     * @const
     */
    "campaign.vouchers.generation.completed": "campaign.vouchers.generation.completed",

    /**
     * value: "campaign.vouchers.generation.failed"
     * @const
     */
    "campaign.vouchers.generation.failed": "campaign.vouchers.generation.failed",

    /**
     * value: "campaign.vouchers.generation.started"
     * @const
     */
    "campaign.vouchers.generation.started": "campaign.vouchers.generation.started",

    /**
     * value: "customer.confirmed"
     * @const
     */
    "customer.confirmed": "customer.confirmed",

    /**
     * value: "customer.created"
     * @const
     */
    "customer.created": "customer.created",

    /**
     * value: "customer.deleted"
     * @const
     */
    "customer.deleted": "customer.deleted",

    /**
     * value: "customer.rewarded"
     * @const
     */
    "customer.rewarded": "customer.rewarded",

    /**
     * value: "customer.rewarded.loyalty_points"
     * @const
     */
    "customer.rewarded.loyalty_points": "customer.rewarded.loyalty_points",

    /**
     * value: "publication.succeeded"
     * @const
     */
    "publication.succeeded": "publication.succeeded",

    /**
     * value: "redemption.failed"
     * @const
     */
    "redemption.failed": "redemption.failed",

    /**
     * value: "redemption.rollback.failed"
     * @const
     */
    "redemption.rollback.failed": "redemption.rollback.failed",

    /**
     * value: "redemption.rollback.succeeded"
     * @const
     */
    "redemption.rollback.succeeded": "redemption.rollback.succeeded",

    /**
     * value: "redemption.succeeded"
     * @const
     */
    "redemption.succeeded": "redemption.succeeded",

    /**
     * value: "voucher.created"
     * @const
     */
    "voucher.created": "voucher.created",

    /**
     * value: "voucher.deleted"
     * @const
     */
    "voucher.deleted": "voucher.deleted",

    /**
     * value: "voucher.disabled"
     * @const
     */
    "voucher.disabled": "voucher.disabled",

    /**
     * value: "voucher.enabled"
     * @const
     */
    "voucher.enabled": "voucher.enabled",

    /**
     * value: "voucher.gift.balance_aded"
     * @const
     */
    "voucher.gift.balance_aded": "voucher.gift.balance_aded",

    /**
     * value: "voucher.gift.transaction.created"
     * @const
     */
    "voucher.gift.transaction.created": "voucher.gift.transaction.created",

    /**
     * value: "voucher.loyalty_card.pending_points.activated"
     * @const
     */
    "voucher.loyalty_card.pending_points.activated": "voucher.loyalty_card.pending_points.activated",

    /**
     * value: "voucher.loyalty_card.pending_points.aded"
     * @const
     */
    "voucher.loyalty_card.pending_points.aded": "voucher.loyalty_card.pending_points.aded",

    /**
     * value: "voucher.loyalty_card.pending_points.canceled"
     * @const
     */
    "voucher.loyalty_card.pending_points.canceled": "voucher.loyalty_card.pending_points.canceled",

    /**
     * value: "voucher.loyalty_card.pending_points.updated"
     * @const
     */
    "voucher.loyalty_card.pending_points.updated": "voucher.loyalty_card.pending_points.updated",

    /**
     * value: "voucher.loyalty_card.points_aded"
     * @const
     */
    "voucher.loyalty_card.points_aded": "voucher.loyalty_card.points_aded",

    /**
     * value: "voucher.loyalty_card.points_expired"
     * @const
     */
    "voucher.loyalty_card.points_expired": "voucher.loyalty_card.points_expired",

    /**
     * value: "voucher.loyalty_card.transaction.created"
     * @const
     */
    "voucher.loyalty_card.transaction.created": "voucher.loyalty_card.transaction.created",

    /**
     * value: "voucher.published"
     * @const
     */
    "voucher.published": "voucher.published",

    /**
     * value: "voucher.updated"
     * @const
     */
    "voucher.updated": "voucher.updated"
};



export default ManagementProjectsWebhooksUpdateResponseBody;

