/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Customer from './Customer';
import Order from './Order';
import Session from './Session';
import ValidationsValidateRequestBodyOptions from './ValidationsValidateRequestBodyOptions';
import ValidationsValidateRequestBodyRedeemablesItem from './ValidationsValidateRequestBodyRedeemablesItem';

/**
 * The ValidationsValidateRequestBody model module.
 * @module model/ValidationsValidateRequestBody
 * @version v2018-08-01
 */
class ValidationsValidateRequestBody {
    /**
     * Constructs a new <code>ValidationsValidateRequestBody</code>.
     * Response body schema for **POST** &#x60;v1/validations&#x60;.
     * @alias module:model/ValidationsValidateRequestBody
     */
    constructor() { 
        
        ValidationsValidateRequestBody.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ValidationsValidateRequestBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ValidationsValidateRequestBody} obj Optional instance to populate.
     * @return {module:model/ValidationsValidateRequestBody} The populated <code>ValidationsValidateRequestBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ValidationsValidateRequestBody();

            if (data.hasOwnProperty('options')) {
                obj['options'] = ValidationsValidateRequestBodyOptions.constructFromObject(data['options']);
            }
            if (data.hasOwnProperty('redeemables')) {
                obj['redeemables'] = ApiClient.convertToType(data['redeemables'], [ValidationsValidateRequestBodyRedeemablesItem]);
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = Order.constructFromObject(data['order']);
            }
            if (data.hasOwnProperty('customer')) {
                obj['customer'] = Customer.constructFromObject(data['customer']);
            }
            if (data.hasOwnProperty('session')) {
                obj['session'] = Session.constructFromObject(data['session']);
            }
            if (data.hasOwnProperty('tracking_id')) {
                obj['tracking_id'] = ApiClient.convertToType(data['tracking_id'], 'String');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ValidationsValidateRequestBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ValidationsValidateRequestBody</code>.
     */
    static validateJSON(data) {
        // validate the optional field `options`
        if (data['options']) { // data not null
          ValidationsValidateRequestBodyOptions.validateJSON(data['options']);
        }
        if (data['redeemables']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['redeemables'])) {
                throw new Error("Expected the field `redeemables` to be an array in the JSON data but got " + data['redeemables']);
            }
            // validate the optional field `redeemables` (array)
            for (const item of data['redeemables']) {
                ValidationsValidateRequestBodyRedeemablesItem.validateJSON(item);
            };
        }
        // validate the optional field `order`
        if (data['order']) { // data not null
          Order.validateJSON(data['order']);
        }
        // validate the optional field `customer`
        if (data['customer']) { // data not null
          Customer.validateJSON(data['customer']);
        }
        // validate the optional field `session`
        if (data['session']) { // data not null
          Session.validateJSON(data['session']);
        }
        // ensure the json data is a string
        if (data['tracking_id'] && !(typeof data['tracking_id'] === 'string' || data['tracking_id'] instanceof String)) {
            throw new Error("Expected the field `tracking_id` to be a primitive type in the JSON string but got " + data['tracking_id']);
        }

        return true;
    }


}



/**
 * @member {module:model/ValidationsValidateRequestBodyOptions} options
 */
ValidationsValidateRequestBody.prototype['options'] = undefined;

/**
 * @member {Array.<module:model/ValidationsValidateRequestBodyRedeemablesItem>} redeemables
 */
ValidationsValidateRequestBody.prototype['redeemables'] = undefined;

/**
 * @member {module:model/Order} order
 */
ValidationsValidateRequestBody.prototype['order'] = undefined;

/**
 * @member {module:model/Customer} customer
 */
ValidationsValidateRequestBody.prototype['customer'] = undefined;

/**
 * @member {module:model/Session} session
 */
ValidationsValidateRequestBody.prototype['session'] = undefined;

/**
 * Is correspondent to Customer's source_id
 * @member {String} tracking_id
 */
ValidationsValidateRequestBody.prototype['tracking_id'] = undefined;

/**
 * A set of key/value pairs that you can attach to a redemption object. It can be useful for storing additional information about the redemption in a structured format.
 * @member {Object} metadata
 */
ValidationsValidateRequestBody.prototype['metadata'] = undefined;






export default ValidationsValidateRequestBody;

