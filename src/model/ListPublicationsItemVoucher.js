/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Discount from './Discount';
import Gift from './Gift';

/**
 * The ListPublicationsItemVoucher model module.
 * @module model/ListPublicationsItemVoucher
 * @version v2018-08-01
 */
class ListPublicationsItemVoucher {
    /**
     * Constructs a new <code>ListPublicationsItemVoucher</code>.
     * @alias module:model/ListPublicationsItemVoucher
     */
    constructor() { 
        
        ListPublicationsItemVoucher.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['object'] = 'voucher';
    }

    /**
     * Constructs a <code>ListPublicationsItemVoucher</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListPublicationsItemVoucher} obj Optional instance to populate.
     * @return {module:model/ListPublicationsItemVoucher} The populated <code>ListPublicationsItemVoucher</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListPublicationsItemVoucher();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('campaign')) {
                obj['campaign'] = ApiClient.convertToType(data['campaign'], 'String');
            }
            if (data.hasOwnProperty('gift')) {
                obj['gift'] = Gift.constructFromObject(data['gift']);
            }
            if (data.hasOwnProperty('loyalty_card')) {
                obj['loyalty_card'] = ApiClient.convertToType(data['loyalty_card'], Object);
            }
            if (data.hasOwnProperty('discount')) {
                obj['discount'] = Discount.constructFromObject(data['discount']);
            }
            if (data.hasOwnProperty('is_referral_code')) {
                obj['is_referral_code'] = ApiClient.convertToType(data['is_referral_code'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListPublicationsItemVoucher</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListPublicationsItemVoucher</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['campaign'] && !(typeof data['campaign'] === 'string' || data['campaign'] instanceof String)) {
            throw new Error("Expected the field `campaign` to be a primitive type in the JSON string but got " + data['campaign']);
        }
        // validate the optional field `gift`
        if (data['gift']) { // data not null
          Gift.validateJSON(data['gift']);
        }
        // validate the optional field `discount`
        if (data['discount']) { // data not null
          Discount.validateJSON(data['discount']);
        }

        return true;
    }


}



/**
 * Voucher code.
 * @member {String} code
 */
ListPublicationsItemVoucher.prototype['code'] = undefined;

/**
 * The type of the object represented by JSON.
 * @member {module:model/ListPublicationsItemVoucher.ObjectEnum} object
 * @default 'voucher'
 */
ListPublicationsItemVoucher.prototype['object'] = 'voucher';

/**
 * Campaign name
 * @member {String} campaign
 */
ListPublicationsItemVoucher.prototype['campaign'] = undefined;

/**
 * @member {module:model/Gift} gift
 */
ListPublicationsItemVoucher.prototype['gift'] = undefined;

/**
 * Defines the loyalty card details.
 * @member {Object} loyalty_card
 */
ListPublicationsItemVoucher.prototype['loyalty_card'] = undefined;

/**
 * @member {module:model/Discount} discount
 */
ListPublicationsItemVoucher.prototype['discount'] = undefined;

/**
 * Flag indicating whether this voucher is a referral code; `true` for campaign type `REFERRAL_PROGRAM`.
 * @member {Boolean} is_referral_code
 */
ListPublicationsItemVoucher.prototype['is_referral_code'] = undefined;





/**
 * Allowed values for the <code>object</code> property.
 * @enum {String}
 * @readonly
 */
ListPublicationsItemVoucher['ObjectEnum'] = {

    /**
     * value: "voucher"
     * @const
     */
    "voucher": "voucher"
};



export default ListPublicationsItemVoucher;

