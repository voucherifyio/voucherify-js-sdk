/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ManagementProjectsBrandingCreateRequestBodyAddress model module.
 * @module model/ManagementProjectsBrandingCreateRequestBodyAddress
 * @version v2018-08-01
 */
class ManagementProjectsBrandingCreateRequestBodyAddress {
    /**
     * Constructs a new <code>ManagementProjectsBrandingCreateRequestBodyAddress</code>.
     * Defines the address details.
     * @alias module:model/ManagementProjectsBrandingCreateRequestBodyAddress
     */
    constructor() { 
        
        ManagementProjectsBrandingCreateRequestBodyAddress.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ManagementProjectsBrandingCreateRequestBodyAddress</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ManagementProjectsBrandingCreateRequestBodyAddress} obj Optional instance to populate.
     * @return {module:model/ManagementProjectsBrandingCreateRequestBodyAddress} The populated <code>ManagementProjectsBrandingCreateRequestBodyAddress</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ManagementProjectsBrandingCreateRequestBodyAddress();

            if (data.hasOwnProperty('street')) {
                obj['street'] = ApiClient.convertToType(data['street'], 'String');
            }
            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
            if (data.hasOwnProperty('postal')) {
                obj['postal'] = ApiClient.convertToType(data['postal'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('country')) {
                obj['country'] = ApiClient.convertToType(data['country'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ManagementProjectsBrandingCreateRequestBodyAddress</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ManagementProjectsBrandingCreateRequestBodyAddress</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['street'] && !(typeof data['street'] === 'string' || data['street'] instanceof String)) {
            throw new Error("Expected the field `street` to be a primitive type in the JSON string but got " + data['street']);
        }
        // ensure the json data is a string
        if (data['city'] && !(typeof data['city'] === 'string' || data['city'] instanceof String)) {
            throw new Error("Expected the field `city` to be a primitive type in the JSON string but got " + data['city']);
        }
        // ensure the json data is a string
        if (data['postal'] && !(typeof data['postal'] === 'string' || data['postal'] instanceof String)) {
            throw new Error("Expected the field `postal` to be a primitive type in the JSON string but got " + data['postal']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['country'] && !(typeof data['country'] === 'string' || data['country'] instanceof String)) {
            throw new Error("Expected the field `country` to be a primitive type in the JSON string but got " + data['country']);
        }

        return true;
    }


}



/**
 * Defines the brand's street.
 * @member {String} street
 */
ManagementProjectsBrandingCreateRequestBodyAddress.prototype['street'] = undefined;

/**
 * Defines the brand's city.
 * @member {String} city
 */
ManagementProjectsBrandingCreateRequestBodyAddress.prototype['city'] = undefined;

/**
 * Defines the brand's postal code.
 * @member {String} postal
 */
ManagementProjectsBrandingCreateRequestBodyAddress.prototype['postal'] = undefined;

/**
 * Defines the brand's state or similar administrative area.
 * @member {String} state
 */
ManagementProjectsBrandingCreateRequestBodyAddress.prototype['state'] = undefined;

/**
 * Defines the brand's country.
 * @member {String} country
 */
ManagementProjectsBrandingCreateRequestBodyAddress.prototype['country'] = undefined;






export default ManagementProjectsBrandingCreateRequestBodyAddress;

