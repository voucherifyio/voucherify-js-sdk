/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClientQualificationsCheckEligibilityRequestBodySession from './ClientQualificationsCheckEligibilityRequestBodySession';
import Customer from './Customer';
import Order from './Order';
import QualificationsOption from './QualificationsOption';

/**
 * The ClientQualificationsCheckEligibilityRequestBody model module.
 * @module model/ClientQualificationsCheckEligibilityRequestBody
 * @version v2018-08-01
 */
class ClientQualificationsCheckEligibilityRequestBody {
    /**
     * Constructs a new <code>ClientQualificationsCheckEligibilityRequestBody</code>.
     * Request body schema for **POST** &#x60;v1/qualifications&#x60;.
     * @alias module:model/ClientQualificationsCheckEligibilityRequestBody
     */
    constructor() { 
        
        ClientQualificationsCheckEligibilityRequestBody.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClientQualificationsCheckEligibilityRequestBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClientQualificationsCheckEligibilityRequestBody} obj Optional instance to populate.
     * @return {module:model/ClientQualificationsCheckEligibilityRequestBody} The populated <code>ClientQualificationsCheckEligibilityRequestBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClientQualificationsCheckEligibilityRequestBody();

            if (data.hasOwnProperty('customer')) {
                obj['customer'] = Customer.constructFromObject(data['customer']);
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = Order.constructFromObject(data['order']);
            }
            if (data.hasOwnProperty('tracking_id')) {
                obj['tracking_id'] = ApiClient.convertToType(data['tracking_id'], 'String');
            }
            if (data.hasOwnProperty('scenario')) {
                obj['scenario'] = ApiClient.convertToType(data['scenario'], 'String');
            }
            if (data.hasOwnProperty('options')) {
                obj['options'] = QualificationsOption.constructFromObject(data['options']);
            }
            if (data.hasOwnProperty('session')) {
                obj['session'] = ClientQualificationsCheckEligibilityRequestBodySession.constructFromObject(data['session']);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClientQualificationsCheckEligibilityRequestBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClientQualificationsCheckEligibilityRequestBody</code>.
     */
    static validateJSON(data) {
        // validate the optional field `customer`
        if (data['customer']) { // data not null
          Customer.validateJSON(data['customer']);
        }
        // validate the optional field `order`
        if (data['order']) { // data not null
          Order.validateJSON(data['order']);
        }
        // ensure the json data is a string
        if (data['tracking_id'] && !(typeof data['tracking_id'] === 'string' || data['tracking_id'] instanceof String)) {
            throw new Error("Expected the field `tracking_id` to be a primitive type in the JSON string but got " + data['tracking_id']);
        }
        // ensure the json data is a string
        if (data['scenario'] && !(typeof data['scenario'] === 'string' || data['scenario'] instanceof String)) {
            throw new Error("Expected the field `scenario` to be a primitive type in the JSON string but got " + data['scenario']);
        }
        // validate the optional field `options`
        if (data['options']) { // data not null
          QualificationsOption.validateJSON(data['options']);
        }
        // validate the optional field `session`
        if (data['session']) { // data not null
          ClientQualificationsCheckEligibilityRequestBodySession.validateJSON(data['session']);
        }

        return true;
    }


}



/**
 * @member {module:model/Customer} customer
 */
ClientQualificationsCheckEligibilityRequestBody.prototype['customer'] = undefined;

/**
 * @member {module:model/Order} order
 */
ClientQualificationsCheckEligibilityRequestBody.prototype['order'] = undefined;

/**
 * Is correspondent to Customer's source_id
 * @member {String} tracking_id
 */
ClientQualificationsCheckEligibilityRequestBody.prototype['tracking_id'] = undefined;

/**
 * Defines the scenario Voucherify should consider during the qualification process.  - `ALL` - Scenario that returns all redeemables available for the customer in one API request. This scenario is used by default when no value is selected. - `CUSTOMER_WALLET` - returns vouchers applicable to the customer's cart based on the vouchers assigned to the customer's profile. - `AUDIENCE_ONLY` - returns all vouchers, promotion tiers, and campaigns available to the customer. Voucherify validates the rules based on the customer profile only. - `PRODUCTS` - returns all promotions available for the products (when a discount is defined to be applied to the item or when the item is required in the validation rule). - `PRODUCTS_DISCOUNT` - returns all promotions available for products when a discount is defined as applicable to specific item(s). - `PROMOTION_STACKS` - returns the applicable promotion stacks. - `PRODUCTS_BY_CUSTOMER` - returns all promotions available for a customer for the products (when a discount is defined to be applied to the item or when the item is required in the validation rule). - `PRODUCTS_DISCOUNT_BY_CUSTOMER` - returns all promotions available for a customer for products when a discount is defined as applicable to specific item(s).
 * @member {module:model/ClientQualificationsCheckEligibilityRequestBody.ScenarioEnum} scenario
 */
ClientQualificationsCheckEligibilityRequestBody.prototype['scenario'] = undefined;

/**
 * @member {module:model/QualificationsOption} options
 */
ClientQualificationsCheckEligibilityRequestBody.prototype['options'] = undefined;

/**
 * @member {module:model/ClientQualificationsCheckEligibilityRequestBodySession} session
 */
ClientQualificationsCheckEligibilityRequestBody.prototype['session'] = undefined;

/**
 * A set of key/value pairs that you can send in the request body to check against redeemables requiring **redemption** metadata validation rules to be satisfied. The validation runs against rules that are defined through the [Create Validation Rules](/api-reference/validation-rules/create-validation-rules) endpoint or via the Dashboard; in the _Advanced Rule Builder_ &rarr; _Advanced_ &rarr; _Redemption metadata satisfy_ or _Basic Builder_ &rarr; _Attributes match_ &rarr; _REDEMPTION METADATA_. [Read more](https://support.voucherify.io/article/148-how-to-build-a-rule).
 * @member {Object} metadata
 */
ClientQualificationsCheckEligibilityRequestBody.prototype['metadata'] = undefined;





/**
 * Allowed values for the <code>scenario</code> property.
 * @enum {String}
 * @readonly
 */
ClientQualificationsCheckEligibilityRequestBody['ScenarioEnum'] = {

    /**
     * value: "ALL"
     * @const
     */
    "ALL": "ALL",

    /**
     * value: "CUSTOMER_WALLET"
     * @const
     */
    "CUSTOMER_WALLET": "CUSTOMER_WALLET",

    /**
     * value: "AUDIENCE_ONLY"
     * @const
     */
    "AUDIENCE_ONLY": "AUDIENCE_ONLY",

    /**
     * value: "PRODUCTS"
     * @const
     */
    "PRODUCTS": "PRODUCTS",

    /**
     * value: "PRODUCTS_DISCOUNT"
     * @const
     */
    "PRODUCTS_DISCOUNT": "PRODUCTS_DISCOUNT",

    /**
     * value: "PROMOTION_STACKS"
     * @const
     */
    "PROMOTION_STACKS": "PROMOTION_STACKS",

    /**
     * value: "PRODUCTS_BY_CUSTOMER"
     * @const
     */
    "PRODUCTS_BY_CUSTOMER": "PRODUCTS_BY_CUSTOMER",

    /**
     * value: "PRODUCTS_DISCOUNT_BY_CUSTOMER"
     * @const
     */
    "PRODUCTS_DISCOUNT_BY_CUSTOMER": "PRODUCTS_DISCOUNT_BY_CUSTOMER"
};



export default ClientQualificationsCheckEligibilityRequestBody;

