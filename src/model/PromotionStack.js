/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Category from './Category';
import PromotionStackTiers from './PromotionStackTiers';

/**
 * The PromotionStack model module.
 * @module model/PromotionStack
 * @version v2018-08-01
 */
class PromotionStack {
    /**
     * Constructs a new <code>PromotionStack</code>.
     * @alias module:model/PromotionStack
     */
    constructor() { 
        
        PromotionStack.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['object'] = 'promotion_stack';
    }

    /**
     * Constructs a <code>PromotionStack</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PromotionStack} obj Optional instance to populate.
     * @return {module:model/PromotionStack} The populated <code>PromotionStack</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PromotionStack();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('tiers')) {
                obj['tiers'] = PromotionStackTiers.constructFromObject(data['tiers']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('campaign_id')) {
                obj['campaign_id'] = ApiClient.convertToType(data['campaign_id'], 'String');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('category_id')) {
                obj['category_id'] = ApiClient.convertToType(data['category_id'], 'String');
            }
            if (data.hasOwnProperty('categories')) {
                obj['categories'] = ApiClient.convertToType(data['categories'], [Category]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PromotionStack</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PromotionStack</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `tiers`
        if (data['tiers']) { // data not null
          PromotionStackTiers.validateJSON(data['tiers']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['campaign_id'] && !(typeof data['campaign_id'] === 'string' || data['campaign_id'] instanceof String)) {
            throw new Error("Expected the field `campaign_id` to be a primitive type in the JSON string but got " + data['campaign_id']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['category_id'] && !(typeof data['category_id'] === 'string' || data['category_id'] instanceof String)) {
            throw new Error("Expected the field `category_id` to be a primitive type in the JSON string but got " + data['category_id']);
        }
        if (data['categories']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['categories'])) {
                throw new Error("Expected the field `categories` to be an array in the JSON data but got " + data['categories']);
            }
            // validate the optional field `categories` (array)
            for (const item of data['categories']) {
                Category.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Promotion stack name.
 * @member {String} name
 */
PromotionStack.prototype['name'] = undefined;

/**
 * @member {module:model/PromotionStackTiers} tiers
 */
PromotionStack.prototype['tiers'] = undefined;

/**
 * Unique promotion stack ID.
 * @member {String} id
 */
PromotionStack.prototype['id'] = undefined;

/**
 * Timestamp representing the date and time when the promotion stack was created. The value is shown in the ISO 8601 format.
 * @member {Date} created_at
 */
PromotionStack.prototype['created_at'] = undefined;

/**
 * Timestamp representing the date and time when the promotion stack was updated. The value is shown in the ISO 8601 format.
 * @member {Date} updated_at
 */
PromotionStack.prototype['updated_at'] = undefined;

/**
 * Promotion stack's parent campaign's unique ID.
 * @member {String} campaign_id
 */
PromotionStack.prototype['campaign_id'] = undefined;

/**
 * The type of the object represented by JSON. 
 * @member {module:model/PromotionStack.ObjectEnum} object
 * @default 'promotion_stack'
 */
PromotionStack.prototype['object'] = 'promotion_stack';

/**
 * Promotion stack category ID.
 * @member {String} category_id
 */
PromotionStack.prototype['category_id'] = undefined;

/**
 * Details about the category assigned to the promotion stack.
 * @member {Array.<module:model/Category>} categories
 */
PromotionStack.prototype['categories'] = undefined;





/**
 * Allowed values for the <code>object</code> property.
 * @enum {String}
 * @readonly
 */
PromotionStack['ObjectEnum'] = {

    /**
     * value: "promotion_stack"
     * @const
     */
    "promotion_stack": "promotion_stack"
};



export default PromotionStack;

