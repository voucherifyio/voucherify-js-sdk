/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RewardType from './RewardType';
import RewardsCreateResponseBodyAttributes from './RewardsCreateResponseBodyAttributes';

/**
 * The RewardsCreateResponseBody model module.
 * @module model/RewardsCreateResponseBody
 * @version v2018-08-01
 */
class RewardsCreateResponseBody {
    /**
     * Constructs a new <code>RewardsCreateResponseBody</code>.
     * Response body schema for **POST** &#x60;v1/rewards&#x60;.
     * @alias module:model/RewardsCreateResponseBody
     * @param object {module:model/RewardsCreateResponseBody.ObjectEnum} The type of the object represented by the JSON. This object stores information about the reward.
     */
    constructor(object) { 
        
        RewardsCreateResponseBody.initialize(this, object);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, object) { 
        obj['object'] = object || 'reward';
    }

    /**
     * Constructs a <code>RewardsCreateResponseBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RewardsCreateResponseBody} obj Optional instance to populate.
     * @return {module:model/RewardsCreateResponseBody} The populated <code>RewardsCreateResponseBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RewardsCreateResponseBody();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('stock')) {
                obj['stock'] = ApiClient.convertToType(data['stock'], 'Number');
            }
            if (data.hasOwnProperty('redeemed')) {
                obj['redeemed'] = ApiClient.convertToType(data['redeemed'], 'Number');
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = RewardsCreateResponseBodyAttributes.constructFromObject(data['attributes']);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = RewardType.constructFromObject(data['parameters']);
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RewardsCreateResponseBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RewardsCreateResponseBody</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RewardsCreateResponseBody.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `attributes`
        if (data['attributes']) { // data not null
          RewardsCreateResponseBodyAttributes.validateJSON(data['attributes']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // validate the optional field `parameters`
        if (data['parameters']) { // data not null
          RewardType.validateJSON(data['parameters']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }

        return true;
    }


}

RewardsCreateResponseBody.RequiredProperties = ["object"];

/**
 * Unique reward ID, assigned by Voucherify.
 * @member {String} id
 */
RewardsCreateResponseBody.prototype['id'] = undefined;

/**
 * Reward name.
 * @member {String} name
 */
RewardsCreateResponseBody.prototype['name'] = undefined;

/**
 * Configurable for **material rewards**. The number of units of the product that you want to share as a reward. Use this parameter to code a stock-taking logic.
 * @member {Number} stock
 */
RewardsCreateResponseBody.prototype['stock'] = undefined;

/**
 * Defines the number of already invoked (successful) reward redemptions. 
 * @member {Number} redeemed
 */
RewardsCreateResponseBody.prototype['redeemed'] = undefined;

/**
 * @member {module:model/RewardsCreateResponseBodyAttributes} attributes
 */
RewardsCreateResponseBody.prototype['attributes'] = undefined;

/**
 * The metadata object stores all custom attributes assigned to the reward. A set of key/value pairs that you can attach to a reward object. It can be useful for storing additional information about the reward in a structured format.
 * @member {Object} metadata
 */
RewardsCreateResponseBody.prototype['metadata'] = undefined;

/**
 * Reward type.
 * @member {module:model/RewardsCreateResponseBody.TypeEnum} type
 */
RewardsCreateResponseBody.prototype['type'] = undefined;

/**
 * @member {module:model/RewardType} parameters
 */
RewardsCreateResponseBody.prototype['parameters'] = undefined;

/**
 * Timestamp representing the date and time when the reward was created. The value is shown in the ISO 8601 format.
 * @member {Date} created_at
 */
RewardsCreateResponseBody.prototype['created_at'] = undefined;

/**
 * Timestamp representing the date and time when the reward was updated. The value is shown in the ISO 8601 format.
 * @member {Date} updated_at
 */
RewardsCreateResponseBody.prototype['updated_at'] = undefined;

/**
 * The type of the object represented by the JSON. This object stores information about the reward.
 * @member {module:model/RewardsCreateResponseBody.ObjectEnum} object
 * @default 'reward'
 */
RewardsCreateResponseBody.prototype['object'] = 'reward';





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
RewardsCreateResponseBody['TypeEnum'] = {

    /**
     * value: "CAMPAIGN"
     * @const
     */
    "CAMPAIGN": "CAMPAIGN",

    /**
     * value: "COIN"
     * @const
     */
    "COIN": "COIN",

    /**
     * value: "MATERIAL"
     * @const
     */
    "MATERIAL": "MATERIAL"
};


/**
 * Allowed values for the <code>object</code> property.
 * @enum {String}
 * @readonly
 */
RewardsCreateResponseBody['ObjectEnum'] = {

    /**
     * value: "reward"
     * @const
     */
    "reward": "reward"
};



export default RewardsCreateResponseBody;

