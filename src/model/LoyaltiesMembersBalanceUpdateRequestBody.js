/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PointsExpirationTypes from './PointsExpirationTypes';

/**
 * The LoyaltiesMembersBalanceUpdateRequestBody model module.
 * @module model/LoyaltiesMembersBalanceUpdateRequestBody
 * @version v2018-08-01
 */
class LoyaltiesMembersBalanceUpdateRequestBody {
    /**
     * Constructs a new <code>LoyaltiesMembersBalanceUpdateRequestBody</code>.
     * Request Body schema for **POST** &#x60;v1/loyalties/members/{memberId}/balance&#x60; and **POST** &#x60;v1/loyalties/{campaignId}/members/{memberId}/balance&#x60;.
     * @alias module:model/LoyaltiesMembersBalanceUpdateRequestBody
     */
    constructor() { 
        
        LoyaltiesMembersBalanceUpdateRequestBody.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LoyaltiesMembersBalanceUpdateRequestBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LoyaltiesMembersBalanceUpdateRequestBody} obj Optional instance to populate.
     * @return {module:model/LoyaltiesMembersBalanceUpdateRequestBody} The populated <code>LoyaltiesMembersBalanceUpdateRequestBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LoyaltiesMembersBalanceUpdateRequestBody();

            if (data.hasOwnProperty('points')) {
                obj['points'] = ApiClient.convertToType(data['points'], 'Number');
            }
            if (data.hasOwnProperty('expiration_type')) {
                obj['expiration_type'] = PointsExpirationTypes.constructFromObject(data['expiration_type']);
            }
            if (data.hasOwnProperty('expiration_date')) {
                obj['expiration_date'] = ApiClient.convertToType(data['expiration_date'], 'Date');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
            if (data.hasOwnProperty('source_id')) {
                obj['source_id'] = ApiClient.convertToType(data['source_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LoyaltiesMembersBalanceUpdateRequestBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LoyaltiesMembersBalanceUpdateRequestBody</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['reason'] && !(typeof data['reason'] === 'string' || data['reason'] instanceof String)) {
            throw new Error("Expected the field `reason` to be a primitive type in the JSON string but got " + data['reason']);
        }
        // ensure the json data is a string
        if (data['source_id'] && !(typeof data['source_id'] === 'string' || data['source_id'] instanceof String)) {
            throw new Error("Expected the field `source_id` to be a primitive type in the JSON string but got " + data['source_id']);
        }

        return true;
    }


}



/**
 * Incremental balance to be added to/subtracted from the loyalty card.  - To add points: 100 - To subtract points, add a minus: -100
 * @member {Number} points
 */
LoyaltiesMembersBalanceUpdateRequestBody.prototype['points'] = undefined;

/**
 * @member {module:model/PointsExpirationTypes} expiration_type
 */
LoyaltiesMembersBalanceUpdateRequestBody.prototype['expiration_type'] = undefined;

/**
 * Set expiration date for added points, i.e. `YYYY-MM-DD`. This parameter is required only when expiration_type is set to `CUSTOM_DATE`.
 * @member {Date} expiration_date
 */
LoyaltiesMembersBalanceUpdateRequestBody.prototype['expiration_date'] = undefined;

/**
 * Reason for the transfer.
 * @member {String} reason
 */
LoyaltiesMembersBalanceUpdateRequestBody.prototype['reason'] = undefined;

/**
 * The merchant's transaction ID if it is different from the Voucherify transaction ID. It is really useful in case of an integration between multiple systems. It can be a transaction ID from a CRM system, database or 3rd-party service.
 * @member {String} source_id
 */
LoyaltiesMembersBalanceUpdateRequestBody.prototype['source_id'] = undefined;






export default LoyaltiesMembersBalanceUpdateRequestBody;

