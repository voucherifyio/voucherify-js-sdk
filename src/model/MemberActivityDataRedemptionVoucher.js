/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Category from './Category';
import Discount from './Discount';
import MemberActivityDataRedemptionVoucherGift from './MemberActivityDataRedemptionVoucherGift';
import MemberActivityDataRedemptionVoucherLoyaltyCard from './MemberActivityDataRedemptionVoucherLoyaltyCard';
import MemberActivityDataRedemptionVoucherPublish from './MemberActivityDataRedemptionVoucherPublish';
import MemberActivityDataRedemptionVoucherRedemption from './MemberActivityDataRedemptionVoucherRedemption';
import SimpleCustomer from './SimpleCustomer';
import ValidationRulesAssignmentsList from './ValidationRulesAssignmentsList';
import ValidityHours from './ValidityHours';
import ValidityTimeframe from './ValidityTimeframe';
import VoucherAssets from './VoucherAssets';

/**
 * The MemberActivityDataRedemptionVoucher model module.
 * @module model/MemberActivityDataRedemptionVoucher
 * @version v2018-08-01
 */
class MemberActivityDataRedemptionVoucher {
    /**
     * Constructs a new <code>MemberActivityDataRedemptionVoucher</code>.
     * @alias module:model/MemberActivityDataRedemptionVoucher
     */
    constructor() { 
        
        MemberActivityDataRedemptionVoucher.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MemberActivityDataRedemptionVoucher</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MemberActivityDataRedemptionVoucher} obj Optional instance to populate.
     * @return {module:model/MemberActivityDataRedemptionVoucher} The populated <code>MemberActivityDataRedemptionVoucher</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MemberActivityDataRedemptionVoucher();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('gift')) {
                obj['gift'] = MemberActivityDataRedemptionVoucherGift.constructFromObject(data['gift']);
            }
            if (data.hasOwnProperty('discount')) {
                obj['discount'] = Discount.constructFromObject(data['discount']);
            }
            if (data.hasOwnProperty('loyalty_card')) {
                obj['loyalty_card'] = MemberActivityDataRedemptionVoucherLoyaltyCard.constructFromObject(data['loyalty_card']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('campaign')) {
                obj['campaign'] = ApiClient.convertToType(data['campaign'], 'String');
            }
            if (data.hasOwnProperty('campaign_id')) {
                obj['campaign_id'] = ApiClient.convertToType(data['campaign_id'], 'String');
            }
            if (data.hasOwnProperty('is_referral_code')) {
                obj['is_referral_code'] = ApiClient.convertToType(data['is_referral_code'], 'Boolean');
            }
            if (data.hasOwnProperty('holder_id')) {
                obj['holder_id'] = ApiClient.convertToType(data['holder_id'], 'String');
            }
            if (data.hasOwnProperty('referrer_id')) {
                obj['referrer_id'] = ApiClient.convertToType(data['referrer_id'], 'String');
            }
            if (data.hasOwnProperty('category_id')) {
                obj['category_id'] = ApiClient.convertToType(data['category_id'], 'String');
            }
            if (data.hasOwnProperty('categories')) {
                obj['categories'] = ApiClient.convertToType(data['categories'], [Category]);
            }
            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
            if (data.hasOwnProperty('redemption')) {
                obj['redemption'] = MemberActivityDataRedemptionVoucherRedemption.constructFromObject(data['redemption']);
            }
            if (data.hasOwnProperty('start_date')) {
                obj['start_date'] = ApiClient.convertToType(data['start_date'], 'String');
            }
            if (data.hasOwnProperty('expiration_date')) {
                obj['expiration_date'] = ApiClient.convertToType(data['expiration_date'], 'Date');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('validity_timeframe')) {
                obj['validity_timeframe'] = ValidityTimeframe.constructFromObject(data['validity_timeframe']);
            }
            if (data.hasOwnProperty('validity_day_of_week')) {
                obj['validity_day_of_week'] = ApiClient.convertToType(data['validity_day_of_week'], ['Number']);
            }
            if (data.hasOwnProperty('validity_hours')) {
                obj['validity_hours'] = ValidityHours.constructFromObject(data['validity_hours']);
            }
            if (data.hasOwnProperty('additional_info')) {
                obj['additional_info'] = ApiClient.convertToType(data['additional_info'], 'String');
            }
            if (data.hasOwnProperty('assets')) {
                obj['assets'] = VoucherAssets.constructFromObject(data['assets']);
            }
            if (data.hasOwnProperty('publish')) {
                obj['publish'] = MemberActivityDataRedemptionVoucherPublish.constructFromObject(data['publish']);
            }
            if (data.hasOwnProperty('validation_rules_assignments')) {
                obj['validation_rules_assignments'] = ValidationRulesAssignmentsList.constructFromObject(data['validation_rules_assignments']);
            }
            if (data.hasOwnProperty('holder')) {
                obj['holder'] = SimpleCustomer.constructFromObject(data['holder']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MemberActivityDataRedemptionVoucher</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MemberActivityDataRedemptionVoucher</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // validate the optional field `gift`
        if (data['gift']) { // data not null
          MemberActivityDataRedemptionVoucherGift.validateJSON(data['gift']);
        }
        // validate the optional field `discount`
        if (data['discount']) { // data not null
          Discount.validateJSON(data['discount']);
        }
        // validate the optional field `loyalty_card`
        if (data['loyalty_card']) { // data not null
          MemberActivityDataRedemptionVoucherLoyaltyCard.validateJSON(data['loyalty_card']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['campaign'] && !(typeof data['campaign'] === 'string' || data['campaign'] instanceof String)) {
            throw new Error("Expected the field `campaign` to be a primitive type in the JSON string but got " + data['campaign']);
        }
        // ensure the json data is a string
        if (data['campaign_id'] && !(typeof data['campaign_id'] === 'string' || data['campaign_id'] instanceof String)) {
            throw new Error("Expected the field `campaign_id` to be a primitive type in the JSON string but got " + data['campaign_id']);
        }
        // ensure the json data is a string
        if (data['holder_id'] && !(typeof data['holder_id'] === 'string' || data['holder_id'] instanceof String)) {
            throw new Error("Expected the field `holder_id` to be a primitive type in the JSON string but got " + data['holder_id']);
        }
        // ensure the json data is a string
        if (data['referrer_id'] && !(typeof data['referrer_id'] === 'string' || data['referrer_id'] instanceof String)) {
            throw new Error("Expected the field `referrer_id` to be a primitive type in the JSON string but got " + data['referrer_id']);
        }
        // ensure the json data is a string
        if (data['category_id'] && !(typeof data['category_id'] === 'string' || data['category_id'] instanceof String)) {
            throw new Error("Expected the field `category_id` to be a primitive type in the JSON string but got " + data['category_id']);
        }
        if (data['categories']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['categories'])) {
                throw new Error("Expected the field `categories` to be an array in the JSON data but got " + data['categories']);
            }
            // validate the optional field `categories` (array)
            for (const item of data['categories']) {
                Category.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
            throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
        }
        // validate the optional field `redemption`
        if (data['redemption']) { // data not null
          MemberActivityDataRedemptionVoucherRedemption.validateJSON(data['redemption']);
        }
        // ensure the json data is a string
        if (data['start_date'] && !(typeof data['start_date'] === 'string' || data['start_date'] instanceof String)) {
            throw new Error("Expected the field `start_date` to be a primitive type in the JSON string but got " + data['start_date']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['category'] && !(typeof data['category'] === 'string' || data['category'] instanceof String)) {
            throw new Error("Expected the field `category` to be a primitive type in the JSON string but got " + data['category']);
        }
        // validate the optional field `validity_timeframe`
        if (data['validity_timeframe']) { // data not null
          ValidityTimeframe.validateJSON(data['validity_timeframe']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['validity_day_of_week'])) {
            throw new Error("Expected the field `validity_day_of_week` to be an array in the JSON data but got " + data['validity_day_of_week']);
        }
        // validate the optional field `validity_hours`
        if (data['validity_hours']) { // data not null
          ValidityHours.validateJSON(data['validity_hours']);
        }
        // ensure the json data is a string
        if (data['additional_info'] && !(typeof data['additional_info'] === 'string' || data['additional_info'] instanceof String)) {
            throw new Error("Expected the field `additional_info` to be a primitive type in the JSON string but got " + data['additional_info']);
        }
        // validate the optional field `assets`
        if (data['assets']) { // data not null
          VoucherAssets.validateJSON(data['assets']);
        }
        // validate the optional field `publish`
        if (data['publish']) { // data not null
          MemberActivityDataRedemptionVoucherPublish.validateJSON(data['publish']);
        }
        // validate the optional field `validation_rules_assignments`
        if (data['validation_rules_assignments']) { // data not null
          ValidationRulesAssignmentsList.validateJSON(data['validation_rules_assignments']);
        }
        // validate the optional field `holder`
        if (data['holder']) { // data not null
          SimpleCustomer.validateJSON(data['holder']);
        }

        return true;
    }


}



/**
 * @member {String} id
 */
MemberActivityDataRedemptionVoucher.prototype['id'] = undefined;

/**
 * @member {String} code
 */
MemberActivityDataRedemptionVoucher.prototype['code'] = undefined;

/**
 * @member {module:model/MemberActivityDataRedemptionVoucherGift} gift
 */
MemberActivityDataRedemptionVoucher.prototype['gift'] = undefined;

/**
 * @member {module:model/Discount} discount
 */
MemberActivityDataRedemptionVoucher.prototype['discount'] = undefined;

/**
 * @member {module:model/MemberActivityDataRedemptionVoucherLoyaltyCard} loyalty_card
 */
MemberActivityDataRedemptionVoucher.prototype['loyalty_card'] = undefined;

/**
 * @member {module:model/MemberActivityDataRedemptionVoucher.TypeEnum} type
 */
MemberActivityDataRedemptionVoucher.prototype['type'] = undefined;

/**
 * @member {String} campaign
 */
MemberActivityDataRedemptionVoucher.prototype['campaign'] = undefined;

/**
 * @member {String} campaign_id
 */
MemberActivityDataRedemptionVoucher.prototype['campaign_id'] = undefined;

/**
 * Flag indicating whether this voucher is a referral code; `true` for campaign type `REFERRAL_PROGRAM`.
 * @member {Boolean} is_referral_code
 */
MemberActivityDataRedemptionVoucher.prototype['is_referral_code'] = undefined;

/**
 * Unique customer identifier of the redeemable holder. It equals to the customer ID assigned by Voucherify.
 * @member {String} holder_id
 */
MemberActivityDataRedemptionVoucher.prototype['holder_id'] = undefined;

/**
 * @member {String} referrer_id
 */
MemberActivityDataRedemptionVoucher.prototype['referrer_id'] = undefined;

/**
 * @member {String} category_id
 */
MemberActivityDataRedemptionVoucher.prototype['category_id'] = undefined;

/**
 * Contains details about the category.
 * @member {Array.<module:model/Category>} categories
 */
MemberActivityDataRedemptionVoucher.prototype['categories'] = undefined;

/**
 * Shows whether the voucher is on or off. `true` indicates an *active* voucher and `false` indicates an *inactive* voucher. and A flag to toggle the voucher on or off. You can disable a voucher even though it's within the active period defined by the `start_date` and `expiration_date`.    - `true` indicates an *active* voucher - `false` indicates an *inactive* voucher
 * @member {Boolean} active
 */
MemberActivityDataRedemptionVoucher.prototype['active'] = undefined;

/**
 * @member {String} created_at
 */
MemberActivityDataRedemptionVoucher.prototype['created_at'] = undefined;

/**
 * @member {String} updated_at
 */
MemberActivityDataRedemptionVoucher.prototype['updated_at'] = undefined;

/**
 * @member {module:model/MemberActivityDataRedemptionVoucherRedemption} redemption
 */
MemberActivityDataRedemptionVoucher.prototype['redemption'] = undefined;

/**
 * @member {String} start_date
 */
MemberActivityDataRedemptionVoucher.prototype['start_date'] = undefined;

/**
 * Expiration timestamp defines when the code expires in ISO 8601 format.  Voucher is *inactive after* this date.
 * @member {Date} expiration_date
 */
MemberActivityDataRedemptionVoucher.prototype['expiration_date'] = undefined;

/**
 * A set of custom key/value pairs that you can attach to a voucher. The metadata object stores all custom attributes assigned to the voucher. and The metadata object stores all custom attributes assigned to the code. A set of key/value pairs that you can attach to a voucher object. It can be useful for storing additional information about the voucher in a structured format.
 * @member {Object} metadata
 */
MemberActivityDataRedemptionVoucher.prototype['metadata'] = undefined;

/**
 * @member {String} object
 */
MemberActivityDataRedemptionVoucher.prototype['object'] = undefined;

/**
 * Tag defining the category that this voucher belongs to. Useful when listing vouchers using the List Vouchers endpoint.
 * @member {String} category
 */
MemberActivityDataRedemptionVoucher.prototype['category'] = undefined;

/**
 * @member {module:model/ValidityTimeframe} validity_timeframe
 */
MemberActivityDataRedemptionVoucher.prototype['validity_timeframe'] = undefined;

/**
 * Integer array corresponding to the particular days of the week in which the voucher is valid.  - `0` Sunday - `1` Monday - `2` Tuesday - `3` Wednesday - `4` Thursday - `5` Friday - `6` Saturday
 * @member {Array.<module:model/MemberActivityDataRedemptionVoucher.ValidityDayOfWeekEnum>} validity_day_of_week
 */
MemberActivityDataRedemptionVoucher.prototype['validity_day_of_week'] = undefined;

/**
 * @member {module:model/ValidityHours} validity_hours
 */
MemberActivityDataRedemptionVoucher.prototype['validity_hours'] = undefined;

/**
 * An optional field to keep any extra textual information about the code such as a code description and details.
 * @member {String} additional_info
 */
MemberActivityDataRedemptionVoucher.prototype['additional_info'] = undefined;

/**
 * @member {module:model/VoucherAssets} assets
 */
MemberActivityDataRedemptionVoucher.prototype['assets'] = undefined;

/**
 * @member {module:model/MemberActivityDataRedemptionVoucherPublish} publish
 */
MemberActivityDataRedemptionVoucher.prototype['publish'] = undefined;

/**
 * @member {module:model/ValidationRulesAssignmentsList} validation_rules_assignments
 */
MemberActivityDataRedemptionVoucher.prototype['validation_rules_assignments'] = undefined;

/**
 * @member {module:model/SimpleCustomer} holder
 */
MemberActivityDataRedemptionVoucher.prototype['holder'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
MemberActivityDataRedemptionVoucher['TypeEnum'] = {

    /**
     * value: "DISCOUNT_VOUCHER"
     * @const
     */
    "DISCOUNT_VOUCHER": "DISCOUNT_VOUCHER",

    /**
     * value: "LOYALTY_CARD"
     * @const
     */
    "LOYALTY_CARD": "LOYALTY_CARD",

    /**
     * value: "GIFT_VOUCHER"
     * @const
     */
    "GIFT_VOUCHER": "GIFT_VOUCHER"
};


/**
 * Allowed values for the <code>validityDayOfWeek</code> property.
 * @enum {Number}
 * @readonly
 */
MemberActivityDataRedemptionVoucher['ValidityDayOfWeekEnum'] = {

    /**
     * value: 0
     * @const
     */
    "0": 0,

    /**
     * value: 1
     * @const
     */
    "1": 1,

    /**
     * value: 2
     * @const
     */
    "2": 2,

    /**
     * value: 3
     * @const
     */
    "3": 3,

    /**
     * value: 4
     * @const
     */
    "4": 4,

    /**
     * value: 5
     * @const
     */
    "5": 5,

    /**
     * value: 6
     * @const
     */
    "6": 6
};



export default MemberActivityDataRedemptionVoucher;

