/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ManagementProjectsMetadataSchemaDefinition model module.
 * @module model/ManagementProjectsMetadataSchemaDefinition
 * @version v2018-08-01
 */
class ManagementProjectsMetadataSchemaDefinition {
    /**
     * Constructs a new <code>ManagementProjectsMetadataSchemaDefinition</code>.
     * Custom definition name. This is also shown in **Project Settings** &gt; **Metadata Schema** in the Voucherify Dashboard.
     * @alias module:model/ManagementProjectsMetadataSchemaDefinition
     */
    constructor() { 
        
        ManagementProjectsMetadataSchemaDefinition.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ManagementProjectsMetadataSchemaDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ManagementProjectsMetadataSchemaDefinition} obj Optional instance to populate.
     * @return {module:model/ManagementProjectsMetadataSchemaDefinition} The populated <code>ManagementProjectsMetadataSchemaDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ManagementProjectsMetadataSchemaDefinition();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('optional')) {
                obj['optional'] = ApiClient.convertToType(data['optional'], 'Boolean');
            }
            if (data.hasOwnProperty('array')) {
                obj['array'] = ApiClient.convertToType(data['array'], 'Boolean');
            }
            if (data.hasOwnProperty('deleted')) {
                obj['deleted'] = ApiClient.convertToType(data['deleted'], 'Boolean');
            }
            if (data.hasOwnProperty('object_type')) {
                obj['object_type'] = ApiClient.convertToType(data['object_type'], 'String');
            }
            if (data.hasOwnProperty('min_length')) {
                obj['min_length'] = ApiClient.convertToType(data['min_length'], 'Number');
            }
            if (data.hasOwnProperty('max_length')) {
                obj['max_length'] = ApiClient.convertToType(data['max_length'], 'Number');
            }
            if (data.hasOwnProperty('exact_length')) {
                obj['exact_length'] = ApiClient.convertToType(data['exact_length'], 'Number');
            }
            if (data.hasOwnProperty('eq')) {
                obj['eq'] = ApiClient.convertToType(data['eq'], [Object]);
            }
            if (data.hasOwnProperty('ne')) {
                obj['ne'] = ApiClient.convertToType(data['ne'], ['Number']);
            }
            if (data.hasOwnProperty('lt')) {
                obj['lt'] = ApiClient.convertToType(data['lt'], 'Number');
            }
            if (data.hasOwnProperty('lte')) {
                obj['lte'] = ApiClient.convertToType(data['lte'], 'Number');
            }
            if (data.hasOwnProperty('gt')) {
                obj['gt'] = ApiClient.convertToType(data['gt'], 'Number');
            }
            if (data.hasOwnProperty('gte')) {
                obj['gte'] = ApiClient.convertToType(data['gte'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ManagementProjectsMetadataSchemaDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ManagementProjectsMetadataSchemaDefinition</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['object_type'] && !(typeof data['object_type'] === 'string' || data['object_type'] instanceof String)) {
            throw new Error("Expected the field `object_type` to be a primitive type in the JSON string but got " + data['object_type']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['eq'])) {
            throw new Error("Expected the field `eq` to be an array in the JSON data but got " + data['eq']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ne'])) {
            throw new Error("Expected the field `ne` to be an array in the JSON data but got " + data['ne']);
        }

        return true;
    }


}



/**
 * Indicates the type of metadata. Note that `\"geopoint\"` type is a paid feature.
 * @member {module:model/ManagementProjectsMetadataSchemaDefinition.TypeEnum} type
 */
ManagementProjectsMetadataSchemaDefinition.prototype['type'] = undefined;

/**
 * Indicates if this definition is optional or not for the resource.
 * @member {Boolean} optional
 */
ManagementProjectsMetadataSchemaDefinition.prototype['optional'] = undefined;

/**
 * Indicates if the definition is an array.
 * @member {Boolean} array
 */
ManagementProjectsMetadataSchemaDefinition.prototype['array'] = undefined;

/**
 * Indicates if the definition has been deleted from the schema.
 * @member {Boolean} deleted
 */
ManagementProjectsMetadataSchemaDefinition.prototype['deleted'] = undefined;

/**
 * The name of the custom resource (i.e. a nested object) if the resource has been previously defined. Otherwise, it is `null` for other types.
 * @member {String} object_type
 */
ManagementProjectsMetadataSchemaDefinition.prototype['object_type'] = undefined;

/**
 * Value indicating the minimum length. Available only for the `string` type.
 * @member {Number} min_length
 */
ManagementProjectsMetadataSchemaDefinition.prototype['min_length'] = undefined;

/**
 * Value indicating the maximum length. Available only for the `string` type.
 * @member {Number} max_length
 */
ManagementProjectsMetadataSchemaDefinition.prototype['max_length'] = undefined;

/**
 * Value indicating the exact length. Available only for the `string` type.
 * @member {Number} exact_length
 */
ManagementProjectsMetadataSchemaDefinition.prototype['exact_length'] = undefined;

/**
 * @member {Array.<Object>} eq
 */
ManagementProjectsMetadataSchemaDefinition.prototype['eq'] = undefined;

/**
 * Array of values that are not allowed. Available only for the `number` type.
 * @member {Array.<Number>} ne
 */
ManagementProjectsMetadataSchemaDefinition.prototype['ne'] = undefined;

/**
 * A property of the `number` type must have `less than` this value. The value should be up to two decimal places.
 * @member {Number} lt
 */
ManagementProjectsMetadataSchemaDefinition.prototype['lt'] = undefined;

/**
 * A property of the `number` type must be `less than or equal` to this value. The value should be up to two decimal places.
 * @member {Number} lte
 */
ManagementProjectsMetadataSchemaDefinition.prototype['lte'] = undefined;

/**
 * A property of `number` type must be `greater than` this value. The value should be up to two decimal places.
 * @member {Number} gt
 */
ManagementProjectsMetadataSchemaDefinition.prototype['gt'] = undefined;

/**
 * A property of `number` type must be `greater than or equal` to this value. The value should be up to two decimal places.
 * @member {Number} gte
 */
ManagementProjectsMetadataSchemaDefinition.prototype['gte'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
ManagementProjectsMetadataSchemaDefinition['TypeEnum'] = {

    /**
     * value: "string"
     * @const
     */
    "string": "string",

    /**
     * value: "number"
     * @const
     */
    "number": "number",

    /**
     * value: "object"
     * @const
     */
    "object": "object",

    /**
     * value: "date"
     * @const
     */
    "date": "date",

    /**
     * value: "datetime"
     * @const
     */
    "datetime": "datetime",

    /**
     * value: "geopoint"
     * @const
     */
    "geopoint": "geopoint",

    /**
     * value: "boolean"
     * @const
     */
    "boolean": "boolean",

    /**
     * value: "image_url"
     * @const
     */
    "image_url": "image_url"
};



export default ManagementProjectsMetadataSchemaDefinition;

