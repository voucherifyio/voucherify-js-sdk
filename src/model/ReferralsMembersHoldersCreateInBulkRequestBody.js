/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Customer from './Customer';

/**
 * The ReferralsMembersHoldersCreateInBulkRequestBody model module.
 * @module model/ReferralsMembersHoldersCreateInBulkRequestBody
 * @version v2018-08-01
 */
class ReferralsMembersHoldersCreateInBulkRequestBody {
    /**
     * Constructs a new <code>ReferralsMembersHoldersCreateInBulkRequestBody</code>.
     * Request body schema for **POST** &#x60;v1/referrals/{campaignId}/members/{memberId}/holders&#x60; and **POST** &#x60;v1/referrals/members/{memberId}/holders&#x60;.
     * @alias module:model/ReferralsMembersHoldersCreateInBulkRequestBody
     */
    constructor() { 
        
        ReferralsMembersHoldersCreateInBulkRequestBody.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReferralsMembersHoldersCreateInBulkRequestBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReferralsMembersHoldersCreateInBulkRequestBody} obj Optional instance to populate.
     * @return {module:model/ReferralsMembersHoldersCreateInBulkRequestBody} The populated <code>ReferralsMembersHoldersCreateInBulkRequestBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReferralsMembersHoldersCreateInBulkRequestBody();

            if (data.hasOwnProperty('holders')) {
                obj['holders'] = ApiClient.convertToType(data['holders'], [Customer]);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReferralsMembersHoldersCreateInBulkRequestBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReferralsMembersHoldersCreateInBulkRequestBody</code>.
     */
    static validateJSON(data) {
        if (data['holders']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['holders'])) {
                throw new Error("Expected the field `holders` to be an array in the JSON data but got " + data['holders']);
            }
            // validate the optional field `holders` (array)
            for (const item of data['holders']) {
                Customer.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Array of holders to be added to a referral card as referees. You have to send at least one object in the array up to a maximum of 100 objects. You can send either a `source_id` or `id`, or both; however, at least one of them is required. If both are sent, Voucherify checks `id` to upsert that customer's data.
 * @member {Array.<module:model/Customer>} holders
 */
ReferralsMembersHoldersCreateInBulkRequestBody.prototype['holders'] = undefined;

/**
 * A set of custom key/value pairs that you can attach to the redeemable holders sent in the array. The value can be a string, number, boolean, date, datetime, image URL, or object. The metadata must meet the metadata schema for publications. The metadata object stores all custom attributes assigned to the redeemable holder.
 * @member {Object} metadata
 */
ReferralsMembersHoldersCreateInBulkRequestBody.prototype['metadata'] = undefined;






export default ReferralsMembersHoldersCreateInBulkRequestBody;

