/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ValidityTimeframe model module.
 * @module model/ValidityTimeframe
 * @version v2018-08-01
 */
class ValidityTimeframe {
    /**
     * Constructs a new <code>ValidityTimeframe</code>.
     * Set recurrent time periods when the earning rule is valid. For example, valid for 1 hour every other day.&#x60;start_date&#x60; **required** when including the &#x60;validity_timeframe&#x60;.
     * @alias module:model/ValidityTimeframe
     */
    constructor() { 
        
        ValidityTimeframe.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ValidityTimeframe</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ValidityTimeframe} obj Optional instance to populate.
     * @return {module:model/ValidityTimeframe} The populated <code>ValidityTimeframe</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ValidityTimeframe();

            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'String');
            }
            if (data.hasOwnProperty('interval')) {
                obj['interval'] = ApiClient.convertToType(data['interval'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ValidityTimeframe</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ValidityTimeframe</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['duration'] && !(typeof data['duration'] === 'string' || data['duration'] instanceof String)) {
            throw new Error("Expected the field `duration` to be a primitive type in the JSON string but got " + data['duration']);
        }
        // ensure the json data is a string
        if (data['interval'] && !(typeof data['interval'] === 'string' || data['interval'] instanceof String)) {
            throw new Error("Expected the field `interval` to be a primitive type in the JSON string but got " + data['interval']);
        }

        return true;
    }


}



/**
 * Defines the amount of time an earning rule will be active in ISO 8601 format. For example, an earning rule with a `duration` of `PT1H` will be valid for a duration of one hour.
 * @member {String} duration
 */
ValidityTimeframe.prototype['duration'] = undefined;

/**
 * Defines the intervening time between two time points in ISO 8601 format, expressed as a duration. For example, an earning rule with an `interval` of `P2D` will be valid every other day.
 * @member {String} interval
 */
ValidityTimeframe.prototype['interval'] = undefined;






export default ValidityTimeframe;

