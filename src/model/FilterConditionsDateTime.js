/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FilterConditionsDateTime model module.
 * @module model/FilterConditionsDateTime
 * @version v2018-08-01
 */
class FilterConditionsDateTime {
    /**
     * Constructs a new <code>FilterConditionsDateTime</code>.
     * Data filters used to narrow down the data records to be returned in the result.
     * @alias module:model/FilterConditionsDateTime
     */
    constructor() { 
        
        FilterConditionsDateTime.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FilterConditionsDateTime</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FilterConditionsDateTime} obj Optional instance to populate.
     * @return {module:model/FilterConditionsDateTime} The populated <code>FilterConditionsDateTime</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FilterConditionsDateTime();

            if (data.hasOwnProperty('$after')) {
                obj['$after'] = ApiClient.convertToType(data['$after'], 'Date');
            }
            if (data.hasOwnProperty('$before')) {
                obj['$before'] = ApiClient.convertToType(data['$before'], 'Date');
            }
            if (data.hasOwnProperty('$has_value')) {
                obj['$has_value'] = ApiClient.convertToType(data['$has_value'], 'String');
            }
            if (data.hasOwnProperty('$is_unknown')) {
                obj['$is_unknown'] = ApiClient.convertToType(data['$is_unknown'], 'String');
            }
            if (data.hasOwnProperty('$more_than')) {
                obj['$more_than'] = ApiClient.convertToType(data['$more_than'], 'Number');
            }
            if (data.hasOwnProperty('$less_than')) {
                obj['$less_than'] = ApiClient.convertToType(data['$less_than'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FilterConditionsDateTime</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FilterConditionsDateTime</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['$has_value'] && !(typeof data['$has_value'] === 'string' || data['$has_value'] instanceof String)) {
            throw new Error("Expected the field `$has_value` to be a primitive type in the JSON string but got " + data['$has_value']);
        }
        // ensure the json data is a string
        if (data['$is_unknown'] && !(typeof data['$is_unknown'] === 'string' || data['$is_unknown'] instanceof String)) {
            throw new Error("Expected the field `$is_unknown` to be a primitive type in the JSON string but got " + data['$is_unknown']);
        }

        return true;
    }


}



/**
 * Value is after this date. The value for this parameter is shown in the ISO 8601 format.
 * @member {Date} $after
 */
FilterConditionsDateTime.prototype['$after'] = undefined;

/**
 * Value is before this date. The value for this parameter is shown in the ISO 8601 format.
 * @member {Date} $before
 */
FilterConditionsDateTime.prototype['$before'] = undefined;

/**
 * Value is NOT null. The value for this parameter is an empty string.
 * @member {String} $has_value
 */
FilterConditionsDateTime.prototype['$has_value'] = undefined;

/**
 * Value is null. The value for this parameter is an empty string.
 * @member {String} $is_unknown
 */
FilterConditionsDateTime.prototype['$is_unknown'] = undefined;

/**
 * Value is more days ago before the current date and time, e.g. more than `10` days ago.
 * @member {Number} $more_than
 */
FilterConditionsDateTime.prototype['$more_than'] = undefined;

/**
 * Value is less days before the current date and time, e.g. less than `10` days ago.
 * @member {Number} $less_than
 */
FilterConditionsDateTime.prototype['$less_than'] = undefined;






export default FilterConditionsDateTime;

