/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RedeemableVoucher from './RedeemableVoucher';

/**
 * The CustomerRedeemableRedeemable model module.
 * @module model/CustomerRedeemableRedeemable
 * @version v2018-08-01
 */
class CustomerRedeemableRedeemable {
    /**
     * Constructs a new <code>CustomerRedeemableRedeemable</code>.
     * Detailed information about the customer&#39;s redeemable item
     * @alias module:model/CustomerRedeemableRedeemable
     * @param voucher {module:model/RedeemableVoucher} 
     */
    constructor(voucher) { 
        
        CustomerRedeemableRedeemable.initialize(this, voucher);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, voucher) { 
        obj['voucher'] = voucher;
        obj['status'] = 'ACTIVE';
    }

    /**
     * Constructs a <code>CustomerRedeemableRedeemable</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CustomerRedeemableRedeemable} obj Optional instance to populate.
     * @return {module:model/CustomerRedeemableRedeemable} The populated <code>CustomerRedeemableRedeemable</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CustomerRedeemableRedeemable();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('voucher')) {
                obj['voucher'] = RedeemableVoucher.constructFromObject(data['voucher']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CustomerRedeemableRedeemable</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CustomerRedeemableRedeemable</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CustomerRedeemableRedeemable.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // validate the optional field `voucher`
        if (data['voucher']) { // data not null
          RedeemableVoucher.validateJSON(data['voucher']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}

CustomerRedeemableRedeemable.RequiredProperties = ["voucher"];

/**
 * Type of the redeemable.
 * @member {String} type
 */
CustomerRedeemableRedeemable.prototype['type'] = undefined;

/**
 * @member {module:model/RedeemableVoucher} voucher
 */
CustomerRedeemableRedeemable.prototype['voucher'] = undefined;

/**
 * Status of the redeemable.
 * @member {module:model/CustomerRedeemableRedeemable.StatusEnum} status
 * @default 'ACTIVE'
 */
CustomerRedeemableRedeemable.prototype['status'] = 'ACTIVE';





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
CustomerRedeemableRedeemable['StatusEnum'] = {

    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",

    /**
     * value: "USED"
     * @const
     */
    "USED": "USED",

    /**
     * value: "DISABLED"
     * @const
     */
    "DISABLED": "DISABLED",

    /**
     * value: "NOT_ACTIVE_YET"
     * @const
     */
    "NOT_ACTIVE_YET": "NOT_ACTIVE_YET",

    /**
     * value: "EXPIRED"
     * @const
     */
    "EXPIRED": "EXPIRED",

    /**
     * value: "NO_BALANCE"
     * @const
     */
    "NO_BALANCE": "NO_BALANCE"
};



export default CustomerRedeemableRedeemable;

