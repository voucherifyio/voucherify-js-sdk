/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TrashBinItem from './TrashBinItem';

/**
 * The TrashBinListResponseBody model module.
 * @module model/TrashBinListResponseBody
 * @version v2018-08-01
 */
class TrashBinListResponseBody {
    /**
     * Constructs a new <code>TrashBinListResponseBody</code>.
     * Retrieves a list of the resources moved the bin.
     * @alias module:model/TrashBinListResponseBody
     */
    constructor() { 
        
        TrashBinListResponseBody.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['object'] = 'list';
        obj['data_ref'] = 'data';
    }

    /**
     * Constructs a <code>TrashBinListResponseBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TrashBinListResponseBody} obj Optional instance to populate.
     * @return {module:model/TrashBinListResponseBody} The populated <code>TrashBinListResponseBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TrashBinListResponseBody();

            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('data_ref')) {
                obj['data_ref'] = ApiClient.convertToType(data['data_ref'], 'String');
            }
            if (data.hasOwnProperty('data')) {
                obj['data'] = ApiClient.convertToType(data['data'], [TrashBinItem]);
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
            if (data.hasOwnProperty('has_more')) {
                obj['has_more'] = ApiClient.convertToType(data['has_more'], 'Boolean');
            }
            if (data.hasOwnProperty('more_starting_after')) {
                obj['more_starting_after'] = ApiClient.convertToType(data['more_starting_after'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TrashBinListResponseBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TrashBinListResponseBody</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['data_ref'] && !(typeof data['data_ref'] === 'string' || data['data_ref'] instanceof String)) {
            throw new Error("Expected the field `data_ref` to be a primitive type in the JSON string but got " + data['data_ref']);
        }
        if (data['data']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['data'])) {
                throw new Error("Expected the field `data` to be an array in the JSON data but got " + data['data']);
            }
            // validate the optional field `data` (array)
            for (const item of data['data']) {
                TrashBinItem.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['more_starting_after'] && !(typeof data['more_starting_after'] === 'string' || data['more_starting_after'] instanceof String)) {
            throw new Error("Expected the field `more_starting_after` to be a primitive type in the JSON string but got " + data['more_starting_after']);
        }

        return true;
    }


}



/**
 * The type of the object represented by JSON. This object stores information about the bin entries in a dictionary.
 * @member {module:model/TrashBinListResponseBody.ObjectEnum} object
 * @default 'list'
 */
TrashBinListResponseBody.prototype['object'] = 'list';

/**
 * Identifies the name of the attribute that contains the array of bin entry objects.
 * @member {module:model/TrashBinListResponseBody.DataRefEnum} data_ref
 * @default 'data'
 */
TrashBinListResponseBody.prototype['data_ref'] = 'data';

/**
 * Array of bin entry objects.
 * @member {Array.<module:model/TrashBinItem>} data
 */
TrashBinListResponseBody.prototype['data'] = undefined;

/**
 * The total number of bin entries. This is the number of the entries returned in the array, not the number of all matching results or all resources currently moved to the bin.
 * @member {Number} total
 */
TrashBinListResponseBody.prototype['total'] = undefined;

/**
 * As query results are always limited (by the limit parameter), the `has_more` flag indicates if there are more records for given filter parameters. This lets you know if you can run another request with a `starting_after_id` query or a different limit to get more records returned in the results.
 * @member {Boolean} has_more
 */
TrashBinListResponseBody.prototype['has_more'] = undefined;

/**
 * If `has_more` is `true`, it returns an ID that can be used to return another page of results. Use the ID in the `starting_after_id` query parameter to display another page of the results occuring after the field with that ID.
 * @member {String} more_starting_after
 */
TrashBinListResponseBody.prototype['more_starting_after'] = undefined;





/**
 * Allowed values for the <code>object</code> property.
 * @enum {String}
 * @readonly
 */
TrashBinListResponseBody['ObjectEnum'] = {

    /**
     * value: "list"
     * @const
     */
    "list": "list"
};


/**
 * Allowed values for the <code>data_ref</code> property.
 * @enum {String}
 * @readonly
 */
TrashBinListResponseBody['DataRefEnum'] = {

    /**
     * value: "data"
     * @const
     */
    "data": "data"
};



export default TrashBinListResponseBody;

