/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VoucherTransactionDetails from './VoucherTransactionDetails';

/**
 * The VoucherTransaction model module.
 * @module model/VoucherTransaction
 * @version v2018-08-01
 */
class VoucherTransaction {
    /**
     * Constructs a new <code>VoucherTransaction</code>.
     * @alias module:model/VoucherTransaction
     */
    constructor() { 
        
        VoucherTransaction.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VoucherTransaction</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VoucherTransaction} obj Optional instance to populate.
     * @return {module:model/VoucherTransaction} The populated <code>VoucherTransaction</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VoucherTransaction();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('source_id')) {
                obj['source_id'] = ApiClient.convertToType(data['source_id'], 'String');
            }
            if (data.hasOwnProperty('voucher_id')) {
                obj['voucher_id'] = ApiClient.convertToType(data['voucher_id'], 'String');
            }
            if (data.hasOwnProperty('campaign_id')) {
                obj['campaign_id'] = ApiClient.convertToType(data['campaign_id'], 'String');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
            if (data.hasOwnProperty('related_transaction_id')) {
                obj['related_transaction_id'] = ApiClient.convertToType(data['related_transaction_id'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('details')) {
                obj['details'] = VoucherTransactionDetails.constructFromObject(data['details']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VoucherTransaction</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VoucherTransaction</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['source_id'] && !(typeof data['source_id'] === 'string' || data['source_id'] instanceof String)) {
            throw new Error("Expected the field `source_id` to be a primitive type in the JSON string but got " + data['source_id']);
        }
        // ensure the json data is a string
        if (data['voucher_id'] && !(typeof data['voucher_id'] === 'string' || data['voucher_id'] instanceof String)) {
            throw new Error("Expected the field `voucher_id` to be a primitive type in the JSON string but got " + data['voucher_id']);
        }
        // ensure the json data is a string
        if (data['campaign_id'] && !(typeof data['campaign_id'] === 'string' || data['campaign_id'] instanceof String)) {
            throw new Error("Expected the field `campaign_id` to be a primitive type in the JSON string but got " + data['campaign_id']);
        }
        // ensure the json data is a string
        if (data['source'] && !(typeof data['source'] === 'string' || data['source'] instanceof String)) {
            throw new Error("Expected the field `source` to be a primitive type in the JSON string but got " + data['source']);
        }
        // ensure the json data is a string
        if (data['reason'] && !(typeof data['reason'] === 'string' || data['reason'] instanceof String)) {
            throw new Error("Expected the field `reason` to be a primitive type in the JSON string but got " + data['reason']);
        }
        // ensure the json data is a string
        if (data['related_transaction_id'] && !(typeof data['related_transaction_id'] === 'string' || data['related_transaction_id'] instanceof String)) {
            throw new Error("Expected the field `related_transaction_id` to be a primitive type in the JSON string but got " + data['related_transaction_id']);
        }
        // validate the optional field `details`
        if (data['details']) { // data not null
          VoucherTransactionDetails.validateJSON(data['details']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * Unique transaction ID.
 * @member {String} id
 */
VoucherTransaction.prototype['id'] = undefined;

/**
 * The merchant's transaction ID if it is different from the Voucherify transaction ID. It is really useful in case of an integration between multiple systems. It can be a transaction ID from a CRM system, database or 3rd-party service. In case of a redemption, this value is null.
 * @member {String} source_id
 */
VoucherTransaction.prototype['source_id'] = undefined;

/**
 * Unique voucher ID.
 * @member {String} voucher_id
 */
VoucherTransaction.prototype['voucher_id'] = undefined;

/**
 * Unqiue campaign ID of the voucher's parent campaign if it is part of campaign that generates bulk codes.
 * @member {String} campaign_id
 */
VoucherTransaction.prototype['campaign_id'] = undefined;

/**
 * The channel through which the transaction took place, whether through the API or the the Dashboard. In case of a redemption, this value is null.
 * @member {String} source
 */
VoucherTransaction.prototype['source'] = undefined;

/**
 * Reason why the transaction occurred. In case of a redemption, this value is null.
 * @member {String} reason
 */
VoucherTransaction.prototype['reason'] = undefined;

/**
 * The related transaction ID on the receiving card.
 * @member {String} related_transaction_id
 */
VoucherTransaction.prototype['related_transaction_id'] = undefined;

/**
 * Timestamp representing the date and time when the transaction was created. The value is shown in the ISO 8601 format.
 * @member {Date} created_at
 */
VoucherTransaction.prototype['created_at'] = undefined;

/**
 * @member {module:model/VoucherTransactionDetails} details
 */
VoucherTransaction.prototype['details'] = undefined;

/**
 * @member {module:model/VoucherTransaction.TypeEnum} type
 */
VoucherTransaction.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
VoucherTransaction['TypeEnum'] = {

    /**
     * value: "CREDITS_REDEMPTION"
     * @const
     */
    "CREDITS_REDEMPTION": "CREDITS_REDEMPTION",

    /**
     * value: "CREDITS_REFUND"
     * @const
     */
    "CREDITS_REFUND": "CREDITS_REFUND",

    /**
     * value: "CREDITS_ADDITION"
     * @const
     */
    "CREDITS_ADDITION": "CREDITS_ADDITION",

    /**
     * value: "CREDITS_REMOVAL"
     * @const
     */
    "CREDITS_REMOVAL": "CREDITS_REMOVAL",

    /**
     * value: "PENDING_POINTS_ACTIVATION"
     * @const
     */
    "PENDING_POINTS_ACTIVATION": "PENDING_POINTS_ACTIVATION",

    /**
     * value: "POINTS_ACCRUAL"
     * @const
     */
    "POINTS_ACCRUAL": "POINTS_ACCRUAL",

    /**
     * value: "POINTS_REDEMPTION"
     * @const
     */
    "POINTS_REDEMPTION": "POINTS_REDEMPTION",

    /**
     * value: "POINTS_REFUND"
     * @const
     */
    "POINTS_REFUND": "POINTS_REFUND",

    /**
     * value: "POINTS_ADDITION"
     * @const
     */
    "POINTS_ADDITION": "POINTS_ADDITION",

    /**
     * value: "POINTS_REMOVAL"
     * @const
     */
    "POINTS_REMOVAL": "POINTS_REMOVAL",

    /**
     * value: "POINTS_EXPIRATION"
     * @const
     */
    "POINTS_EXPIRATION": "POINTS_EXPIRATION",

    /**
     * value: "POINTS_TRANSFER_IN"
     * @const
     */
    "POINTS_TRANSFER_IN": "POINTS_TRANSFER_IN",

    /**
     * value: "POINTS_TRANSFER_OUT"
     * @const
     */
    "POINTS_TRANSFER_OUT": "POINTS_TRANSFER_OUT"
};



export default VoucherTransaction;

