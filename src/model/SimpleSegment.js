/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SimpleSegment model module.
 * @module model/SimpleSegment
 * @version v2018-08-01
 */
class SimpleSegment {
    /**
     * Constructs a new <code>SimpleSegment</code>.
     * @alias module:model/SimpleSegment
     */
    constructor() { 
        
        SimpleSegment.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['object'] = 'segment';
    }

    /**
     * Constructs a <code>SimpleSegment</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SimpleSegment} obj Optional instance to populate.
     * @return {module:model/SimpleSegment} The populated <code>SimpleSegment</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SimpleSegment();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SimpleSegment</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SimpleSegment</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }

        return true;
    }


}



/**
 * Unique segment ID.
 * @member {String} id
 */
SimpleSegment.prototype['id'] = undefined;

/**
 * Segment name.
 * @member {String} name
 */
SimpleSegment.prototype['name'] = undefined;

/**
 * The type of the object represented by the ID.
 * @member {module:model/SimpleSegment.ObjectEnum} object
 * @default 'segment'
 */
SimpleSegment.prototype['object'] = 'segment';





/**
 * Allowed values for the <code>object</code> property.
 * @enum {String}
 * @readonly
 */
SimpleSegment['ObjectEnum'] = {

    /**
     * value: "segment"
     * @const
     */
    "segment": "segment"
};



export default SimpleSegment;

