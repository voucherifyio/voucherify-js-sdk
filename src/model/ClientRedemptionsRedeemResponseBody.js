/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClientRedemptionsRedeemResponseBodyOrder from './ClientRedemptionsRedeemResponseBodyOrder';
import Redemption from './Redemption';
import ValidationsRedeemableInapplicable from './ValidationsRedeemableInapplicable';
import ValidationsRedeemableSkipped from './ValidationsRedeemableSkipped';

/**
 * The ClientRedemptionsRedeemResponseBody model module.
 * @module model/ClientRedemptionsRedeemResponseBody
 * @version v2018-08-01
 */
class ClientRedemptionsRedeemResponseBody {
    /**
     * Constructs a new <code>ClientRedemptionsRedeemResponseBody</code>.
     * Response body schema for **POST** &#x60;v1/redemptions&#x60;.
     * @alias module:model/ClientRedemptionsRedeemResponseBody
     */
    constructor() { 
        
        ClientRedemptionsRedeemResponseBody.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClientRedemptionsRedeemResponseBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClientRedemptionsRedeemResponseBody} obj Optional instance to populate.
     * @return {module:model/ClientRedemptionsRedeemResponseBody} The populated <code>ClientRedemptionsRedeemResponseBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClientRedemptionsRedeemResponseBody();

            if (data.hasOwnProperty('redemptions')) {
                obj['redemptions'] = ApiClient.convertToType(data['redemptions'], [Redemption]);
            }
            if (data.hasOwnProperty('parent_redemption')) {
                obj['parent_redemption'] = Redemption.constructFromObject(data['parent_redemption']);
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = ClientRedemptionsRedeemResponseBodyOrder.constructFromObject(data['order']);
            }
            if (data.hasOwnProperty('inapplicable_redeemables')) {
                obj['inapplicable_redeemables'] = ApiClient.convertToType(data['inapplicable_redeemables'], [ValidationsRedeemableInapplicable]);
            }
            if (data.hasOwnProperty('skipped_redeemables')) {
                obj['skipped_redeemables'] = ApiClient.convertToType(data['skipped_redeemables'], [ValidationsRedeemableSkipped]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClientRedemptionsRedeemResponseBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClientRedemptionsRedeemResponseBody</code>.
     */
    static validateJSON(data) {
        if (data['redemptions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['redemptions'])) {
                throw new Error("Expected the field `redemptions` to be an array in the JSON data but got " + data['redemptions']);
            }
            // validate the optional field `redemptions` (array)
            for (const item of data['redemptions']) {
                Redemption.validateJSON(item);
            };
        }
        // validate the optional field `parent_redemption`
        if (data['parent_redemption']) { // data not null
          Redemption.validateJSON(data['parent_redemption']);
        }
        // validate the optional field `order`
        if (data['order']) { // data not null
          ClientRedemptionsRedeemResponseBodyOrder.validateJSON(data['order']);
        }
        if (data['inapplicable_redeemables']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['inapplicable_redeemables'])) {
                throw new Error("Expected the field `inapplicable_redeemables` to be an array in the JSON data but got " + data['inapplicable_redeemables']);
            }
            // validate the optional field `inapplicable_redeemables` (array)
            for (const item of data['inapplicable_redeemables']) {
                ValidationsRedeemableInapplicable.validateJSON(item);
            };
        }
        if (data['skipped_redeemables']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['skipped_redeemables'])) {
                throw new Error("Expected the field `skipped_redeemables` to be an array in the JSON data but got " + data['skipped_redeemables']);
            }
            // validate the optional field `skipped_redeemables` (array)
            for (const item of data['skipped_redeemables']) {
                ValidationsRedeemableSkipped.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/Redemption>} redemptions
 */
ClientRedemptionsRedeemResponseBody.prototype['redemptions'] = undefined;

/**
 * @member {module:model/Redemption} parent_redemption
 */
ClientRedemptionsRedeemResponseBody.prototype['parent_redemption'] = undefined;

/**
 * @member {module:model/ClientRedemptionsRedeemResponseBodyOrder} order
 */
ClientRedemptionsRedeemResponseBody.prototype['order'] = undefined;

/**
 * Lists validation results of each inapplicable redeemable.
 * @member {Array.<module:model/ValidationsRedeemableInapplicable>} inapplicable_redeemables
 */
ClientRedemptionsRedeemResponseBody.prototype['inapplicable_redeemables'] = undefined;

/**
 * Lists validation results of each redeemable. If a redeemable can be applied, the API returns `\"status\": \"APPLICABLE\"`.
 * @member {Array.<module:model/ValidationsRedeemableSkipped>} skipped_redeemables
 */
ClientRedemptionsRedeemResponseBody.prototype['skipped_redeemables'] = undefined;






export default ClientRedemptionsRedeemResponseBody;

