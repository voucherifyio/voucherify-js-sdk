/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClientEventsCreateRequestBodyLoyalty from './ClientEventsCreateRequestBodyLoyalty';
import ClientEventsCreateRequestBodyReferral from './ClientEventsCreateRequestBodyReferral';
import Customer from './Customer';

/**
 * The ClientEventsCreateRequestBody model module.
 * @module model/ClientEventsCreateRequestBody
 * @version v2018-08-01
 */
class ClientEventsCreateRequestBody {
    /**
     * Constructs a new <code>ClientEventsCreateRequestBody</code>.
     * Request body schema for **POST** &#x60;v1/events&#x60;.
     * @alias module:model/ClientEventsCreateRequestBody
     * @param customer {module:model/Customer} 
     */
    constructor(customer) { 
        
        ClientEventsCreateRequestBody.initialize(this, customer);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, customer) { 
        obj['customer'] = customer;
    }

    /**
     * Constructs a <code>ClientEventsCreateRequestBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClientEventsCreateRequestBody} obj Optional instance to populate.
     * @return {module:model/ClientEventsCreateRequestBody} The populated <code>ClientEventsCreateRequestBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClientEventsCreateRequestBody();

            if (data.hasOwnProperty('event')) {
                obj['event'] = ApiClient.convertToType(data['event'], 'String');
            }
            if (data.hasOwnProperty('customer')) {
                obj['customer'] = Customer.constructFromObject(data['customer']);
            }
            if (data.hasOwnProperty('referral')) {
                obj['referral'] = ClientEventsCreateRequestBodyReferral.constructFromObject(data['referral']);
            }
            if (data.hasOwnProperty('loyalty')) {
                obj['loyalty'] = ClientEventsCreateRequestBodyLoyalty.constructFromObject(data['loyalty']);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClientEventsCreateRequestBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClientEventsCreateRequestBody</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ClientEventsCreateRequestBody.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['event'] && !(typeof data['event'] === 'string' || data['event'] instanceof String)) {
            throw new Error("Expected the field `event` to be a primitive type in the JSON string but got " + data['event']);
        }
        // validate the optional field `customer`
        if (data['customer']) { // data not null
          Customer.validateJSON(data['customer']);
        }
        // validate the optional field `referral`
        if (data['referral']) { // data not null
          ClientEventsCreateRequestBodyReferral.validateJSON(data['referral']);
        }
        // validate the optional field `loyalty`
        if (data['loyalty']) { // data not null
          ClientEventsCreateRequestBodyLoyalty.validateJSON(data['loyalty']);
        }

        return true;
    }


}

ClientEventsCreateRequestBody.RequiredProperties = ["customer"];

/**
 * Event name. This is the same name that you used to define a custom event in the **Dashboard** > **Project Settings** > **Event Schema**.
 * @member {String} event
 */
ClientEventsCreateRequestBody.prototype['event'] = undefined;

/**
 * @member {module:model/Customer} customer
 */
ClientEventsCreateRequestBody.prototype['customer'] = undefined;

/**
 * @member {module:model/ClientEventsCreateRequestBodyReferral} referral
 */
ClientEventsCreateRequestBody.prototype['referral'] = undefined;

/**
 * @member {module:model/ClientEventsCreateRequestBodyLoyalty} loyalty
 */
ClientEventsCreateRequestBody.prototype['loyalty'] = undefined;

/**
 * The metadata object stores all custom attributes assigned to the event. A set of key/value pairs that you can attach to an event object. It can be useful for storing additional information about the event in a structured format. Event metadata schema is defined in the **Dashboard** > **Project Settings** > **Event Schema** > **Edit particular event** > **Metadata property definition**.
 * @member {Object} metadata
 */
ClientEventsCreateRequestBody.prototype['metadata'] = undefined;






export default ClientEventsCreateRequestBody;

