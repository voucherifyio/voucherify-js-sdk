/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LoyaltyCardTransactionDetailsCustomEvent from './LoyaltyCardTransactionDetailsCustomEvent';
import LoyaltyCardTransactionDetailsEarningRule from './LoyaltyCardTransactionDetailsEarningRule';
import LoyaltyCardTransactionDetailsEvent from './LoyaltyCardTransactionDetailsEvent';
import LoyaltyCardTransactionDetailsEventSchema from './LoyaltyCardTransactionDetailsEventSchema';
import LoyaltyCardTransactionDetailsHolderLoyaltyTier from './LoyaltyCardTransactionDetailsHolderLoyaltyTier';
import LoyaltyCardTransactionDetailsLoyaltyTier from './LoyaltyCardTransactionDetailsLoyaltyTier';
import LoyaltyCardTransactionDetailsOrder from './LoyaltyCardTransactionDetailsOrder';
import LoyaltyCardTransactionDetailsRedemption from './LoyaltyCardTransactionDetailsRedemption';
import LoyaltyCardTransactionDetailsReward from './LoyaltyCardTransactionDetailsReward';
import LoyaltyCardTransactionDetailsRollback from './LoyaltyCardTransactionDetailsRollback';
import LoyaltyCardTransactionDetailsSegment from './LoyaltyCardTransactionDetailsSegment';
import LoyaltyPendingPoints from './LoyaltyPendingPoints';
import SimpleVoucher from './SimpleVoucher';
import VoucherBalance from './VoucherBalance';

/**
 * The LoyaltyCardTransactionDetails model module.
 * @module model/LoyaltyCardTransactionDetails
 * @version v2018-08-01
 */
class LoyaltyCardTransactionDetails {
    /**
     * Constructs a new <code>LoyaltyCardTransactionDetails</code>.
     * Contains the detailed information about the transaction.
     * @alias module:model/LoyaltyCardTransactionDetails
     */
    constructor() { 
        
        LoyaltyCardTransactionDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LoyaltyCardTransactionDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LoyaltyCardTransactionDetails} obj Optional instance to populate.
     * @return {module:model/LoyaltyCardTransactionDetails} The populated <code>LoyaltyCardTransactionDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LoyaltyCardTransactionDetails();

            if (data.hasOwnProperty('balance')) {
                obj['balance'] = VoucherBalance.constructFromObject(data['balance']);
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = LoyaltyCardTransactionDetailsOrder.constructFromObject(data['order']);
            }
            if (data.hasOwnProperty('event')) {
                obj['event'] = LoyaltyCardTransactionDetailsEvent.constructFromObject(data['event']);
            }
            if (data.hasOwnProperty('earning_rule')) {
                obj['earning_rule'] = LoyaltyCardTransactionDetailsEarningRule.constructFromObject(data['earning_rule']);
            }
            if (data.hasOwnProperty('segment')) {
                obj['segment'] = LoyaltyCardTransactionDetailsSegment.constructFromObject(data['segment']);
            }
            if (data.hasOwnProperty('loyalty_tier')) {
                obj['loyalty_tier'] = LoyaltyCardTransactionDetailsLoyaltyTier.constructFromObject(data['loyalty_tier']);
            }
            if (data.hasOwnProperty('redemption')) {
                obj['redemption'] = LoyaltyCardTransactionDetailsRedemption.constructFromObject(data['redemption']);
            }
            if (data.hasOwnProperty('rollback')) {
                obj['rollback'] = LoyaltyCardTransactionDetailsRollback.constructFromObject(data['rollback']);
            }
            if (data.hasOwnProperty('custom_event')) {
                obj['custom_event'] = LoyaltyCardTransactionDetailsCustomEvent.constructFromObject(data['custom_event']);
            }
            if (data.hasOwnProperty('event_schema')) {
                obj['event_schema'] = LoyaltyCardTransactionDetailsEventSchema.constructFromObject(data['event_schema']);
            }
            if (data.hasOwnProperty('holder_loyalty_tier')) {
                obj['holder_loyalty_tier'] = LoyaltyCardTransactionDetailsHolderLoyaltyTier.constructFromObject(data['holder_loyalty_tier']);
            }
            if (data.hasOwnProperty('pending_points')) {
                obj['pending_points'] = LoyaltyPendingPoints.constructFromObject(data['pending_points']);
            }
            if (data.hasOwnProperty('reward')) {
                obj['reward'] = LoyaltyCardTransactionDetailsReward.constructFromObject(data['reward']);
            }
            if (data.hasOwnProperty('source_voucher')) {
                obj['source_voucher'] = SimpleVoucher.constructFromObject(data['source_voucher']);
            }
            if (data.hasOwnProperty('destination_voucher')) {
                obj['destination_voucher'] = SimpleVoucher.constructFromObject(data['destination_voucher']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LoyaltyCardTransactionDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LoyaltyCardTransactionDetails</code>.
     */
    static validateJSON(data) {
        // validate the optional field `balance`
        if (data['balance']) { // data not null
          VoucherBalance.validateJSON(data['balance']);
        }
        // validate the optional field `order`
        if (data['order']) { // data not null
          LoyaltyCardTransactionDetailsOrder.validateJSON(data['order']);
        }
        // validate the optional field `event`
        if (data['event']) { // data not null
          LoyaltyCardTransactionDetailsEvent.validateJSON(data['event']);
        }
        // validate the optional field `earning_rule`
        if (data['earning_rule']) { // data not null
          LoyaltyCardTransactionDetailsEarningRule.validateJSON(data['earning_rule']);
        }
        // validate the optional field `segment`
        if (data['segment']) { // data not null
          LoyaltyCardTransactionDetailsSegment.validateJSON(data['segment']);
        }
        // validate the optional field `loyalty_tier`
        if (data['loyalty_tier']) { // data not null
          LoyaltyCardTransactionDetailsLoyaltyTier.validateJSON(data['loyalty_tier']);
        }
        // validate the optional field `redemption`
        if (data['redemption']) { // data not null
          LoyaltyCardTransactionDetailsRedemption.validateJSON(data['redemption']);
        }
        // validate the optional field `rollback`
        if (data['rollback']) { // data not null
          LoyaltyCardTransactionDetailsRollback.validateJSON(data['rollback']);
        }
        // validate the optional field `custom_event`
        if (data['custom_event']) { // data not null
          LoyaltyCardTransactionDetailsCustomEvent.validateJSON(data['custom_event']);
        }
        // validate the optional field `event_schema`
        if (data['event_schema']) { // data not null
          LoyaltyCardTransactionDetailsEventSchema.validateJSON(data['event_schema']);
        }
        // validate the optional field `holder_loyalty_tier`
        if (data['holder_loyalty_tier']) { // data not null
          LoyaltyCardTransactionDetailsHolderLoyaltyTier.validateJSON(data['holder_loyalty_tier']);
        }
        // validate the optional field `pending_points`
        if (data['pending_points']) { // data not null
          LoyaltyPendingPoints.validateJSON(data['pending_points']);
        }
        // validate the optional field `reward`
        if (data['reward']) { // data not null
          LoyaltyCardTransactionDetailsReward.validateJSON(data['reward']);
        }
        // validate the optional field `source_voucher`
        if (data['source_voucher']) { // data not null
          SimpleVoucher.validateJSON(data['source_voucher']);
        }
        // validate the optional field `destination_voucher`
        if (data['destination_voucher']) { // data not null
          SimpleVoucher.validateJSON(data['destination_voucher']);
        }

        return true;
    }


}



/**
 * @member {module:model/VoucherBalance} balance
 */
LoyaltyCardTransactionDetails.prototype['balance'] = undefined;

/**
 * @member {module:model/LoyaltyCardTransactionDetailsOrder} order
 */
LoyaltyCardTransactionDetails.prototype['order'] = undefined;

/**
 * @member {module:model/LoyaltyCardTransactionDetailsEvent} event
 */
LoyaltyCardTransactionDetails.prototype['event'] = undefined;

/**
 * @member {module:model/LoyaltyCardTransactionDetailsEarningRule} earning_rule
 */
LoyaltyCardTransactionDetails.prototype['earning_rule'] = undefined;

/**
 * @member {module:model/LoyaltyCardTransactionDetailsSegment} segment
 */
LoyaltyCardTransactionDetails.prototype['segment'] = undefined;

/**
 * @member {module:model/LoyaltyCardTransactionDetailsLoyaltyTier} loyalty_tier
 */
LoyaltyCardTransactionDetails.prototype['loyalty_tier'] = undefined;

/**
 * @member {module:model/LoyaltyCardTransactionDetailsRedemption} redemption
 */
LoyaltyCardTransactionDetails.prototype['redemption'] = undefined;

/**
 * @member {module:model/LoyaltyCardTransactionDetailsRollback} rollback
 */
LoyaltyCardTransactionDetails.prototype['rollback'] = undefined;

/**
 * @member {module:model/LoyaltyCardTransactionDetailsCustomEvent} custom_event
 */
LoyaltyCardTransactionDetails.prototype['custom_event'] = undefined;

/**
 * @member {module:model/LoyaltyCardTransactionDetailsEventSchema} event_schema
 */
LoyaltyCardTransactionDetails.prototype['event_schema'] = undefined;

/**
 * @member {module:model/LoyaltyCardTransactionDetailsHolderLoyaltyTier} holder_loyalty_tier
 */
LoyaltyCardTransactionDetails.prototype['holder_loyalty_tier'] = undefined;

/**
 * @member {module:model/LoyaltyPendingPoints} pending_points
 */
LoyaltyCardTransactionDetails.prototype['pending_points'] = undefined;

/**
 * @member {module:model/LoyaltyCardTransactionDetailsReward} reward
 */
LoyaltyCardTransactionDetails.prototype['reward'] = undefined;

/**
 * @member {module:model/SimpleVoucher} source_voucher
 */
LoyaltyCardTransactionDetails.prototype['source_voucher'] = undefined;

/**
 * @member {module:model/SimpleVoucher} destination_voucher
 */
LoyaltyCardTransactionDetails.prototype['destination_voucher'] = undefined;






export default LoyaltyCardTransactionDetails;

