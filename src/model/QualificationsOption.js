/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import QualificationsOptionFilters from './QualificationsOptionFilters';

/**
 * The QualificationsOption model module.
 * @module model/QualificationsOption
 * @version v2018-08-01
 */
class QualificationsOption {
    /**
     * Constructs a new <code>QualificationsOption</code>.
     * Configure parameters returned in the response.
     * @alias module:model/QualificationsOption
     */
    constructor() { 
        
        QualificationsOption.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QualificationsOption</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QualificationsOption} obj Optional instance to populate.
     * @return {module:model/QualificationsOption} The populated <code>QualificationsOption</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QualificationsOption();

            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('starting_after')) {
                obj['starting_after'] = ApiClient.convertToType(data['starting_after'], 'Date');
            }
            if (data.hasOwnProperty('filters')) {
                obj['filters'] = QualificationsOptionFilters.constructFromObject(data['filters']);
            }
            if (data.hasOwnProperty('expand')) {
                obj['expand'] = ApiClient.convertToType(data['expand'], ['String']);
            }
            if (data.hasOwnProperty('sorting_rule')) {
                obj['sorting_rule'] = ApiClient.convertToType(data['sorting_rule'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QualificationsOption</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QualificationsOption</code>.
     */
    static validateJSON(data) {
        // validate the optional field `filters`
        if (data['filters']) { // data not null
          QualificationsOptionFilters.validateJSON(data['filters']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['expand'])) {
            throw new Error("Expected the field `expand` to be an array in the JSON data but got " + data['expand']);
        }
        // ensure the json data is a string
        if (data['sorting_rule'] && !(typeof data['sorting_rule'] === 'string' || data['sorting_rule'] instanceof String)) {
            throw new Error("Expected the field `sorting_rule` to be a primitive type in the JSON string but got " + data['sorting_rule']);
        }

        return true;
    }


}



/**
 * The maximum number of redeemables to be returned in the API request. The actual number of returned redeemables will be determined by the API. The default value is set to 5
 * @member {Number} limit
 */
QualificationsOption.prototype['limit'] = undefined;

/**
 * Cursor used for paging.
 * @member {Date} starting_after
 */
QualificationsOption.prototype['starting_after'] = undefined;

/**
 * @member {module:model/QualificationsOptionFilters} filters
 */
QualificationsOption.prototype['filters'] = undefined;

/**
 * The expand array lets you configure the parameters included in the response. Depending on the strings included in the array, the response will contain different details.   | **Expand Option** | **Response Body** | |:---|:---| | [`\"redeemable\"`] | Returns the redeemables':<br />- metadata<br />- redeemable name,<br />- campaign name,<br />- campaign ID| | [`\"category\"`] | - Returns an expanded `categories` object, showing details about the category. | | [`\"validation_rules\"`] | - Returns an expanded `validation_rules` object, showing details about the validation rules. |
 * @member {Array.<module:model/QualificationsOption.ExpandEnum>} expand
 */
QualificationsOption.prototype['expand'] = undefined;

/**
 * Is used to determine the order in which data is displayed in the result array.    - `DEFAULT` - Sorting descending by `created_at`   - `BEST_DEAL` - Sorting descending by `total_applied_discount_amount`   - `LEAST_DEAL` - Sorting ascending by `total_applied_discount_amount`
 * @member {module:model/QualificationsOption.SortingRuleEnum} sorting_rule
 */
QualificationsOption.prototype['sorting_rule'] = undefined;





/**
 * Allowed values for the <code>expand</code> property.
 * @enum {String}
 * @readonly
 */
QualificationsOption['ExpandEnum'] = {

    /**
     * value: "redeemable"
     * @const
     */
    "redeemable": "redeemable",

    /**
     * value: "category"
     * @const
     */
    "category": "category",

    /**
     * value: "validation_rules"
     * @const
     */
    "validation_rules": "validation_rules"
};


/**
 * Allowed values for the <code>sorting_rule</code> property.
 * @enum {String}
 * @readonly
 */
QualificationsOption['SortingRuleEnum'] = {

    /**
     * value: "BEST_DEAL"
     * @const
     */
    "BEST_DEAL": "BEST_DEAL",

    /**
     * value: "LEAST_DEAL"
     * @const
     */
    "LEAST_DEAL": "LEAST_DEAL",

    /**
     * value: "DEFAULT"
     * @const
     */
    "DEFAULT": "DEFAULT"
};



export default QualificationsOption;

