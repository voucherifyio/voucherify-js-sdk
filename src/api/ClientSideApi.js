/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ClientEventsCreateRequestBody from '../model/ClientEventsCreateRequestBody';
import ClientEventsCreateResponseBody from '../model/ClientEventsCreateResponseBody';
import ClientPromotionsTiersListResponseBody from '../model/ClientPromotionsTiersListResponseBody';
import ClientQualificationsCheckEligibilityRequestBody from '../model/ClientQualificationsCheckEligibilityRequestBody';
import ClientQualificationsCheckEligibilityResponseBody from '../model/ClientQualificationsCheckEligibilityResponseBody';
import ClientRedemptionsRedeemRequestBody from '../model/ClientRedemptionsRedeemRequestBody';
import ClientRedemptionsRedeemResponseBody from '../model/ClientRedemptionsRedeemResponseBody';
import ClientValidationsValidateRequestBody from '../model/ClientValidationsValidateRequestBody';
import ClientValidationsValidateResponseBody from '../model/ClientValidationsValidateResponseBody';
import ParameterOrderListPromotionTiersClientSide from '../model/ParameterOrderListPromotionTiersClientSide';

/**
* ClientSide service.
* @module api/ClientSideApi
* @version v2018-08-01
*/
export default class ClientSideApi {

    /**
    * Constructs a new ClientSideApi. 
    * @alias module:api/ClientSideApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the checkEligibilityClientSide operation.
     * @callback module:api/ClientSideApi~checkEligibilityClientSideCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ClientQualificationsCheckEligibilityResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Check Eligibility (client-side)
     * Generate a list of redeemables that are applicable in the context of the customer and order. The new qualifications method is an improved version of [Campaign Qualifications](/api-reference/campaigns/examine-campaign-qualification), [Voucher Qualifications](/api-reference/vouchers/examine-voucher-qualification) API requests. The new qualification method introduces the following improvements: - Qualification results are returned faster - No limit on the number of returned redeemables - Introduces new qualification scenarios, not available in the previous version  üëç Scenario Guide  Read our dedicated guide to learn about some use cases this endpoint can cover [here](/guides/checking-eligibility). # Paging  The Voucherify Qualifications API request will return to you all of the redeemables available for the customer in batches of up to 50 redeemables per page. To get the next batch of redeemables, you need to use the starting_after cursor. To process of paging the redeemables works in the following manner: - You send the first API request for Qualifications without the starting_after parameter. - The response will contain a parameter named has_more. If the parameters value is set to true, then more redeemables are available. - Get the value of the created_at parameter of the last returned redeemable. The value of this parameter will be used as a cursor to retrieve the next page of redeemables. - Send another API request for Qualification with the starting_after parameter set to the value taken from the created_at parameter from the last returned redeemable. - Voucherify will return the next page of redeemables. - If the has_more parameter is set to true, apply steps 3-5 to get the next page of redeemables.
     * @param {{
        clientQualificationsCheckEligibilityRequestBody?: module:model/ClientQualificationsCheckEligibilityRequestBody
     }} opts Parameters
     * @param {module:api/ClientSideApi~checkEligibilityClientSideCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ClientQualificationsCheckEligibilityResponseBody}
     */
    checkEligibilityClientSide(opts, callback) {
      opts = opts || {};
      let postBody = opts['clientQualificationsCheckEligibilityRequestBody'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Client-Application-Id', 'X-Voucherify-OAuth', 'X-Client-Token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ClientQualificationsCheckEligibilityResponseBody;
      return this.apiClient.callApi(
        '/client/v1/qualifications', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listPromotionTiersClientSide operation.
     * @callback module:api/ClientSideApi~listPromotionTiersClientSideCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ClientPromotionsTiersListResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Promotion Tiers (client-side)
     * This method enables you to list promotion tiers.
     * @param {String} origin Indicates the origin (scheme, hostname, and port).
     * @param {{
        origin: String
     
        isAvailable?: Boolean
     
        limit?: Number
     
        page?: Number
     
        order?: module:model/ParameterOrderListPromotionTiersClientSide
     }} opts Parameters
     * @param {module:api/ClientSideApi~listPromotionTiersClientSideCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ClientPromotionsTiersListResponseBody}
     */
    listPromotionTiersClientSide(origin, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'origin' is set
      if (origin === undefined || origin === null) {
        throw new Error("Missing the required parameter 'origin' when calling listPromotionTiersClientSide");
      }

      let pathParams = {
      };
      let queryParams = {
        'is_available': opts['isAvailable'],
        'limit': opts['limit'],
        'page': opts['page'],
        'order': opts['order']
      };
      let headerParams = {
        'origin': origin
      };
      let formParams = {
      };

      let authNames = ['X-Client-Application-Id', 'X-Voucherify-OAuth', 'X-Client-Token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ClientPromotionsTiersListResponseBody;
      return this.apiClient.callApi(
        '/client/v1/promotions/tiers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the redeemStackedDiscountsClientSide operation.
     * @callback module:api/ClientSideApi~redeemStackedDiscountsClientSideCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ClientRedemptionsRedeemResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Redeem Stackable Discounts (client-side)
     * This method is accessible through public keys which you can use in client side requests coming from mobile and web browser applications. # How API returns calculated discounts and order amounts in the response In the table below, you can see the logic the API follows to calculate discounts and amounts:    üìò Rollbacks  You cant roll back a child redemption. When you call rollback on a stacked redemption, all child redemptions will be rolled back. You need to refer to a parent redemption ID in your [rollback request](/api-reference/redemptions/rollback-stackable-redemptions).
     * @param {String} origin Indicates the origin (scheme, hostname, and port).
     * @param {{
        origin: String
     
        clientRedemptionsRedeemRequestBody?: module:model/ClientRedemptionsRedeemRequestBody
     }} opts Parameters
     * @param {module:api/ClientSideApi~redeemStackedDiscountsClientSideCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ClientRedemptionsRedeemResponseBody}
     */
    redeemStackedDiscountsClientSide(origin, opts, callback) {
      opts = opts || {};
      let postBody = opts['clientRedemptionsRedeemRequestBody'];
      // verify the required parameter 'origin' is set
      if (origin === undefined || origin === null) {
        throw new Error("Missing the required parameter 'origin' when calling redeemStackedDiscountsClientSide");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'origin': origin
      };
      let formParams = {
      };

      let authNames = ['X-Client-Application-Id', 'X-Voucherify-OAuth', 'X-Client-Token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ClientRedemptionsRedeemResponseBody;
      return this.apiClient.callApi(
        '/client/v1/redemptions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the trackCustomEventClientSide operation.
     * @callback module:api/ClientSideApi~trackCustomEventClientSideCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ClientEventsCreateResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Track Custom Event (client-side)
     * To track a custom event, you create an event object.   The event object must be linked to the customer who performs the action. If a customer doesnt exist in Voucherify, the customer will be created.
     * @param {String} origin Indicates the origin (scheme, hostname, and port).
     * @param {{
        origin: String
     
        clientEventsCreateRequestBody?: module:model/ClientEventsCreateRequestBody
     }} opts Parameters
     * @param {module:api/ClientSideApi~trackCustomEventClientSideCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ClientEventsCreateResponseBody}
     */
    trackCustomEventClientSide(origin, opts, callback) {
      opts = opts || {};
      let postBody = opts['clientEventsCreateRequestBody'];
      // verify the required parameter 'origin' is set
      if (origin === undefined || origin === null) {
        throw new Error("Missing the required parameter 'origin' when calling trackCustomEventClientSide");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'origin': origin
      };
      let formParams = {
      };

      let authNames = ['X-Client-Application-Id', 'X-Voucherify-OAuth', 'X-Client-Token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ClientEventsCreateResponseBody;
      return this.apiClient.callApi(
        '/client/v1/events', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the validateStackedDiscountsClientSide operation.
     * @callback module:api/ClientSideApi~validateStackedDiscountsClientSideCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ClientValidationsValidateResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Validate Stackable Discounts (client-side)
     * Verify redeemables provided in the request. This method is accessible through public keys which you can use in client side requests coming from mobile and web browser applications.
     * @param {String} origin Indicates the origin (scheme, hostname, and port).
     * @param {{
        origin: String
     
        clientValidationsValidateRequestBody?: module:model/ClientValidationsValidateRequestBody
     }} opts Parameters
     * @param {module:api/ClientSideApi~validateStackedDiscountsClientSideCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ClientValidationsValidateResponseBody}
     */
    validateStackedDiscountsClientSide(origin, opts, callback) {
      opts = opts || {};
      let postBody = opts['clientValidationsValidateRequestBody'];
      // verify the required parameter 'origin' is set
      if (origin === undefined || origin === null) {
        throw new Error("Missing the required parameter 'origin' when calling validateStackedDiscountsClientSide");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'origin': origin
      };
      let formParams = {
      };

      let authNames = ['X-Client-Application-Id', 'X-Voucherify-OAuth', 'X-Client-Token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ClientValidationsValidateResponseBody;
      return this.apiClient.callApi(
        '/client/v1/validations', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
