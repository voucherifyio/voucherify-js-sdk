/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ParameterOrderListValidationRuleAssignments from '../model/ParameterOrderListValidationRuleAssignments';
import ParameterOrderListValidationRules from '../model/ParameterOrderListValidationRules';
import ValidationRulesAssignmentsCreateRequestBody from '../model/ValidationRulesAssignmentsCreateRequestBody';
import ValidationRulesAssignmentsCreateResponseBody from '../model/ValidationRulesAssignmentsCreateResponseBody';
import ValidationRulesAssignmentsListResponseBody from '../model/ValidationRulesAssignmentsListResponseBody';
import ValidationRulesCreateRequestBody from '../model/ValidationRulesCreateRequestBody';
import ValidationRulesCreateResponseBody from '../model/ValidationRulesCreateResponseBody';
import ValidationRulesGetResponseBody from '../model/ValidationRulesGetResponseBody';
import ValidationRulesListResponseBody from '../model/ValidationRulesListResponseBody';
import ValidationRulesUpdateRequestBody from '../model/ValidationRulesUpdateRequestBody';
import ValidationRulesUpdateResponseBody from '../model/ValidationRulesUpdateResponseBody';

/**
* ValidationRules service.
* @module api/ValidationRulesApi
* @version v2018-08-01
*/
export default class ValidationRulesApi {

    /**
    * Constructs a new ValidationRulesApi. 
    * @alias module:api/ValidationRulesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createValidationRuleAssignment operation.
     * @callback module:api/ValidationRulesApi~createValidationRuleAssignmentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ValidationRulesAssignmentsCreateResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Validation Rules Assignments
     * Assign validation rule to either one of the following objects: voucher, campaign, promotion tier, earning rule, reward, distribution.
     * @param {String} validationRuleId Unique validation rule ID.
     * @param {{
        force?: Boolean,
        validationRulesAssignmentsCreateRequestBody?: module:model/ValidationRulesAssignmentsCreateRequestBody,
     }} [opts] Optional parameters
     * @param {module:api/ValidationRulesApi~createValidationRuleAssignmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ValidationRulesAssignmentsCreateResponseBody}
     */
    createValidationRuleAssignment(validationRuleId, opts, callback) {
      opts = opts || {};
      let postBody = opts['validationRulesAssignmentsCreateRequestBody'];
      // verify the required parameter 'validationRuleId' is set
      if (validationRuleId === undefined || validationRuleId === null) {
        throw new Error("Missing the required parameter 'validationRuleId' when calling createValidationRuleAssignment");
      }

      let pathParams = {
        'validationRuleId': validationRuleId
      };
      let queryParams = {
        'force': opts['force']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ValidationRulesAssignmentsCreateResponseBody;
      return this.apiClient.callApi(
        '/v1/validation-rules/{validationRuleId}/assignments', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createValidationRules operation.
     * @callback module:api/ValidationRulesApi~createValidationRulesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ValidationRulesCreateResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Validation Rules
     * Create a validation rule.  ðŸš§ Managing validation rules  It is recommended to [create or update validation rules](https://support.voucherify.io/article/148-how-to-build-a-rule) in the Voucherify dashboard. The rule builder in the dashboard helps configuring the desired conditions in a convenient way. The API should not be used as a preferable way to create and manage validation rules.
     * @param {{
        validationRulesCreateRequestBody?: module:model/ValidationRulesCreateRequestBody,
     }} [opts] Optional parameters
     * @param {module:api/ValidationRulesApi~createValidationRulesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ValidationRulesCreateResponseBody}
     */
    createValidationRules(opts, callback) {
      opts = opts || {};
      let postBody = opts['validationRulesCreateRequestBody'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ValidationRulesCreateResponseBody;
      return this.apiClient.callApi(
        '/v1/validation-rules', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteValidationRuleAssignment operation.
     * @callback module:api/ValidationRulesApi~deleteValidationRuleAssignmentCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Validation Rule Assignment
     * This method deletes a validation rule assignment.
     * @param {String} validationRuleId A unique validation rule ID.
     * @param {String} assignmentId A unique validation rule assignment ID.
     * @param {module:api/ValidationRulesApi~deleteValidationRuleAssignmentCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteValidationRuleAssignment(validationRuleId, assignmentId, callback) {
      let postBody = null;
      // verify the required parameter 'validationRuleId' is set
      if (validationRuleId === undefined || validationRuleId === null) {
        throw new Error("Missing the required parameter 'validationRuleId' when calling deleteValidationRuleAssignment");
      }
      // verify the required parameter 'assignmentId' is set
      if (assignmentId === undefined || assignmentId === null) {
        throw new Error("Missing the required parameter 'assignmentId' when calling deleteValidationRuleAssignment");
      }

      let pathParams = {
        'validationRuleId': validationRuleId,
        'assignmentId': assignmentId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/validation-rules/{validationRuleId}/assignments/{assignmentId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteValidationRules operation.
     * @callback module:api/ValidationRulesApi~deleteValidationRulesCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Validation Rule
     * This method deletes a validation rule.
     * @param {String} validationRuleId A unique validation rule ID.
     * @param {module:api/ValidationRulesApi~deleteValidationRulesCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteValidationRules(validationRuleId, callback) {
      let postBody = null;
      // verify the required parameter 'validationRuleId' is set
      if (validationRuleId === undefined || validationRuleId === null) {
        throw new Error("Missing the required parameter 'validationRuleId' when calling deleteValidationRules");
      }

      let pathParams = {
        'validationRuleId': validationRuleId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/validation-rules/{validationRuleId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getValidationRule operation.
     * @callback module:api/ValidationRulesApi~getValidationRuleCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ValidationRulesGetResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Validation Rule
     * Retrieve the details of a validation rule.
     * @param {String} validationRuleId A unique validation rule ID.
     * @param {module:api/ValidationRulesApi~getValidationRuleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ValidationRulesGetResponseBody}
     */
    getValidationRule(validationRuleId, callback) {
      let postBody = null;
      // verify the required parameter 'validationRuleId' is set
      if (validationRuleId === undefined || validationRuleId === null) {
        throw new Error("Missing the required parameter 'validationRuleId' when calling getValidationRule");
      }

      let pathParams = {
        'validationRuleId': validationRuleId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ValidationRulesGetResponseBody;
      return this.apiClient.callApi(
        '/v1/validation-rules/{validationRuleId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listValidationRuleAssignments operation.
     * @callback module:api/ValidationRulesApi~listValidationRuleAssignmentsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ValidationRulesAssignmentsListResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Validation Rule Assignments
     * Retrieve validation rule assignments for a specific validation rule.
     * @param {String} validationRuleId Unique validation rule ID.
     * @param {{
        limit?: Number,
        page?: Number,
        order?: module:model/ParameterOrderListValidationRuleAssignments,
     }} [opts] Optional parameters
     * @param {module:api/ValidationRulesApi~listValidationRuleAssignmentsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ValidationRulesAssignmentsListResponseBody}
     */
    listValidationRuleAssignments(validationRuleId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'validationRuleId' is set
      if (validationRuleId === undefined || validationRuleId === null) {
        throw new Error("Missing the required parameter 'validationRuleId' when calling listValidationRuleAssignments");
      }

      let pathParams = {
        'validationRuleId': validationRuleId
      };
      let queryParams = {
        'limit': opts['limit'],
        'page': opts['page'],
        'order': opts['order']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ValidationRulesAssignmentsListResponseBody;
      return this.apiClient.callApi(
        '/v1/validation-rules/{validationRuleId}/assignments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listValidationRules operation.
     * @callback module:api/ValidationRulesApi~listValidationRulesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ValidationRulesListResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Validation Rules
     * Retrieve validation rules.
     * @param {{
        limit?: Number,
        page?: Number,
        order?: module:model/ParameterOrderListValidationRules,
        startDate?: Date,
        endDate?: Date,
     }} [opts] Optional parameters
     * @param {module:api/ValidationRulesApi~listValidationRulesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ValidationRulesListResponseBody}
     */
    listValidationRules(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit'],
        'page': opts['page'],
        'order': opts['order'],
        'start_date': opts['startDate'],
        'end_date': opts['endDate']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ValidationRulesListResponseBody;
      return this.apiClient.callApi(
        '/v1/validation-rules', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listValidationRulesAssignments operation.
     * @callback module:api/ValidationRulesApi~listValidationRulesAssignmentsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ValidationRulesAssignmentsListResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Validation Rules' Assignment(s)
     * List all validation rules assignments or filter the results using the related object ID or the validation rule ID query parameters.
     * @param {{
        relatedObjectId?: String,
        rule?: String,
        page?: Number,
        limit?: Number,
        order?: String,
     }} [opts] Optional parameters
     * @param {module:api/ValidationRulesApi~listValidationRulesAssignmentsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ValidationRulesAssignmentsListResponseBody}
     */
    listValidationRulesAssignments(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'related_object_id': opts['relatedObjectId'],
        'rule': opts['rule'],
        'page': opts['page'],
        'limit': opts['limit'],
        'order': opts['order']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ValidationRulesAssignmentsListResponseBody;
      return this.apiClient.callApi(
        '/v1/validation-rules-assignments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateValidationRule operation.
     * @callback module:api/ValidationRulesApi~updateValidationRuleCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ValidationRulesUpdateResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Validation Rule
     * Update validation rule parameters.  ðŸš§ Managing validation rules  It is recommended to [create or update validation rules](https://support.voucherify.io/article/148-how-to-build-a-rule) in the Voucherify dashboard. The rule builder in the dashboard helps configuring the desired conditions in a convenient way. The API should not be used as a preferable way to create and manage validation rules.
     * @param {String} validationRuleId A unique validation rule ID.
     * @param {{
        validationRulesUpdateRequestBody?: module:model/ValidationRulesUpdateRequestBody,
     }} [opts] Optional parameters
     * @param {module:api/ValidationRulesApi~updateValidationRuleCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ValidationRulesUpdateResponseBody}
     */
    updateValidationRule(validationRuleId, opts, callback) {
      opts = opts || {};
      let postBody = opts['validationRulesUpdateRequestBody'];
      // verify the required parameter 'validationRuleId' is set
      if (validationRuleId === undefined || validationRuleId === null) {
        throw new Error("Missing the required parameter 'validationRuleId' when calling updateValidationRule");
      }

      let pathParams = {
        'validationRuleId': validationRuleId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ValidationRulesUpdateResponseBody;
      return this.apiClient.callApi(
        '/v1/validation-rules/{validationRuleId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
