/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ParameterCreatedBeforeAfter from '../model/ParameterCreatedBeforeAfter';
import ParameterOrderListAllPromotionStacks from '../model/ParameterOrderListAllPromotionStacks';
import ParameterOrderListPromotionTiers from '../model/ParameterOrderListPromotionTiers';
import ParameterUpdatedBeforeAfter from '../model/ParameterUpdatedBeforeAfter';
import PromotionsStacksCreateRequestBody from '../model/PromotionsStacksCreateRequestBody';
import PromotionsStacksCreateResponseBody from '../model/PromotionsStacksCreateResponseBody';
import PromotionsStacksGetResponseBody from '../model/PromotionsStacksGetResponseBody';
import PromotionsStacksListResponseBody from '../model/PromotionsStacksListResponseBody';
import PromotionsStacksUpdateRequestBody from '../model/PromotionsStacksUpdateRequestBody';
import PromotionsStacksUpdateResponseBody from '../model/PromotionsStacksUpdateResponseBody';
import PromotionsTiersCreateRequestBody from '../model/PromotionsTiersCreateRequestBody';
import PromotionsTiersCreateResponseBody from '../model/PromotionsTiersCreateResponseBody';
import PromotionsTiersDisableResponseBody from '../model/PromotionsTiersDisableResponseBody';
import PromotionsTiersEnableResponseBody from '../model/PromotionsTiersEnableResponseBody';
import PromotionsTiersGetResponseBody from '../model/PromotionsTiersGetResponseBody';
import PromotionsTiersListResponseBody from '../model/PromotionsTiersListResponseBody';
import PromotionsTiersUpdateRequestBody from '../model/PromotionsTiersUpdateRequestBody';
import PromotionsTiersUpdateResponseBody from '../model/PromotionsTiersUpdateResponseBody';

/**
* Promotions service.
* @module api/PromotionsApi
* @version v2018-08-01
*/
export default class PromotionsApi {

    /**
    * Constructs a new PromotionsApi. 
    * @alias module:api/PromotionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the addPromotionTierToCampaign operation.
     * @callback module:api/PromotionsApi~addPromotionTierToCampaignCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PromotionsTiersCreateResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add Promotion Tier to Campaign
     * This method allows you to add a new promotion tier to an existing campaign. The tier hierarchy will be set as the next consequtive integer following the lowest ranking tier.
     * @param {String} campaignId Unique campaign ID assigned by Voucherify.
     * @param {{
        campaignId: String
     
        promotionsTiersCreateRequestBody?: module:model/PromotionsTiersCreateRequestBody
     }} opts Parameters
     * @param {module:api/PromotionsApi~addPromotionTierToCampaignCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PromotionsTiersCreateResponseBody}
     */
    addPromotionTierToCampaign(campaignId, opts, callback) {
      opts = opts || {};
      let postBody = opts['promotionsTiersCreateRequestBody'];
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling addPromotionTierToCampaign");
      }

      let pathParams = {
        'campaignId': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PromotionsTiersCreateResponseBody;
      return this.apiClient.callApi(
        '/v1/promotions/{campaignId}/tiers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createPromotionStack operation.
     * @callback module:api/PromotionsApi~createPromotionStackCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PromotionsStacksCreateResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Promotion Stack
     * This method creates one promotion stack. The sequence of promotion tier IDs will determine the promotion stacking order.
     * @param {String} campaignId Unique campaign ID.
     * @param {{
        campaignId: String
     
        promotionsStacksCreateRequestBody?: module:model/PromotionsStacksCreateRequestBody
     }} opts Parameters
     * @param {module:api/PromotionsApi~createPromotionStackCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PromotionsStacksCreateResponseBody}
     */
    createPromotionStack(campaignId, opts, callback) {
      opts = opts || {};
      let postBody = opts['promotionsStacksCreateRequestBody'];
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling createPromotionStack");
      }

      let pathParams = {
        'campaignId': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PromotionsStacksCreateResponseBody;
      return this.apiClient.callApi(
        '/v1/promotions/{campaignId}/stacks', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deletePromotionStack operation.
     * @callback module:api/PromotionsApi~deletePromotionStackCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Promotion Stack
     * This method deletes a promotion stack.
     * @param {String} campaignId ID of the promotion campaign. You can either pass the campaign ID, which was assigned by Voucherify, or the name of the campaign as the path parameter value, e.g., Loyalty Campaign. 
     * @param {String} stackId Promotion stack ID.
     * @param {module:api/PromotionsApi~deletePromotionStackCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deletePromotionStack(campaignId, stackId, callback) {
      let postBody = null;
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling deletePromotionStack");
      }
      // verify the required parameter 'stackId' is set
      if (stackId === undefined || stackId === null) {
        throw new Error("Missing the required parameter 'stackId' when calling deletePromotionStack");
      }

      let pathParams = {
        'campaignId': campaignId,
        'stackId': stackId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/promotions/{campaignId}/stacks/{stackId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deletePromotionTier operation.
     * @callback module:api/PromotionsApi~deletePromotionTierCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Promotion Tier
     * This method deletes a promotion tier.
     * @param {String} promotionTierId Unique promotion tier ID.
     * @param {module:api/PromotionsApi~deletePromotionTierCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deletePromotionTier(promotionTierId, callback) {
      let postBody = null;
      // verify the required parameter 'promotionTierId' is set
      if (promotionTierId === undefined || promotionTierId === null) {
        throw new Error("Missing the required parameter 'promotionTierId' when calling deletePromotionTier");
      }

      let pathParams = {
        'promotionTierId': promotionTierId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/promotions/tiers/{promotionTierId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the disablePromotionTier operation.
     * @callback module:api/PromotionsApi~disablePromotionTierCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PromotionsTiersDisableResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Disable Promotion Tier
     * This method disables a promotion tier, i.e. makes the active parameter   false.
     * @param {String} promotionTierId Unique promotion tier ID.
     * @param {module:api/PromotionsApi~disablePromotionTierCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PromotionsTiersDisableResponseBody}
     */
    disablePromotionTier(promotionTierId, callback) {
      let postBody = null;
      // verify the required parameter 'promotionTierId' is set
      if (promotionTierId === undefined || promotionTierId === null) {
        throw new Error("Missing the required parameter 'promotionTierId' when calling disablePromotionTier");
      }

      let pathParams = {
        'promotionTierId': promotionTierId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PromotionsTiersDisableResponseBody;
      return this.apiClient.callApi(
        '/v1/promotions/tiers/{promotionTierId}/disable', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the enablePromotionTier operation.
     * @callback module:api/PromotionsApi~enablePromotionTierCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PromotionsTiersEnableResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enable Promotion Tier
     * This method enables a promotion tier, i.e. makes the active parameter   true.
     * @param {String} promotionTierId Unique promotion tier ID.
     * @param {module:api/PromotionsApi~enablePromotionTierCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PromotionsTiersEnableResponseBody}
     */
    enablePromotionTier(promotionTierId, callback) {
      let postBody = null;
      // verify the required parameter 'promotionTierId' is set
      if (promotionTierId === undefined || promotionTierId === null) {
        throw new Error("Missing the required parameter 'promotionTierId' when calling enablePromotionTier");
      }

      let pathParams = {
        'promotionTierId': promotionTierId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PromotionsTiersEnableResponseBody;
      return this.apiClient.callApi(
        '/v1/promotions/tiers/{promotionTierId}/enable', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPromotionStack operation.
     * @callback module:api/PromotionsApi~getPromotionStackCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PromotionsStacksGetResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Promotion Stack
     * This method returns the details of a promotion stack, including the promotion tiers grouped within the stack.
     * @param {String} campaignId ID of the promotion campaign. You can either pass the campaign ID, which was assigned by Voucherify, or the name of the campaign as the path parameter value, e.g., Loyalty Campaign. 
     * @param {String} stackId Promotion stack ID.
     * @param {module:api/PromotionsApi~getPromotionStackCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PromotionsStacksGetResponseBody}
     */
    getPromotionStack(campaignId, stackId, callback) {
      let postBody = null;
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling getPromotionStack");
      }
      // verify the required parameter 'stackId' is set
      if (stackId === undefined || stackId === null) {
        throw new Error("Missing the required parameter 'stackId' when calling getPromotionStack");
      }

      let pathParams = {
        'campaignId': campaignId,
        'stackId': stackId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PromotionsStacksGetResponseBody;
      return this.apiClient.callApi(
        '/v1/promotions/{campaignId}/stacks/{stackId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPromotionTier operation.
     * @callback module:api/PromotionsApi~getPromotionTierCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PromotionsTiersGetResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Promotion Tier
     * This method enables you to retrieve a specific promotion tier.
     * @param {String} promotionTierId Unique promotion tier ID.
     * @param {module:api/PromotionsApi~getPromotionTierCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PromotionsTiersGetResponseBody}
     */
    getPromotionTier(promotionTierId, callback) {
      let postBody = null;
      // verify the required parameter 'promotionTierId' is set
      if (promotionTierId === undefined || promotionTierId === null) {
        throw new Error("Missing the required parameter 'promotionTierId' when calling getPromotionTier");
      }

      let pathParams = {
        'promotionTierId': promotionTierId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PromotionsTiersGetResponseBody;
      return this.apiClient.callApi(
        '/v1/promotions/tiers/{promotionTierId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listAllPromotionStacks operation.
     * @callback module:api/PromotionsApi~listAllPromotionStacksCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PromotionsStacksListResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Promotion Stacks
     * This method enables you to list promotion stacks irrespective of the campaign they are associated with.  You can use filters in the query parameters to specify the stacks to be returned in the response. # Advanced filters for fetching promotion stacks  
     * @param {{
        limit?: Number
     
        page?: Number
     
        order?: module:model/ParameterOrderListAllPromotionStacks
     
        createdAt?: module:model/ParameterCreatedBeforeAfter
     
        updatedAt?: module:model/ParameterUpdatedBeforeAfter
     }} opts Parameters
     * @param {module:api/PromotionsApi~listAllPromotionStacksCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PromotionsStacksListResponseBody}
     */
    listAllPromotionStacks(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit'],
        'page': opts['page'],
        'order': opts['order'],
        'created_at': opts['createdAt'],
        'updated_at': opts['updatedAt']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PromotionsStacksListResponseBody;
      return this.apiClient.callApi(
        '/v1/promotions/stacks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listPromotionStacksInCampaign operation.
     * @callback module:api/PromotionsApi~listPromotionStacksInCampaignCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PromotionsStacksListResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Promotion Stacks in Campaign
     * This method enables you to list promotion stacks from a specified campaign.
     * @param {String} campaignId Unique campaign ID.
     * @param {module:api/PromotionsApi~listPromotionStacksInCampaignCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PromotionsStacksListResponseBody}
     */
    listPromotionStacksInCampaign(campaignId, callback) {
      let postBody = null;
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling listPromotionStacksInCampaign");
      }

      let pathParams = {
        'campaignId': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PromotionsStacksListResponseBody;
      return this.apiClient.callApi(
        '/v1/promotions/{campaignId}/stacks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listPromotionTiers operation.
     * @callback module:api/PromotionsApi~listPromotionTiersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PromotionsTiersListResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Promotion Tiers
     * This method enables you to list promotion tiers.
     * @param {{
        isAvailable?: Boolean
     
        limit?: Number
     
        page?: Number
     
        order?: module:model/ParameterOrderListPromotionTiers
     }} opts Parameters
     * @param {module:api/PromotionsApi~listPromotionTiersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PromotionsTiersListResponseBody}
     */
    listPromotionTiers(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'is_available': opts['isAvailable'],
        'limit': opts['limit'],
        'page': opts['page'],
        'order': opts['order']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PromotionsTiersListResponseBody;
      return this.apiClient.callApi(
        '/v1/promotions/tiers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listPromotionTiersFromCampaign operation.
     * @callback module:api/PromotionsApi~listPromotionTiersFromCampaignCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PromotionsTiersListResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Promotion Tiers from Campaign
     * This method enables you to list promotion tiers from a specified campaign.
     * @param {String} campaignId Unique campaign ID assigned by Voucherify.
     * @param {module:api/PromotionsApi~listPromotionTiersFromCampaignCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PromotionsTiersListResponseBody}
     */
    listPromotionTiersFromCampaign(campaignId, callback) {
      let postBody = null;
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling listPromotionTiersFromCampaign");
      }

      let pathParams = {
        'campaignId': campaignId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PromotionsTiersListResponseBody;
      return this.apiClient.callApi(
        '/v1/promotions/{campaignId}/tiers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updatePromotionStack operation.
     * @callback module:api/PromotionsApi~updatePromotionStackCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PromotionsStacksUpdateResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Promotion Stack
     * This methods allows for editing an existing stack.
     * @param {String} campaignId ID of the promotion campaign. You can either pass the campaign ID, which was assigned by Voucherify, or the name of the campaign as the path parameter value, e.g., Loyalty Campaign. 
     * @param {String} stackId Promotion stack ID.
     * @param {{
        campaignId: String
     
        stackId: String
     
        promotionsStacksUpdateRequestBody?: module:model/PromotionsStacksUpdateRequestBody
     }} opts Parameters
     * @param {module:api/PromotionsApi~updatePromotionStackCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PromotionsStacksUpdateResponseBody}
     */
    updatePromotionStack(campaignId, stackId, opts, callback) {
      opts = opts || {};
      let postBody = opts['promotionsStacksUpdateRequestBody'];
      // verify the required parameter 'campaignId' is set
      if (campaignId === undefined || campaignId === null) {
        throw new Error("Missing the required parameter 'campaignId' when calling updatePromotionStack");
      }
      // verify the required parameter 'stackId' is set
      if (stackId === undefined || stackId === null) {
        throw new Error("Missing the required parameter 'stackId' when calling updatePromotionStack");
      }

      let pathParams = {
        'campaignId': campaignId,
        'stackId': stackId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PromotionsStacksUpdateResponseBody;
      return this.apiClient.callApi(
        '/v1/promotions/{campaignId}/stacks/{stackId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updatePromotionTier operation.
     * @callback module:api/PromotionsApi~updatePromotionTierCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PromotionsTiersUpdateResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Promotion Tier
     * This method updates a promotion tier.
     * @param {String} promotionTierId Unique promotion tier ID.
     * @param {{
        promotionTierId: String
     
        promotionsTiersUpdateRequestBody?: module:model/PromotionsTiersUpdateRequestBody
     }} opts Parameters
     * @param {module:api/PromotionsApi~updatePromotionTierCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PromotionsTiersUpdateResponseBody}
     */
    updatePromotionTier(promotionTierId, opts, callback) {
      opts = opts || {};
      let postBody = opts['promotionsTiersUpdateRequestBody'];
      // verify the required parameter 'promotionTierId' is set
      if (promotionTierId === undefined || promotionTierId === null) {
        throw new Error("Missing the required parameter 'promotionTierId' when calling updatePromotionTier");
      }

      let pathParams = {
        'promotionTierId': promotionTierId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PromotionsTiersUpdateResponseBody;
      return this.apiClient.callApi(
        '/v1/promotions/tiers/{promotionTierId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
