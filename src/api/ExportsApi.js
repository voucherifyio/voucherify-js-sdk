/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ExportsCreateRequestBody from '../model/ExportsCreateRequestBody';
import ExportsCreateResponseBody from '../model/ExportsCreateResponseBody';
import ExportsGetResponseBody from '../model/ExportsGetResponseBody';
import ExportsListResponseBody from '../model/ExportsListResponseBody';
import ParameterOrderListExports from '../model/ParameterOrderListExports';

/**
* Exports service.
* @module api/ExportsApi
* @version v2018-08-01
*/
export default class ExportsApi {

    /**
    * Constructs a new ExportsApi. 
    * @alias module:api/ExportsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createExport operation.
     * @callback module:api/ExportsApi~createExportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExportsCreateResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Export
     * Create export object. The export can be any of the following types: voucher, redemption, publication, customer, order, points_expiration, voucher_transactions, product, or sku.   # Defaults If you only specify the object type in the request body without specifying the fields, the API will return the following fields per export object:    ðŸ“˜ Date and time in the export API  The exported date and times are always provided in the UTC time zone. # Fetching particular data sets Using the parameters body parameter, you can narrow down which fields to export and how to filter the results. The fields are an array of strings containing the data that you would like to export. These fields define the headers in the CSV file. The array can be a combination of any of the following available fields: # Orders     # Vouchers        # Publications   # Redemptions    # Customers       # Points Expirations    # Gift Card Transactions    # Loyalty Card Transactions   
     * @param {{
        exportsCreateRequestBody?: module:model/ExportsCreateRequestBody,
     }} [opts] Optional parameters
     * @param {module:api/ExportsApi~createExportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExportsCreateResponseBody}
     */
    createExport(opts, callback) {
      opts = opts || {};
      let postBody = opts['exportsCreateRequestBody'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ExportsCreateResponseBody;
      return this.apiClient.callApi(
        '/v1/exports', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteExport operation.
     * @callback module:api/ExportsApi~deleteExportCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Export
     * This method deletes a previously created export object.
     * @param {String} exportId Unique export object ID of previously created export. This object can be a: voucher, redemption, publication, customer, order, points_expiration, or voucher_transactions.
     * @param {module:api/ExportsApi~deleteExportCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteExport(exportId, callback) {
      let postBody = null;
      // verify the required parameter 'exportId' is set
      if (exportId === undefined || exportId === null) {
        throw new Error("Missing the required parameter 'exportId' when calling deleteExport");
      }

      let pathParams = {
        'exportId': exportId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/exports/{exportId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the downloadExport operation.
     * @callback module:api/ExportsApi~downloadExportCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Download Export
     * Download the contents of the exported CSV file.   ðŸ“˜ Important notes  **Base URL:**   - https://download.voucherify.io (Europe)   - https://us1.download.voucherify.io (US)   - https://as1.download.voucherify.io (Asia)   **Token:** Can be found within the result parameter of the [Get Export](/api-reference/exports/get-export) method response.
     * @param {String} exportId Unique export object ID.
     * @param {{
        token?: String,
     }} [opts] Optional parameters
     * @param {module:api/ExportsApi~downloadExportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    downloadExport(exportId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'exportId' is set
      if (exportId === undefined || exportId === null) {
        throw new Error("Missing the required parameter 'exportId' when calling downloadExport");
      }

      let pathParams = {
        'export_Id': exportId
      };
      let queryParams = {
        'token': opts['token']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = ['text/plain'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/v1/exports/{export_Id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getExport operation.
     * @callback module:api/ExportsApi~getExportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExportsGetResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Export
     * Retrieves the URL of the downloadable file, which was generated via the [Create Export](/api-reference/exports/create-export) method.
     * @param {String} exportId Unique export object ID of previously created export. This object can be a: voucher, redemption, publication, customer, order, points_expiration, or voucher_transactions.
     * @param {module:api/ExportsApi~getExportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExportsGetResponseBody}
     */
    getExport(exportId, callback) {
      let postBody = null;
      // verify the required parameter 'exportId' is set
      if (exportId === undefined || exportId === null) {
        throw new Error("Missing the required parameter 'exportId' when calling getExport");
      }

      let pathParams = {
        'exportId': exportId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ExportsGetResponseBody;
      return this.apiClient.callApi(
        '/v1/exports/{exportId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listExports operation.
     * @callback module:api/ExportsApi~listExportsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ExportsListResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Exports
     * List all exports. 
     * @param {{
        limit?: Number,
        page?: Number,
        order?: module:model/ParameterOrderListExports,
     }} [opts] Optional parameters
     * @param {module:api/ExportsApi~listExportsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ExportsListResponseBody}
     */
    listExports(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit'],
        'page': opts['page'],
        'order': opts['order']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ExportsListResponseBody;
      return this.apiClient.callApi(
        '/v1/exports', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
