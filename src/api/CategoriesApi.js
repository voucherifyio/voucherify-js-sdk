/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CategoriesCreateRequestBody from '../model/CategoriesCreateRequestBody';
import CategoriesCreateResponseBody from '../model/CategoriesCreateResponseBody';
import CategoriesGetResponseBody from '../model/CategoriesGetResponseBody';
import CategoriesListResponseBody from '../model/CategoriesListResponseBody';
import CategoriesUpdateRequestBody from '../model/CategoriesUpdateRequestBody';
import CategoriesUpdateResponseBody from '../model/CategoriesUpdateResponseBody';

/**
* Categories service.
* @module api/CategoriesApi
* @version v2018-08-01
*/
export default class CategoriesApi {

    /**
    * Constructs a new CategoriesApi. 
    * @alias module:api/CategoriesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createCategory operation.
     * @callback module:api/CategoriesApi~createCategoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CategoriesCreateResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Category
     * Create category with a specific name and hierarchy.
     * @param {Object} opts Optional parameters
     * @param {module:model/CategoriesCreateRequestBody} [categoriesCreateRequestBody] Specify the details of the category that you would like to create.
     * @param {module:api/CategoriesApi~createCategoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CategoriesCreateResponseBody}
     */
    createCategory(opts, callback) {
      opts = opts || {};
      let postBody = opts['categoriesCreateRequestBody'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CategoriesCreateResponseBody;
      return this.apiClient.callApi(
        '/v1/categories', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteCategory operation.
     * @callback module:api/CategoriesApi~deleteCategoryCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Category
     * Delete a category by the category ID.
     * @param {String} categoryId Unique category ID assigned by Voucherify.
     * @param {module:api/CategoriesApi~deleteCategoryCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteCategory(categoryId, callback) {
      let postBody = null;
      // verify the required parameter 'categoryId' is set
      if (categoryId === undefined || categoryId === null) {
        throw new Error("Missing the required parameter 'categoryId' when calling deleteCategory");
      }

      let pathParams = {
        'categoryId': categoryId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/categories/{categoryId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getCategory operation.
     * @callback module:api/CategoriesApi~getCategoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CategoriesGetResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Category
     * Retrieve a category by the category ID.
     * @param {String} categoryId Unique category ID assigned by Voucherify.
     * @param {module:api/CategoriesApi~getCategoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CategoriesGetResponseBody}
     */
    getCategory(categoryId, callback) {
      let postBody = null;
      // verify the required parameter 'categoryId' is set
      if (categoryId === undefined || categoryId === null) {
        throw new Error("Missing the required parameter 'categoryId' when calling getCategory");
      }

      let pathParams = {
        'categoryId': categoryId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CategoriesGetResponseBody;
      return this.apiClient.callApi(
        '/v1/categories/{categoryId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listCategories operation.
     * @callback module:api/CategoriesApi~listCategoriesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CategoriesListResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Categories
     * List all categories.
     * @param {module:api/CategoriesApi~listCategoriesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CategoriesListResponseBody}
     */
    listCategories(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CategoriesListResponseBody;
      return this.apiClient.callApi(
        '/v1/categories', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateCategory operation.
     * @callback module:api/CategoriesApi~updateCategoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CategoriesUpdateResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update Category
     * Update a category using the category ID.
     * @param {String} categoryId Unique category ID assigned by Voucherify.
     * @param {Object} opts Optional parameters
     * @param {module:model/CategoriesUpdateRequestBody} [categoriesUpdateRequestBody] Specify the details of the category that you would like to update.
     * @param {module:api/CategoriesApi~updateCategoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CategoriesUpdateResponseBody}
     */
    updateCategory(categoryId, opts, callback) {
      opts = opts || {};
      let postBody = opts['categoriesUpdateRequestBody'];
      // verify the required parameter 'categoryId' is set
      if (categoryId === undefined || categoryId === null) {
        throw new Error("Missing the required parameter 'categoryId' when calling updateCategory");
      }

      let pathParams = {
        'categoryId': categoryId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CategoriesUpdateResponseBody;
      return this.apiClient.callApi(
        '/v1/categories/{categoryId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
