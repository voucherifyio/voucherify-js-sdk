/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import SegmentsCreateRequestBody from '../model/SegmentsCreateRequestBody';
import SegmentsCreateResponseBody from '../model/SegmentsCreateResponseBody';
import SegmentsGetResponseBody from '../model/SegmentsGetResponseBody';

/**
* Segments service.
* @module api/SegmentsApi
* @version v2018-08-01
*/
export default class SegmentsApi {

    /**
    * Constructs a new SegmentsApi. 
    * @alias module:api/SegmentsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createSegment operation.
     * @callback module:api/SegmentsApi~createSegmentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SegmentsCreateResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Segment
     * Create a customer segment.  ðŸš§ Limit on static segments  There is a cap on the number of customers that you can assign to a static segment: **20,000**. If you would like to create a bigger segment, then you can use the unlimited auto-update or passive segment instead and use some customer metadata to build this segment.  ðŸš§ Limit on Active and Passive segments  You can create a maximum of 100 passive and active segments.
     * @param {{
        segmentsCreateRequestBody?: module:model/SegmentsCreateRequestBody
     }} opts Parameters
     * @param {module:api/SegmentsApi~createSegmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SegmentsCreateResponseBody}
     */
    createSegment(opts, callback) {
      opts = opts || {};
      let postBody = opts['segmentsCreateRequestBody'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SegmentsCreateResponseBody;
      return this.apiClient.callApi(
        '/v1/segments', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteSegment operation.
     * @callback module:api/SegmentsApi~deleteSegmentCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete Segment
     * This method deletes a customer segment.
     * @param {String} segmentId A unique customer segment ID.
     * @param {module:api/SegmentsApi~deleteSegmentCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteSegment(segmentId, callback) {
      let postBody = null;
      // verify the required parameter 'segmentId' is set
      if (segmentId === undefined || segmentId === null) {
        throw new Error("Missing the required parameter 'segmentId' when calling deleteSegment");
      }

      let pathParams = {
        'segmentId': segmentId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/v1/segments/{segmentId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSegment operation.
     * @callback module:api/SegmentsApi~getSegmentCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SegmentsGetResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Segment
     * Retrieves the segment with a given segment ID.
     * @param {String} segmentId A unique customer segment ID.
     * @param {module:api/SegmentsApi~getSegmentCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SegmentsGetResponseBody}
     */
    getSegment(segmentId, callback) {
      let postBody = null;
      // verify the required parameter 'segmentId' is set
      if (segmentId === undefined || segmentId === null) {
        throw new Error("Missing the required parameter 'segmentId' when calling getSegment");
      }

      let pathParams = {
        'segmentId': segmentId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SegmentsGetResponseBody;
      return this.apiClient.callApi(
        '/v1/segments/{segmentId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
