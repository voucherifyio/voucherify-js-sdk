/**
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ParameterCreatedBeforeAfter from '../model/ParameterCreatedBeforeAfter';
import ParameterFiltersListRedemptions from '../model/ParameterFiltersListRedemptions';
import ParameterOrderListRedemptions from '../model/ParameterOrderListRedemptions';
import RedemptionsGetResponseBody from '../model/RedemptionsGetResponseBody';
import RedemptionsListResponseBody from '../model/RedemptionsListResponseBody';
import RedemptionsRedeemRequestBody from '../model/RedemptionsRedeemRequestBody';
import RedemptionsRedeemResponseBody from '../model/RedemptionsRedeemResponseBody';
import RedemptionsRollbackCreateRequestBody from '../model/RedemptionsRollbackCreateRequestBody';
import RedemptionsRollbackCreateResponseBody from '../model/RedemptionsRollbackCreateResponseBody';
import RedemptionsRollbacksCreateRequestBody from '../model/RedemptionsRollbacksCreateRequestBody';
import RedemptionsRollbacksCreateResponseBody from '../model/RedemptionsRollbacksCreateResponseBody';
import VouchersRedemptionGetResponseBody from '../model/VouchersRedemptionGetResponseBody';

/**
* Redemptions service.
* @module api/RedemptionsApi
* @version v2018-08-01
*/
export default class RedemptionsApi {

    /**
    * Constructs a new RedemptionsApi. 
    * @alias module:api/RedemptionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getRedemption operation.
     * @callback module:api/RedemptionsApi~getRedemptionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RedemptionsGetResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Redemption
     * Return a redemption or redemption rollback object. This object can either be a successfull or failed redemption or redemption rollback.
     * @param {String} redemptionId ID of previously created redemption.
     * @param {module:api/RedemptionsApi~getRedemptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RedemptionsGetResponseBody}
     */
    getRedemption(redemptionId, callback) {
      let postBody = null;
      // verify the required parameter 'redemptionId' is set
      if (redemptionId === undefined || redemptionId === null) {
        throw new Error("Missing the required parameter 'redemptionId' when calling getRedemption");
      }

      let pathParams = {
        'redemptionId': redemptionId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RedemptionsGetResponseBody;
      return this.apiClient.callApi(
        '/v1/redemptions/{redemptionId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getVoucherRedemptions operation.
     * @callback module:api/RedemptionsApi~getVoucherRedemptionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/VouchersRedemptionGetResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Voucher's Redemptions
     * Retrieve the number of times a voucher was redeemed and each of the redemption details.
     * @param {String} code A **code** that identifies the voucher.
     * @param {module:api/RedemptionsApi~getVoucherRedemptionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/VouchersRedemptionGetResponseBody}
     */
    getVoucherRedemptions(code, callback) {
      let postBody = null;
      // verify the required parameter 'code' is set
      if (code === undefined || code === null) {
        throw new Error("Missing the required parameter 'code' when calling getVoucherRedemptions");
      }

      let pathParams = {
        'code': code
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VouchersRedemptionGetResponseBody;
      return this.apiClient.callApi(
        '/v1/vouchers/{code}/redemption', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listRedemptions operation.
     * @callback module:api/RedemptionsApi~listRedemptionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RedemptionsListResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Redemptions
     * Returns a list of redemptions previously created. The redemptions are returned in a sorted order, with the most recent redemptions appearing first. The response returns a list of redemptions of all vouchers.  # Filtering results The result can be narrowed according to specified (or default) filters, for example, you can sort redemptions by date: https://api.voucherify.io/v1/redemptions?limit 3&[created_at][before] 2017-09-08T13:52:18.227Z. A filter based on the object created_at field narrows down the results and lists redemptions done before or after a particular date time. You can use the following options: [created_at][after], [created_at][before]. A date value must be presented in ISO 8601 format (2016-11-16T14:14:31Z or 2016-11-16). An example: [created_at][before] 2017-09-08T13:52:18.227Z. # Failed Redemptions A redemption may fail for various reasons. You can figure out an exact reason from the failure_code: - resource_not_found - voucher with given code does not exist - voucher_not_active - voucher is not active yet (before start date) - voucher_expired - voucher has already expired (after expiration date) - voucher_disabled -  voucher has been disabled (active: false) - quantity_exceeded - vouchers redemptions limit has been exceeded - gift_amount_exceeded - gift amount has been exceeded - customer_rules_violated - customer did not match the segment - order_rules_violated - order did not match validation rules - invalid_order - order was specified incorrectly - invalid_amount - order amount was specified incorrectly - missing_amount - order amount was not specified - missing_order_items - order items were not specified - missing_customer - customer was not specified
     * @param {{
        limit?: Number
     
        page?: Number
     
        result?: String
     
        campaign?: String
     
        customer?: String
     
        order?: module:model/ParameterOrderListRedemptions
     
        createdAt?: module:model/ParameterCreatedBeforeAfter
     
        filters?: module:model/ParameterFiltersListRedemptions
     }} opts Parameters
     * @param {module:api/RedemptionsApi~listRedemptionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RedemptionsListResponseBody}
     */
    listRedemptions(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit'],
        'page': opts['page'],
        'result': opts['result'],
        'campaign': opts['campaign'],
        'customer': opts['customer'],
        'order': opts['order'],
        'created_at': opts['createdAt'],
        'filters': opts['filters']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = RedemptionsListResponseBody;
      return this.apiClient.callApi(
        '/v1/redemptions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the redeemStackedDiscounts operation.
     * @callback module:api/RedemptionsApi~redeemStackedDiscountsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RedemptionsRedeemResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Redeem Stackable Discounts
     * # How API returns calculated discounts and order amounts in the response In the table below, you can see the logic the API follows to calculate discounts and amounts:   API keys with a Merchant role cant use this endpoint.  ðŸ“˜ Rollbacks  You cant roll back a child redemption. When you call rollback on a stacked redemption, all child redemptions will be rolled back. You need to refer to a parent redemption ID in your [rollback request](/api-reference/redemptions/rollback-stackable-redemptions).      ðŸ“˜ Also available on client-side  This method is also accessible through public keys which you can use in client-sideâ€‹ apps: mobile and web browser apps. Go to the dedicated [endpoint](/api-reference/client-side/redeem-stackable-discounts-client-side) to learn more.  - Use X-Client-Application-Id as the application ID header.  - Use X-Client-Token as the appliction secret key header.  - Use client-side base URL.  - Use an origin header for your custom domain.
     * @param {{
        redemptionsRedeemRequestBody?: module:model/RedemptionsRedeemRequestBody
     }} opts Parameters
     * @param {module:api/RedemptionsApi~redeemStackedDiscountsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RedemptionsRedeemResponseBody}
     */
    redeemStackedDiscounts(opts, callback) {
      opts = opts || {};
      let postBody = opts['redemptionsRedeemRequestBody'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = RedemptionsRedeemResponseBody;
      return this.apiClient.callApi(
        '/v1/redemptions', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the rollbackRedemption operation.
     * @callback module:api/RedemptionsApi~rollbackRedemptionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RedemptionsRollbackCreateResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Rollback Redemption
     * Your business logic may include a case when you need to undo a redemption. You can revert a redemption by calling this API endpoint. This endpoint rolls back only single redemptions, meaning those that are not stacked. Stacked redemptions belong to a parent redemption. To roll back a parent redemption, including all of its individual redemptions, use the [POST Rollback Stackable Redemptions](/api-reference/redemptions/rollback-stackable-redemptions)  ðŸš§  You can roll back a redemption up to 3 months back.   # Effect  The operation  - creates a rollback entry in vouchers redemption history (redemption.redemption_entries) and  - gives 1 redemption back to the pool (decreases redeemed_quantity by 1).  # Returned funds  In case of *gift card vouchers*, this method returns funds back according to the source redemption. In case of *loyalty card vouchers*, this method returns points back according to the source redemption.
     * @param {String} redemptionId The original redemption ID to be rolled back (undone).
     * @param {{
        redemptionId: String
     
        reason?: String
     
        trackingId?: String
     
        redemptionsRollbackCreateRequestBody?: module:model/RedemptionsRollbackCreateRequestBody
     }} opts Parameters
     * @param {module:api/RedemptionsApi~rollbackRedemptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RedemptionsRollbackCreateResponseBody}
     */
    rollbackRedemption(redemptionId, opts, callback) {
      opts = opts || {};
      let postBody = opts['redemptionsRollbackCreateRequestBody'];
      // verify the required parameter 'redemptionId' is set
      if (redemptionId === undefined || redemptionId === null) {
        throw new Error("Missing the required parameter 'redemptionId' when calling rollbackRedemption");
      }

      let pathParams = {
        'redemptionId': redemptionId
      };
      let queryParams = {
        'reason': opts['reason'],
        'tracking_id': opts['trackingId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = RedemptionsRollbackCreateResponseBody;
      return this.apiClient.callApi(
        '/v1/redemptions/{redemptionId}/rollback', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the rollbackStackedRedemptions operation.
     * @callback module:api/RedemptionsApi~rollbackStackedRedemptionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RedemptionsRollbacksCreateResponseBody} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Rollback Stackable Redemptions
     * Rollback a stackable redemption. When you roll back a stacked redemption, all child redemptions will be rolled back. Provide the parent redemption ID as the path parameter. However, you can use this endpoint to roll back a single redemption that does not have a parent, similarly to [POST Rollback redemption](/api-reference/redemptions/rollback-redemption). ðŸš§   You can roll back a redemption up to 3 months back.
     * @param {String} parentRedemptionId Unique identifier of a parent redemption, e.g. r_JQfm73zWSJFQxs3bGxweYjgm.
     * @param {{
        parentRedemptionId: String
     
        reason?: String
     
        trackingId?: String
     
        redemptionsRollbacksCreateRequestBody?: module:model/RedemptionsRollbacksCreateRequestBody
     }} opts Parameters
     * @param {module:api/RedemptionsApi~rollbackStackedRedemptionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RedemptionsRollbacksCreateResponseBody}
     */
    rollbackStackedRedemptions(parentRedemptionId, opts, callback) {
      opts = opts || {};
      let postBody = opts['redemptionsRollbacksCreateRequestBody'];
      // verify the required parameter 'parentRedemptionId' is set
      if (parentRedemptionId === undefined || parentRedemptionId === null) {
        throw new Error("Missing the required parameter 'parentRedemptionId' when calling rollbackStackedRedemptions");
      }

      let pathParams = {
        'parentRedemptionId': parentRedemptionId
      };
      let queryParams = {
        'reason': opts['reason'],
        'tracking_id': opts['trackingId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-App-Id', 'X-App-Token', 'X-Voucherify-OAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = RedemptionsRollbacksCreateResponseBody;
      return this.apiClient.callApi(
        '/v1/redemptions/{parentRedemptionId}/rollbacks', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
